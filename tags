!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/0d560136/
ADDV	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define ADDV /;"	d
ADDV	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define ADDV /;"	d
ANDNOTV_R	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define ANDNOTV_R /;"	d
ANDNOTV_R	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define ANDNOTV_R /;"	d
ANDV_R	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define ANDV_R /;"	d
ANDV_R	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define ANDV_R /;"	d
AUGRIE_CUDA_HPP_	src/solvers/AugRieCUDA.h	/^#define AUGRIE_CUDA_HPP_$/;"	d
AUGRIE_CUDA_HPP_	submodules/swe_solvers/src/solver/AugRieCUDA.h	/^#define AUGRIE_CUDA_HPP_$/;"	d
AUGRIE_FUN_HPP	src/solvers/AugRieFun.hpp	/^#define AUGRIE_FUN_HPP$/;"	d
AUGRIE_FUN_HPP	submodules/swe_solvers/src/solver/AugRieFun.hpp	/^#define AUGRIE_FUN_HPP$/;"	d
AUGRIE_HPP_	src/solvers/AugRie.hpp	/^#define AUGRIE_HPP_$/;"	d
AUGRIE_HPP_	submodules/swe_solvers/src/solver/AugRie.hpp	/^#define AUGRIE_HPP_$/;"	d
AUGRIE_SIMD_HPP_	src/solvers/AugRie_SIMD.hpp	/^#define AUGRIE_SIMD_HPP_$/;"	d
AUGRIE_SIMD_HPP_	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^#define AUGRIE_SIMD_HPP_$/;"	d
Args	src/tools/args.hh	/^	Args(const std::string &description = "", bool addHelp = true)$/;"	f	class:tools::Args
Args	src/tools/args.hh	/^class Args$/;"	c	namespace:tools
Argument	src/tools/args.hh	/^	enum Argument$/;"	g	class:tools::Args
AugRie	src/solvers/AugRie.hpp	/^    AugRie(	T i_dryTolerance =                  (T) 0.01,$/;"	f	class:solver::AugRie
AugRie	src/solvers/AugRie.hpp	/^template <typename T> class solver::AugRie: public WavePropagation<T> {$/;"	c	class:solver
AugRie	submodules/swe_solvers/src/solver/AugRie.hpp	/^    AugRie(	T i_dryTolerance =                  (T) 0.01,$/;"	f	class:solver::AugRie
AugRie	submodules/swe_solvers/src/solver/AugRie.hpp	/^template <typename T> class solver::AugRie: public WavePropagation<T> {$/;"	c	class:solver
AugRieFun	src/solvers/AugRieFun.hpp	/^	AugRieFun(real i_dryTol = (real) 100,$/;"	f	class:solver::AugRieFun
AugRieFun	src/solvers/AugRieFun.hpp	/^class AugRieFun$/;"	c	namespace:solver
AugRieFun	submodules/swe_solvers/src/solver/AugRieFun.hpp	/^	AugRieFun(real i_dryTol = (real) 100,$/;"	f	class:solver::AugRieFun
AugRieFun	submodules/swe_solvers/src/solver/AugRieFun.hpp	/^class AugRieFun$/;"	c	namespace:solver
AugRie_SIMD	src/solvers/AugRie_SIMD.hpp	/^	AugRie_SIMD ($/;"	f	class:solver::AugRie_SIMD
AugRie_SIMD	src/solvers/AugRie_SIMD.hpp	/^class solver::AugRie_SIMD : public WavePropagation<real> {$/;"	c	class:solver
AugRie_SIMD	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	AugRie_SIMD ($/;"	f	class:solver::AugRie_SIMD
AugRie_SIMD	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^class solver::AugRie_SIMD : public WavePropagation<real> {$/;"	c	class:solver
BLENDV	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define BLENDV /;"	d
BLENDV	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define BLENDV /;"	d
BLENDV_I	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define BLENDV_I(/;"	d
BLENDV_I	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define BLENDV_I(/;"	d
BND_BOTTOM	src/types/Boundary.hh	/^	BND_BOTTOM,$/;"	e	enum:Boundary
BND_LEFT	src/types/Boundary.hh	/^	BND_LEFT,$/;"	e	enum:Boundary
BND_RIGHT	src/types/Boundary.hh	/^	BND_RIGHT,$/;"	e	enum:Boundary
BND_TOP	src/types/Boundary.hh	/^	BND_TOP$/;"	e	enum:Boundary
BlockConnectInterface	src/types/BlockConnectInterface.hh	/^struct BlockConnectInterface {$/;"	s
Boundary	src/types/Boundary.hh	/^typedef enum Boundary {$/;"	g
Boundary	src/types/Boundary.hh	/^} Boundary;$/;"	t	typeref:enum:Boundary
BoundarySize	src/writer/Writer.hh	/^struct BoundarySize {$/;"	s
BoundaryType	src/types/Boundary.hh	/^typedef enum BoundaryType {$/;"	g
BoundaryType	src/types/Boundary.hh	/^} BoundaryType;$/;"	t	typeref:enum:BoundaryType
Bx	src/blocks/rusanov/SWE_RusanovBlock.hh	/^    Float2D Bx;$/;"	m	class:SWE_RusanovBlock	typeref:typename:Float2D
Bxd	src/blocks/rusanov/SWE_RusanovBlockCUDA.hh	/^    float* Bxd;$/;"	m	class:SWE_RusanovBlockCUDA	typeref:typename:float *
By	src/blocks/rusanov/SWE_RusanovBlock.hh	/^    Float2D By;$/;"	m	class:SWE_RusanovBlock	typeref:typename:Float2D
Byd	src/blocks/rusanov/SWE_RusanovBlockCUDA.hh	/^    float* Byd;$/;"	m	class:SWE_RusanovBlockCUDA	typeref:typename:float *
CAMERA_H	src/opengl/camera.h	/^#define CAMERA_H$/;"	d
CAST_INT_TO_REAL_V	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define CAST_INT_TO_REAL_V /;"	d
CAST_INT_TO_REAL_V	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define CAST_INT_TO_REAL_V /;"	d
CAST_REAL_TO_INT_V	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define CAST_REAL_TO_INT_V /;"	d
CAST_REAL_TO_INT_V	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define CAST_REAL_TO_INT_V /;"	d
CBase_SWE_DimensionalSplittingCharm	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^typedef CBaseT1<ArrayElementT<CkIndex1D>, CProxy_SWE_DimensionalSplittingCharm>CBase_SWE_Dimensi/;"	t	typeref:typename:CBaseT1<ArrayElementT<CkIndex1D>,CProxy_SWE_DimensionalSplittingCharm>
CBase_swe_charm	src/examples/swe_charm.decl.h	/^typedef CBaseT1<Chare, CProxy_swe_charm>CBase_swe_charm;$/;"	t	typeref:typename:CBaseT1<Chare,CProxy_swe_charm>
CMP_EQ_I	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define CMP_EQ_I /;"	d
CMP_EQ_I	src/solvers/SIMD_DEFINITIONS.hpp	/^	static inline __m256i CMP_EQ_I(const __m256i a, const __m256i b)$/;"	f	typeref:typename:__m256i
CMP_EQ_I	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define CMP_EQ_I /;"	d
CMP_EQ_I	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	static inline __m256i CMP_EQ_I(const __m256i a, const __m256i b)$/;"	f	typeref:typename:__m256i
CMP_EQ_R	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define CMP_EQ_R /;"	d
CMP_EQ_R	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define CMP_EQ_R(/;"	d
CMP_EQ_R	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define CMP_EQ_R /;"	d
CMP_EQ_R	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define CMP_EQ_R(/;"	d
CMP_GE	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define CMP_GE /;"	d
CMP_GE	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define CMP_GE(/;"	d
CMP_GE	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define CMP_GE /;"	d
CMP_GE	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define CMP_GE(/;"	d
CMP_GT	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define CMP_GT /;"	d
CMP_GT	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define CMP_GT(/;"	d
CMP_GT	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define CMP_GT /;"	d
CMP_GT	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define CMP_GT(/;"	d
CMP_LE	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define CMP_LE /;"	d
CMP_LE	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define CMP_LE(/;"	d
CMP_LE	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define CMP_LE /;"	d
CMP_LE	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define CMP_LE(/;"	d
CMP_LT	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define CMP_LT /;"	d
CMP_LT	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define CMP_LT(/;"	d
CMP_LT	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define CMP_LT /;"	d
CMP_LT	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define CMP_LT(/;"	d
CMessage_copyLayer	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^class CMessage_copyLayer:public CkMessage{$/;"	c
CMessage_copyLayer	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^CMessage_copyLayer::CMessage_copyLayer() {$/;"	f	class:CMessage_copyLayer
COMPONENTS_HPP_	submodules/swe_solvers/src/unit_tests/ComponentsTest.h	/^#define COMPONENTS_HPP_$/;"	d
CONNECT	src/types/Boundary.hh	/^	CONNECT,$/;"	e	enum:BoundaryType
CONTROLLER_H	src/opengl/controller.h	/^#define CONTROLLER_H$/;"	d
COSTS_ADDS	src/solvers/SIMD_COSTS.hpp	/^#define COSTS_ADDS	/;"	d
COSTS_ADDS	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^#define COSTS_ADDS	/;"	d
COSTS_ADDV	src/solvers/SIMD_COSTS.hpp	/^	#define COSTS_ADDV	/;"	d
COSTS_ADDV	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^	#define COSTS_ADDV	/;"	d
COSTS_ANDNOTV_R	src/solvers/SIMD_COSTS.hpp	/^	#define COSTS_ANDNOTV_R	/;"	d
COSTS_ANDNOTV_R	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^	#define COSTS_ANDNOTV_R	/;"	d
COSTS_ANDS	src/solvers/SIMD_COSTS.hpp	/^#define COSTS_ANDS	/;"	d
COSTS_ANDS	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^#define COSTS_ANDS	/;"	d
COSTS_ANDV_R	src/solvers/SIMD_COSTS.hpp	/^	#define COSTS_ANDV_R	/;"	d
COSTS_ANDV_R	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^	#define COSTS_ANDV_R	/;"	d
COSTS_BLENDV	src/solvers/SIMD_COSTS.hpp	/^	#define COSTS_BLENDV	/;"	d
COSTS_BLENDV	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^	#define COSTS_BLENDV	/;"	d
COSTS_BLENDV_I	src/solvers/SIMD_COSTS.hpp	/^	#define COSTS_BLENDV_I	/;"	d
COSTS_BLENDV_I	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^	#define COSTS_BLENDV_I	/;"	d
COSTS_CMPS	src/solvers/SIMD_COSTS.hpp	/^#define COSTS_CMPS	/;"	d
COSTS_CMPS	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^#define COSTS_CMPS	/;"	d
COSTS_CMP_EQ_I	src/solvers/SIMD_COSTS.hpp	/^	#define COSTS_CMP_EQ_I	/;"	d
COSTS_CMP_EQ_I	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^	#define COSTS_CMP_EQ_I	/;"	d
COSTS_CMP_GE	src/solvers/SIMD_COSTS.hpp	/^	#define COSTS_CMP_GE	/;"	d
COSTS_CMP_GE	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^	#define COSTS_CMP_GE	/;"	d
COSTS_CMP_GT	src/solvers/SIMD_COSTS.hpp	/^	#define COSTS_CMP_GT	/;"	d
COSTS_CMP_GT	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^	#define COSTS_CMP_GT	/;"	d
COSTS_CMP_LE	src/solvers/SIMD_COSTS.hpp	/^	#define COSTS_CMP_LE	/;"	d
COSTS_CMP_LE	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^	#define COSTS_CMP_LE	/;"	d
COSTS_CMP_LT	src/solvers/SIMD_COSTS.hpp	/^	#define COSTS_CMP_LT	/;"	d
COSTS_CMP_LT	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^	#define COSTS_CMP_LT	/;"	d
COSTS_DIVS	src/solvers/SIMD_COSTS.hpp	/^#define COSTS_DIVS	/;"	d
COSTS_DIVS	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^#define COSTS_DIVS	/;"	d
COSTS_DIVV	src/solvers/SIMD_COSTS.hpp	/^	#define COSTS_DIVV	/;"	d
COSTS_DIVV	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^	#define COSTS_DIVV	/;"	d
COSTS_FABS	src/solvers/SIMD_COSTS.hpp	/^	#define COSTS_FABS	/;"	d
COSTS_FABS	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^	#define COSTS_FABS	/;"	d
COSTS_FABSS	src/solvers/SIMD_COSTS.hpp	/^#define COSTS_FABSS	/;"	d
COSTS_FABSS	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^#define COSTS_FABSS	/;"	d
COSTS_LOADU	src/solvers/SIMD_COSTS.hpp	/^	#define COSTS_LOADU	/;"	d
COSTS_LOADU	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^	#define COSTS_LOADU	/;"	d
COSTS_MAXS	src/solvers/SIMD_COSTS.hpp	/^#define COSTS_MAXS	/;"	d
COSTS_MAXS	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^#define COSTS_MAXS	/;"	d
COSTS_MAXV	src/solvers/SIMD_COSTS.hpp	/^	#define COSTS_MAXV	/;"	d
COSTS_MAXV	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^	#define COSTS_MAXV	/;"	d
COSTS_MINS	src/solvers/SIMD_COSTS.hpp	/^#define COSTS_MINS	/;"	d
COSTS_MINS	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^#define COSTS_MINS	/;"	d
COSTS_MINV	src/solvers/SIMD_COSTS.hpp	/^	#define COSTS_MINV	/;"	d
COSTS_MINV	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^	#define COSTS_MINV	/;"	d
COSTS_MOVEMASK	src/solvers/SIMD_COSTS.hpp	/^	#define COSTS_MOVEMASK	/;"	d
COSTS_MOVEMASK	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^	#define COSTS_MOVEMASK	/;"	d
COSTS_MULS	src/solvers/SIMD_COSTS.hpp	/^#define COSTS_MULS	/;"	d
COSTS_MULS	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^#define COSTS_MULS	/;"	d
COSTS_MULV	src/solvers/SIMD_COSTS.hpp	/^	#define COSTS_MULV	/;"	d
COSTS_MULV	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^	#define COSTS_MULV	/;"	d
COSTS_NOTV_I	src/solvers/SIMD_COSTS.hpp	/^	#define COSTS_NOTV_I	/;"	d
COSTS_NOTV_I	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^	#define COSTS_NOTV_I	/;"	d
COSTS_NOTV_R	src/solvers/SIMD_COSTS.hpp	/^	#define COSTS_NOTV_R	/;"	d
COSTS_NOTV_R	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^	#define COSTS_NOTV_R	/;"	d
COSTS_ORS	src/solvers/SIMD_COSTS.hpp	/^#define COSTS_ORS	/;"	d
COSTS_ORS	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^#define COSTS_ORS	/;"	d
COSTS_ORV_I	src/solvers/SIMD_COSTS.hpp	/^	#define COSTS_ORV_I	/;"	d
COSTS_ORV_I	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^	#define COSTS_ORV_I	/;"	d
COSTS_ORV_R	src/solvers/SIMD_COSTS.hpp	/^	#define COSTS_ORV_R	/;"	d
COSTS_ORV_R	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^	#define COSTS_ORV_R	/;"	d
COSTS_SETV_I	src/solvers/SIMD_COSTS.hpp	/^	#define COSTS_SETV_I	/;"	d
COSTS_SETV_I	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^	#define COSTS_SETV_I	/;"	d
COSTS_SETV_R	src/solvers/SIMD_COSTS.hpp	/^	#define COSTS_SETV_R	/;"	d
COSTS_SETV_R	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^	#define COSTS_SETV_R	/;"	d
COSTS_SHIFT_LEFT	src/solvers/SIMD_COSTS.hpp	/^	#define COSTS_SHIFT_LEFT	/;"	d
COSTS_SHIFT_LEFT	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^	#define COSTS_SHIFT_LEFT	/;"	d
COSTS_SQRTS	src/solvers/SIMD_COSTS.hpp	/^#define COSTS_SQRTS	/;"	d
COSTS_SQRTS	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^#define COSTS_SQRTS	/;"	d
COSTS_SQRTV	src/solvers/SIMD_COSTS.hpp	/^	#define COSTS_SQRTV	/;"	d
COSTS_SQRTV	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^	#define COSTS_SQRTV	/;"	d
COSTS_STOREU	src/solvers/SIMD_COSTS.hpp	/^	#define COSTS_STOREU	/;"	d
COSTS_STOREU	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^	#define COSTS_STOREU	/;"	d
COSTS_SUBS	src/solvers/SIMD_COSTS.hpp	/^#define COSTS_SUBS	/;"	d
COSTS_SUBS	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^#define COSTS_SUBS	/;"	d
COSTS_SUBV	src/solvers/SIMD_COSTS.hpp	/^	#define COSTS_SUBV	/;"	d
COSTS_SUBV	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^	#define COSTS_SUBV	/;"	d
COSTS_XORV_R	src/solvers/SIMD_COSTS.hpp	/^	#define COSTS_XORV_R	/;"	d
COSTS_XORV_R	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^	#define COSTS_XORV_R	/;"	d
COSTS_ZEROV_I	src/solvers/SIMD_COSTS.hpp	/^	#define COSTS_ZEROV_I	/;"	d
COSTS_ZEROV_I	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^	#define COSTS_ZEROV_I	/;"	d
COSTS_ZEROV_R	src/solvers/SIMD_COSTS.hpp	/^	#define COSTS_ZEROV_R	/;"	d
COSTS_ZEROV_R	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^	#define COSTS_ZEROV_R	/;"	d
CProxyElement_SWE_DimensionalSplittingCharm	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    CProxyElement_SWE_DimensionalSplittingCharm(const ArrayElement *e) : CProxyElement_ArrayElem/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm
CProxyElement_SWE_DimensionalSplittingCharm	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    CProxyElement_SWE_DimensionalSplittingCharm(const CkArrayID &aid,const CkArrayIndex &idx)$/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm
CProxyElement_SWE_DimensionalSplittingCharm	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    CProxyElement_SWE_DimensionalSplittingCharm(const CkArrayID &aid,const CkArrayIndex &idx,CK_/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm
CProxyElement_SWE_DimensionalSplittingCharm	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    CProxyElement_SWE_DimensionalSplittingCharm(const CkArrayID &aid,const CkArrayIndex1D &idx)$/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm
CProxyElement_SWE_DimensionalSplittingCharm	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    CProxyElement_SWE_DimensionalSplittingCharm(const CkArrayID &aid,const CkArrayIndex1D &idx,C/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm
CProxyElement_SWE_DimensionalSplittingCharm	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    CProxyElement_SWE_DimensionalSplittingCharm(void) {$/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm
CProxyElement_SWE_DimensionalSplittingCharm	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^ class CProxyElement_SWE_DimensionalSplittingCharm : public CProxyElement_ArrayElement{$/;"	c
CProxySection_SWE_DimensionalSplittingCharm	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    CProxySection_SWE_DimensionalSplittingCharm(const CkArrayID &aid, CkArrayIndex *elems, int n/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm
CProxySection_SWE_DimensionalSplittingCharm	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    CProxySection_SWE_DimensionalSplittingCharm(const CkSectionID &sid)  $/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm
CProxySection_SWE_DimensionalSplittingCharm	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    CProxySection_SWE_DimensionalSplittingCharm(int n, const CkArrayID *aid, CkArrayIndex const /;"	f	class:CProxySection_SWE_DimensionalSplittingCharm
CProxySection_SWE_DimensionalSplittingCharm	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    CProxySection_SWE_DimensionalSplittingCharm(void) {$/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm
CProxySection_SWE_DimensionalSplittingCharm	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^ class CProxySection_SWE_DimensionalSplittingCharm : public CProxySection_ArrayElement{$/;"	c
CProxy_SWE_DimensionalSplittingCharm	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    CProxy_SWE_DimensionalSplittingCharm(const ArrayElement *e) : CProxy_ArrayElement(e){$/;"	f	class:CProxy_SWE_DimensionalSplittingCharm
CProxy_SWE_DimensionalSplittingCharm	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    CProxy_SWE_DimensionalSplittingCharm(const CkArrayID &aid) $/;"	f	class:CProxy_SWE_DimensionalSplittingCharm
CProxy_SWE_DimensionalSplittingCharm	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    CProxy_SWE_DimensionalSplittingCharm(void) {$/;"	f	class:CProxy_SWE_DimensionalSplittingCharm
CProxy_SWE_DimensionalSplittingCharm	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^ class CProxy_SWE_DimensionalSplittingCharm : public CProxy_ArrayElement{$/;"	c
CProxy_swe_charm	src/examples/swe_charm.decl.h	/^    CProxy_swe_charm(CkChareID __cid) : CProxy_Chare(__cid){  }$/;"	f	class:CProxy_swe_charm
CProxy_swe_charm	src/examples/swe_charm.decl.h	/^    CProxy_swe_charm(const Chare *c) : CProxy_Chare(c){  }$/;"	f	class:CProxy_swe_charm
CProxy_swe_charm	src/examples/swe_charm.decl.h	/^    CProxy_swe_charm(void) {};$/;"	f	class:CProxy_swe_charm
CProxy_swe_charm	src/examples/swe_charm.decl.h	/^class CProxy_swe_charm:public CProxy_Chare{$/;"	c
CProxy_swe_charm	src/examples/swe_charm.def.h	/^  CProxy_swe_charm::CProxy_swe_charm(CkArgMsg* impl_msg, int impl_onPE)$/;"	f	class:CProxy_swe_charm
CUDANVCCSharedObjectEmitter	CudaTool.py	/^def CUDANVCCSharedObjectEmitter(target, source, env):$/;"	f
CUDANVCCStaticObjectEmitter	CudaTool.py	/^def CUDANVCCStaticObjectEmitter(target, source, env):$/;"	f
CUDAScanner	CudaTool.py	/^CUDAScanner = SCons.Scanner.C.CScanner()$/;"	v
Camera	src/opengl/camera.cpp	/^Camera::Camera(const char* window_title)$/;"	f	class:Camera
Camera	src/opengl/camera.h	/^class Camera {$/;"	c
CkIndex_SWE_DimensionalSplittingCharm	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^class CkIndex_SWE_DimensionalSplittingCharm:public CkIndex_ArrayElement{$/;"	c
CkIndex_swe_charm	src/examples/swe_charm.decl.h	/^class CkIndex_swe_charm:public CkIndex_Chare{$/;"	c
CkRegisterMainModule	src/examples/swe_charm.def.h	/^extern "C" void CkRegisterMainModule(void) {$/;"	f	typeref:typename:void
Closure_SWE_DimensionalSplittingCharm	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^class Closure_SWE_DimensionalSplittingCharm {$/;"	c
Closure_swe_charm	src/examples/swe_charm.decl.h	/^class Closure_swe_charm {$/;"	c
ComponentsTest	submodules/swe_solvers/src/unit_tests/ComponentsTest.cpp	/^ComponentsTest::ComponentsTest():$/;"	f	class:ComponentsTest
ComponentsTest	submodules/swe_solvers/src/unit_tests/ComponentsTest.h	/^class ComponentsTest {$/;"	c
Controller	src/opengl/controller.cpp	/^Controller::Controller(Simulation* sim, Visualization* vis) {$/;"	f	class:Controller
Controller	src/opengl/controller.h	/^class Controller {$/;"	c
DEFAULT_NX	src/opengl/simulation.cu	/^#define DEFAULT_NX /;"	d	file:
DEFAULT_NY	src/opengl/simulation.cu	/^#define DEFAULT_NY /;"	d	file:
DIVV	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define DIVV /;"	d
DIVV	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define DIVV /;"	d
Documentation	README.md	/^Documentation$/;"	s
DrawBathymetry	src/opengl/visualization.cpp	/^void Visualization::DrawBathymetry() {$/;"	f	class:Visualization	typeref:typename:void
DrawWaterSurface	src/opengl/visualization.cpp	/^void Visualization::DrawWaterSurface()$/;"	f	class:Visualization	typeref:typename:void
DryDry	src/solvers/AugRieCUDA.h	/^const integer DryDry = 0;$/;"	v	typeref:typename:const integer
DryDry	src/solvers/AugRieFun.hpp	/^const int DryDry = 0;$/;"	v	typeref:typename:const int
DryDry	src/solvers/AugRie_SIMD.hpp	/^	static const integer DryDry = 0;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer
DryDry	src/solvers/WavePropagation.hpp	/^      DryDry,               \/**< Both cells are dry. *\/$/;"	e	enum:solver::WavePropagation::WetDryState
DryDry	submodules/swe_solvers/src/solver/AugRieCUDA.h	/^const integer DryDry = 0;$/;"	v	typeref:typename:const integer
DryDry	submodules/swe_solvers/src/solver/AugRieFun.hpp	/^const int DryDry = 0;$/;"	v	typeref:typename:const int
DryDry	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	static const integer DryDry = 0;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer
DryDry	submodules/swe_solvers/src/solver/WavePropagation.hpp	/^      DryDry,               \/**< Both cells are dry. *\/$/;"	e	enum:solver::WavePropagation::WetDryState
DryDry_V	src/solvers/AugRie_SIMD.hpp	/^	const integer_vector DryDry_V;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer_vector
DryDry_V	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	const integer_vector DryDry_V;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer_vector
DrySingleRarefaction	src/solvers/AugRie.hpp	/^      DrySingleRarefaction,  \/**< 1st wave family: contact discontinuity; 2nd wave family: rare/;"	e	enum:solver::AugRie::RiemannStructure
DrySingleRarefaction	src/solvers/AugRieCUDA.h	/^const integer DrySingleRarefaction = 0;$/;"	v	typeref:typename:const integer
DrySingleRarefaction	src/solvers/AugRieFun.hpp	/^const int DrySingleRarefaction = 0;$/;"	v	typeref:typename:const int
DrySingleRarefaction	src/solvers/AugRie_SIMD.hpp	/^	static const integer DrySingleRarefaction = SHIFT_SIGN_RIGHT(5);$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer
DrySingleRarefaction	submodules/swe_solvers/src/solver/AugRie.hpp	/^      DrySingleRarefaction,  \/**< 1st wave family: contact discontinuity; 2nd wave family: rare/;"	e	enum:solver::AugRie::RiemannStructure
DrySingleRarefaction	submodules/swe_solvers/src/solver/AugRieCUDA.h	/^const integer DrySingleRarefaction = 0;$/;"	v	typeref:typename:const integer
DrySingleRarefaction	submodules/swe_solvers/src/solver/AugRieFun.hpp	/^const int DrySingleRarefaction = 0;$/;"	v	typeref:typename:const int
DrySingleRarefaction	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	static const integer DrySingleRarefaction = SHIFT_SIGN_RIGHT(5);$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer
DrySingleRarefaction_V	src/solvers/AugRie_SIMD.hpp	/^	const integer_vector DrySingleRarefaction_V;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer_vector
DrySingleRarefaction_V	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	const integer_vector DrySingleRarefaction_V;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer_vector
DryWetInundation	src/solvers/AugRieCUDA.h	/^const integer DryWetInundation = 5;$/;"	v	typeref:typename:const integer
DryWetInundation	src/solvers/AugRieFun.hpp	/^const int DryWetInundation = 5;$/;"	v	typeref:typename:const int
DryWetInundation	src/solvers/AugRie_SIMD.hpp	/^	static const integer DryWetInundation = SHIFT_SIGN_RIGHT(5);$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer
DryWetInundation	src/solvers/WavePropagation.hpp	/^      DryWetInundation,     \/**< 1st cell: dry, 2nd cell: wet. 1st cell lies lower than the 2nd/;"	e	enum:solver::WavePropagation::WetDryState
DryWetInundation	submodules/swe_solvers/src/solver/AugRieCUDA.h	/^const integer DryWetInundation = 5;$/;"	v	typeref:typename:const integer
DryWetInundation	submodules/swe_solvers/src/solver/AugRieFun.hpp	/^const int DryWetInundation = 5;$/;"	v	typeref:typename:const int
DryWetInundation	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	static const integer DryWetInundation = SHIFT_SIGN_RIGHT(5);$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer
DryWetInundation	submodules/swe_solvers/src/solver/WavePropagation.hpp	/^      DryWetInundation,     \/**< 1st cell: dry, 2nd cell: wet. 1st cell lies lower than the 2nd/;"	e	enum:solver::WavePropagation::WetDryState
DryWetInundation_V	src/solvers/AugRie_SIMD.hpp	/^	const integer_vector DryWetInundation_V;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer_vector
DryWetInundation_V	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	const integer_vector DryWetInundation_V;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer_vector
DryWetWall	src/solvers/AugRieCUDA.h	/^const integer DryWetWall = 6;$/;"	v	typeref:typename:const integer
DryWetWall	src/solvers/AugRieFun.hpp	/^const int DryWetWall = 6;$/;"	v	typeref:typename:const int
DryWetWall	src/solvers/AugRie_SIMD.hpp	/^	static const integer DryWetWall = SHIFT_SIGN_RIGHT(6);$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer
DryWetWall	src/solvers/WavePropagation.hpp	/^      DryWetWall,           \/**< 1st cell: dry, 2nd cell: wet. 1st cell lies higher than the 2n/;"	e	enum:solver::WavePropagation::WetDryState
DryWetWall	submodules/swe_solvers/src/solver/AugRieCUDA.h	/^const integer DryWetWall = 6;$/;"	v	typeref:typename:const integer
DryWetWall	submodules/swe_solvers/src/solver/AugRieFun.hpp	/^const int DryWetWall = 6;$/;"	v	typeref:typename:const int
DryWetWall	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	static const integer DryWetWall = SHIFT_SIGN_RIGHT(6);$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer
DryWetWall	submodules/swe_solvers/src/solver/WavePropagation.hpp	/^      DryWetWall,           \/**< 1st cell: dry, 2nd cell: wet. 1st cell lies higher than the 2n/;"	e	enum:solver::WavePropagation::WetDryState
DryWetWallInundation	src/solvers/AugRieCUDA.h	/^const integer DryWetWallInundation = 7;$/;"	v	typeref:typename:const integer
DryWetWallInundation	src/solvers/AugRieFun.hpp	/^const int DryWetWallInundation = 7;$/;"	v	typeref:typename:const int
DryWetWallInundation	src/solvers/AugRie_SIMD.hpp	/^	static const integer DryWetWallInundation = SHIFT_SIGN_RIGHT(7);$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer
DryWetWallInundation	src/solvers/WavePropagation.hpp	/^      DryWetWallInundation  \/**< 1st cell: dry, 2nd cell: wet. 1st cell lies higher than the 2n/;"	e	enum:solver::WavePropagation::WetDryState
DryWetWallInundation	submodules/swe_solvers/src/solver/AugRieCUDA.h	/^const integer DryWetWallInundation = 7;$/;"	v	typeref:typename:const integer
DryWetWallInundation	submodules/swe_solvers/src/solver/AugRieFun.hpp	/^const int DryWetWallInundation = 7;$/;"	v	typeref:typename:const int
DryWetWallInundation	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	static const integer DryWetWallInundation = SHIFT_SIGN_RIGHT(7);$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer
DryWetWallInundation	submodules/swe_solvers/src/solver/WavePropagation.hpp	/^      DryWetWallInundation  \/**< 1st cell: dry, 2nd cell: wet. 1st cell lies higher than the 2n/;"	e	enum:solver::WavePropagation::WetDryState
DryWetWallInundation_V	src/solvers/AugRie_SIMD.hpp	/^	const integer_vector DryWetWallInundation_V;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer_vector
DryWetWallInundation_V	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	const integer_vector DryWetWallInundation_V;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer_vector
DryWetWall_V	src/solvers/AugRie_SIMD.hpp	/^	const integer_vector DryWetWall_V;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer_vector
DryWetWall_V	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	const integer_vector DryWetWall_V;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer_vector
Error	src/tools/args.hh	/^		Error,$/;"	e	enum:tools::Args::Result
FABS	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define FABS /;"	d
FABS	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define FABS /;"	d
FLOAT32	src/solvers/AugRieCUDA.h	/^#define FLOAT32$/;"	d
FLOAT32	src/solvers/AugRie_SIMD.hpp	/^#define FLOAT32$/;"	d
FLOAT32	submodules/swe_solvers/src/solver/AugRieCUDA.h	/^#define FLOAT32$/;"	d
FLOAT32	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^#define FLOAT32$/;"	d
FWAVEVEC_HPP_	src/solvers/FWaveVec.hpp	/^#define FWAVEVEC_HPP_$/;"	d
FWAVEVEC_HPP_	submodules/swe_solvers/src/solver/FWaveVec.hpp	/^#define FWAVEVEC_HPP_$/;"	d
FWAVE_HPP_	src/solvers/FWave.hpp	/^#define FWAVE_HPP_$/;"	d
FWAVE_HPP_	submodules/swe_solvers/src/solver/FWave.hpp	/^#define FWAVE_HPP_$/;"	d
FWave	src/solvers/FWave.hpp	/^    FWave( T i_dryTolerance =  (T) 0.01,$/;"	f	class:solver::FWave
FWave	src/solvers/FWave.hpp	/^template <typename T> class solver::FWave: public WavePropagation<T> {$/;"	c	class:solver
FWave	submodules/swe_solvers/src/solver/FWave.hpp	/^    FWave( T i_dryTolerance =  (T) 0.01,$/;"	f	class:solver::FWave
FWave	submodules/swe_solvers/src/solver/FWave.hpp	/^template <typename T> class solver::FWave: public WavePropagation<T> {$/;"	c	class:solver
FWaveVec	src/solvers/FWaveVec.hpp	/^	FWaveVec(T i_dryTol = (T) 1.0,$/;"	f	class:solver::FWaveVec
FWaveVec	src/solvers/FWaveVec.hpp	/^class FWaveVec$/;"	c	namespace:solver
FWaveVec	submodules/swe_solvers/src/solver/FWaveVec.hpp	/^	FWaveVec(T i_dryTol = (T) 1.0,$/;"	f	class:solver::FWaveVec
FWaveVec	submodules/swe_solvers/src/solver/FWaveVec.hpp	/^class FWaveVec$/;"	c	namespace:solver
Fh	src/blocks/rusanov/SWE_RusanovBlock.hh	/^    Float2D Fh;$/;"	m	class:SWE_RusanovBlock	typeref:typename:Float2D
Fh	src/blocks/rusanov/SWE_RusanovBlockCUDA.hh	/^    Float2D Fh; $/;"	m	class:SWE_RusanovBlockCUDA	typeref:typename:Float2D
Fhd	src/blocks/rusanov/SWE_RusanovBlockCUDA.hh	/^    float* Fhd;$/;"	m	class:SWE_RusanovBlockCUDA	typeref:typename:float *
Fhu	src/blocks/rusanov/SWE_RusanovBlock.hh	/^    Float2D Fhu;$/;"	m	class:SWE_RusanovBlock	typeref:typename:Float2D
Fhu	src/blocks/rusanov/SWE_RusanovBlockCUDA.hh	/^    Float2D Fhu;$/;"	m	class:SWE_RusanovBlockCUDA	typeref:typename:Float2D
Fhud	src/blocks/rusanov/SWE_RusanovBlockCUDA.hh	/^    float* Fhud;$/;"	m	class:SWE_RusanovBlockCUDA	typeref:typename:float *
Fhv	src/blocks/rusanov/SWE_RusanovBlock.hh	/^    Float2D Fhv;$/;"	m	class:SWE_RusanovBlock	typeref:typename:Float2D
Fhv	src/blocks/rusanov/SWE_RusanovBlockCUDA.hh	/^    Float2D Fhv;$/;"	m	class:SWE_RusanovBlockCUDA	typeref:typename:Float2D
Fhvd	src/blocks/rusanov/SWE_RusanovBlockCUDA.hh	/^    float* Fhvd;$/;"	m	class:SWE_RusanovBlockCUDA	typeref:typename:float *
Float1D	src/tools/Float1D.hh	/^Float1D::Float1D() {}$/;"	f	class:Float1D
Float1D	src/tools/Float1D.hh	/^Float1D::Float1D(float* rawData, int size, int stride) :$/;"	f	class:Float1D
Float1D	src/tools/Float1D.hh	/^class Float1D {$/;"	c
Float2D	src/tools/Float2D.hh	/^		Float2D() {}$/;"	f	class:Float2D
Float2D	src/tools/Float2D.hh	/^		Float2D(int cols, int rows) :$/;"	f	class:Float2D
Float2D	src/tools/Float2D.hh	/^class Float2D {$/;"	c
Float2DNative	src/tools/Float2DNative.hh	/^		Float2DNative() :$/;"	f	class:Float2DNative
Float2DNative	src/tools/Float2DNative.hh	/^		Float2DNative(int cols, int rows) :$/;"	f	class:Float2DNative
Float2DNative	src/tools/Float2DNative.hh	/^class Float2DNative : public Float2D {$/;"	c
Float2DUpcxx	src/tools/Float2DUpcxx.hh	/^		Float2DUpcxx(int cols, int rows) :$/;"	f	class:Float2DUpcxx
Float2DUpcxx	src/tools/Float2DUpcxx.hh	/^class Float2DUpcxx : public Float2D {$/;"	c
GRID_XSIZE	src/examples/swe_opengl.cpp	/^#define GRID_XSIZE /;"	d	file:
GRID_YSIZE	src/examples/swe_opengl.cpp	/^#define GRID_YSIZE /;"	d	file:
Gh	src/blocks/rusanov/SWE_RusanovBlock.hh	/^    Float2D Gh;$/;"	m	class:SWE_RusanovBlock	typeref:typename:Float2D
Gh	src/blocks/rusanov/SWE_RusanovBlockCUDA.hh	/^    Float2D Gh; $/;"	m	class:SWE_RusanovBlockCUDA	typeref:typename:Float2D
Ghd	src/blocks/rusanov/SWE_RusanovBlockCUDA.hh	/^    float* Ghd;$/;"	m	class:SWE_RusanovBlockCUDA	typeref:typename:float *
Ghu	src/blocks/rusanov/SWE_RusanovBlock.hh	/^    Float2D Ghu;$/;"	m	class:SWE_RusanovBlock	typeref:typename:Float2D
Ghu	src/blocks/rusanov/SWE_RusanovBlockCUDA.hh	/^    Float2D Ghu;$/;"	m	class:SWE_RusanovBlockCUDA	typeref:typename:Float2D
Ghud	src/blocks/rusanov/SWE_RusanovBlockCUDA.hh	/^    float* Ghud;$/;"	m	class:SWE_RusanovBlockCUDA	typeref:typename:float *
Ghv	src/blocks/rusanov/SWE_RusanovBlock.hh	/^    Float2D Ghv;$/;"	m	class:SWE_RusanovBlock	typeref:typename:Float2D
Ghv	src/blocks/rusanov/SWE_RusanovBlockCUDA.hh	/^    Float2D Ghv;$/;"	m	class:SWE_RusanovBlockCUDA	typeref:typename:Float2D
Ghvd	src/blocks/rusanov/SWE_RusanovBlockCUDA.hh	/^    float* Ghvd;$/;"	m	class:SWE_RusanovBlockCUDA	typeref:typename:float *
HORIZONTAL_BOUNDARY	src/blocks/SWE_DimensionalSplittingMpi.hh	/^		MPI_Datatype HORIZONTAL_BOUNDARY;$/;"	m	class:SWE_DimensionalSplittingMpi	typeref:typename:MPI_Datatype
HYBRID_HPP_	src/solvers/Hybrid.hpp	/^#define HYBRID_HPP_$/;"	d
HYBRID_HPP_	submodules/swe_solvers/src/solver/Hybrid.hpp	/^#define HYBRID_HPP_$/;"	d
Help	src/tools/args.hh	/^		Help$/;"	e	enum:tools::Args::Result
Hybrid	src/solvers/Hybrid.hpp	/^    Hybrid( T i_dryTolerance =                  (T) 0.01,$/;"	f	class:solver::Hybrid
Hybrid	src/solvers/Hybrid.hpp	/^template <typename T> class solver::Hybrid {$/;"	c	class:solver
Hybrid	submodules/swe_solvers/src/solver/Hybrid.hpp	/^    Hybrid( T i_dryTolerance =                  (T) 0.01,$/;"	f	class:solver::Hybrid
Hybrid	submodules/swe_solvers/src/solver/Hybrid.hpp	/^template <typename T> class solver::Hybrid {$/;"	c	class:solver
INFLOW	src/types/Boundary.hh	/^	INFLOW,$/;"	e	enum:BoundaryType
Interface	src/examples/swe_upcxx.cpp	/^	typedef BlockConnectInterface<upcxx::global_ptr<float>> Interface;$/;"	t	function:main	typeref:typename:BlockConnectInterface<upcxx::global_ptr<float>>	file:
InterfaceRegistry	src/examples/swe_upcxx.cpp	/^	typedef upcxx::global_ptr<BlockConnectInterface<upcxx::global_ptr<float>>> InterfaceRegistry;$/;"	t	function:main	typeref:typename:upcxx::global_ptr<BlockConnectInterface<upcxx::global_ptr<float>>>	file:
LOADU	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define LOADU /;"	d
LOADU	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define LOADU /;"	d
LOGGER_HPP_	src/tools/Logger.hh	/^#define LOGGER_HPP_$/;"	d
License	README.md	/^License$/;"	s
Logger	src/tools/Logger.hh	/^    Logger( const int i_processRank = 0,$/;"	f	class:tools::Logger
Logger	src/tools/Logger.hh	/^class tools::Logger {$/;"	c	class:tools
MAXV	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define MAXV /;"	d
MAXV	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define MAXV /;"	d
MINV	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define MINV /;"	d
MINV	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define MINV /;"	d
MIN_TERM_SIZE	src/tools/ProgressBar.hh	/^	static const unsigned int MIN_TERM_SIZE = 80;$/;"	m	class:tools::ProgressBar	typeref:typename:const unsigned int
MOVEMASK	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define MOVEMASK /;"	d
MOVEMASK	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define MOVEMASK /;"	d
MPI_INCLUDED	src/writer/NetCdfWriter.hh	/^#define MPI_INCLUDED$/;"	d
MPI_INCLUDED_NETCDF	src/writer/NetCdfWriter.hh	/^#define MPI_INCLUDED_NETCDF$/;"	d
MPI_TAG_OUT_B_BOTTOM	src/Constants.hh	/^const int MPI_TAG_OUT_B_BOTTOM = 31;$/;"	v	typeref:typename:const int
MPI_TAG_OUT_B_LEFT	src/Constants.hh	/^const int MPI_TAG_OUT_B_LEFT = 11;$/;"	v	typeref:typename:const int
MPI_TAG_OUT_B_RIGHT	src/Constants.hh	/^const int MPI_TAG_OUT_B_RIGHT = 21;$/;"	v	typeref:typename:const int
MPI_TAG_OUT_B_TOP	src/Constants.hh	/^const int MPI_TAG_OUT_B_TOP = 41;$/;"	v	typeref:typename:const int
MPI_TAG_OUT_HU_BOTTOM	src/Constants.hh	/^const int MPI_TAG_OUT_HU_BOTTOM = 32;$/;"	v	typeref:typename:const int
MPI_TAG_OUT_HU_LEFT	src/Constants.hh	/^const int MPI_TAG_OUT_HU_LEFT = 12;$/;"	v	typeref:typename:const int
MPI_TAG_OUT_HU_RIGHT	src/Constants.hh	/^const int MPI_TAG_OUT_HU_RIGHT = 22;$/;"	v	typeref:typename:const int
MPI_TAG_OUT_HU_TOP	src/Constants.hh	/^const int MPI_TAG_OUT_HU_TOP = 42;$/;"	v	typeref:typename:const int
MPI_TAG_OUT_HV_BOTTOM	src/Constants.hh	/^const int MPI_TAG_OUT_HV_BOTTOM = 33;$/;"	v	typeref:typename:const int
MPI_TAG_OUT_HV_LEFT	src/Constants.hh	/^const int MPI_TAG_OUT_HV_LEFT = 13;$/;"	v	typeref:typename:const int
MPI_TAG_OUT_HV_RIGHT	src/Constants.hh	/^const int MPI_TAG_OUT_HV_RIGHT = 23;$/;"	v	typeref:typename:const int
MPI_TAG_OUT_HV_TOP	src/Constants.hh	/^const int MPI_TAG_OUT_HV_TOP = 43;$/;"	v	typeref:typename:const int
MPI_TAG_OUT_H_BOTTOM	src/Constants.hh	/^const int MPI_TAG_OUT_H_BOTTOM = 30;$/;"	v	typeref:typename:const int
MPI_TAG_OUT_H_LEFT	src/Constants.hh	/^const int MPI_TAG_OUT_H_LEFT = 10;$/;"	v	typeref:typename:const int
MPI_TAG_OUT_H_RIGHT	src/Constants.hh	/^const int MPI_TAG_OUT_H_RIGHT = 20;$/;"	v	typeref:typename:const int
MPI_TAG_OUT_H_TOP	src/Constants.hh	/^const int MPI_TAG_OUT_H_TOP = 40;$/;"	v	typeref:typename:const int
MULV	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define MULV /;"	d
MULV	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define MULV /;"	d
NETCDFWRITER_HH_	src/writer/NetCdfWriter.hh	/^#define NETCDFWRITER_HH_$/;"	d
NOTV_I	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define NOTV_I /;"	d
NOTV_I	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define NOTV_I /;"	d
NOTV_R	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define NOTV_R /;"	d
NOTV_R	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define NOTV_R /;"	d
NUMBER_OF_FWAVES	src/solvers/AugRieGeoClaw.hpp	/^#define NUMBER_OF_FWAVES /;"	d
NUMBER_OF_FWAVES	submodules/swe_solvers/src/solver/AugRieGeoClaw.hpp	/^#define NUMBER_OF_FWAVES /;"	d
NetCdfWriter	src/writer/NetCdfWriter.cpp	/^NetCdfWriter::NetCdfWriter( const std::string &i_baseName,$/;"	f	class:NetCdfWriter
NetCdfWriter	src/writer/NetCdfWriter.hh	/^class NetCdfWriter : public Writer {$/;"	c
No	src/tools/args.hh	/^		No = no_argument,$/;"	e	enum:tools::Args::Argument
ORV_I	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define ORV_I /;"	d
ORV_I	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define ORV_I(/;"	d
ORV_I	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define ORV_I /;"	d
ORV_I	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define ORV_I(/;"	d
ORV_R	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define ORV_R /;"	d
ORV_R	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define ORV_R /;"	d
OUTFLOW	src/types/Boundary.hh	/^	OUTFLOW,$/;"	e	enum:BoundaryType
Optional	src/tools/args.hh	/^		Optional = optional_argument$/;"	e	enum:tools::Args::Argument
PASSIVE	src/types/Boundary.hh	/^	PASSIVE$/;"	e	enum:BoundaryType
PROGRESSBAR_H	src/tools/ProgressBar.hh	/^#define PROGRESSBAR_H$/;"	d
PUPable_def	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^PUPable_def(SINGLE_ARG(Closure_SWE_DimensionalSplittingCharm::compute_2_closure))$/;"	f
PUPable_def	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^PUPable_def(SINGLE_ARG(Closure_SWE_DimensionalSplittingCharm::reduceWaveSpeed_8_closure))$/;"	f
PUPable_def	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^PUPable_def(SINGLE_ARG(Closure_SWE_DimensionalSplittingCharm::reductionTrigger_7_closure))$/;"	f
PUPable_def	src/examples/swe_charm.def.h	/^PUPable_def(SINGLE_ARG(Closure_swe_charm::done_2_closure))$/;"	f
PUPable_def	src/examples/swe_charm.def.h	/^PUPable_def(SINGLE_ARG(Closure_swe_charm::exit_3_closure))$/;"	f
ProgressBar	src/tools/ProgressBar.hh	/^	ProgressBar(float totalWork = 1., int rank = 0)$/;"	f	class:tools::ProgressBar
ProgressBar	src/tools/ProgressBar.hh	/^class ProgressBar$/;"	c	namespace:tools
RarefactionRarefaction	src/solvers/AugRie.hpp	/^      RarefactionRarefaction \/**< 1st wave family: rarefaction; 2nd wave family: rarefaction. */;"	e	enum:solver::AugRie::RiemannStructure
RarefactionRarefaction	src/solvers/AugRieCUDA.h	/^const integer RarefactionRarefaction = 5;$/;"	v	typeref:typename:const integer
RarefactionRarefaction	src/solvers/AugRieFun.hpp	/^const int RarefactionRarefaction = 5;$/;"	v	typeref:typename:const int
RarefactionRarefaction	src/solvers/AugRie_SIMD.hpp	/^	static const integer RarefactionRarefaction = SHIFT_SIGN_RIGHT(2);$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer
RarefactionRarefaction	submodules/swe_solvers/src/solver/AugRie.hpp	/^      RarefactionRarefaction \/**< 1st wave family: rarefaction; 2nd wave family: rarefaction. */;"	e	enum:solver::AugRie::RiemannStructure
RarefactionRarefaction	submodules/swe_solvers/src/solver/AugRieCUDA.h	/^const integer RarefactionRarefaction = 5;$/;"	v	typeref:typename:const integer
RarefactionRarefaction	submodules/swe_solvers/src/solver/AugRieFun.hpp	/^const int RarefactionRarefaction = 5;$/;"	v	typeref:typename:const int
RarefactionRarefaction	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	static const integer RarefactionRarefaction = SHIFT_SIGN_RIGHT(2);$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer
RarefactionRarefaction_V	src/solvers/AugRie_SIMD.hpp	/^	const integer_vector RarefactionRarefaction_V;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer_vector
RarefactionRarefaction_V	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	const integer_vector RarefactionRarefaction_V;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer_vector
RarefactionShock	src/solvers/AugRie.hpp	/^      RarefactionShock,      \/**< 1st wave family: rarefaction; 2nd wave family: shock. *\/$/;"	e	enum:solver::AugRie::RiemannStructure
RarefactionShock	src/solvers/AugRieCUDA.h	/^const integer RarefactionShock = 4;$/;"	v	typeref:typename:const integer
RarefactionShock	src/solvers/AugRieFun.hpp	/^const int RarefactionShock = 4;$/;"	v	typeref:typename:const int
RarefactionShock	src/solvers/AugRie_SIMD.hpp	/^	static const integer RarefactionShock = SHIFT_SIGN_RIGHT(4);$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer
RarefactionShock	submodules/swe_solvers/src/solver/AugRie.hpp	/^      RarefactionShock,      \/**< 1st wave family: rarefaction; 2nd wave family: shock. *\/$/;"	e	enum:solver::AugRie::RiemannStructure
RarefactionShock	submodules/swe_solvers/src/solver/AugRieCUDA.h	/^const integer RarefactionShock = 4;$/;"	v	typeref:typename:const integer
RarefactionShock	submodules/swe_solvers/src/solver/AugRieFun.hpp	/^const int RarefactionShock = 4;$/;"	v	typeref:typename:const int
RarefactionShock	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	static const integer RarefactionShock = SHIFT_SIGN_RIGHT(4);$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer
RarefactionShock_V	src/solvers/AugRie_SIMD.hpp	/^	const integer_vector RarefactionShock_V;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer_vector
RarefactionShock_V	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	const integer_vector RarefactionShock_V;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer_vector
RenderMode	src/opengl/visualization.h	/^typedef enum RenderMode {$/;"	g
RenderMode	src/opengl/visualization.h	/^} RenderMode;$/;"	t	typeref:enum:RenderMode
Required	src/tools/args.hh	/^		Required = required_argument,$/;"	e	enum:tools::Args::Argument
Result	src/tools/args.hh	/^	enum Result$/;"	g	class:tools::Args
RiemannStructure	src/solvers/AugRie.hpp	/^    enum RiemannStructure {$/;"	g	class:solver::AugRie
RiemannStructure	submodules/swe_solvers/src/solver/AugRie.hpp	/^    enum RiemannStructure {$/;"	g	class:solver::AugRie
SCENARIO_COUNT	src/opengl/controller.h	/^#define SCENARIO_COUNT /;"	d
SCREEN_HEIGHT	src/examples/swe_opengl.cpp	/^#define SCREEN_HEIGHT /;"	d	file:
SCREEN_WIDTH	src/examples/swe_opengl.cpp	/^#define SCREEN_WIDTH /;"	d	file:
SETV_I	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define SETV_I /;"	d
SETV_I	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define SETV_I /;"	d
SETV_R	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define SETV_R /;"	d
SETV_R	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define SETV_R /;"	d
SHADED	src/opengl/visualization.h	/^   SHADED, WIREFRAME, WATERSHADER$/;"	e	enum:RenderMode
SHADER_H	src/opengl/shader.h	/^#define SHADER_H$/;"	d
SHIFT_LEFT	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define SHIFT_LEFT /;"	d
SHIFT_LEFT	src/solvers/SIMD_DEFINITIONS.hpp	/^	static inline __m256i SHIFT_LEFT(const __m256i x, const integer y)$/;"	f	typeref:typename:__m256i
SHIFT_LEFT	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define SHIFT_LEFT /;"	d
SHIFT_LEFT	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	static inline __m256i SHIFT_LEFT(const __m256i x, const integer y)$/;"	f	typeref:typename:__m256i
SHIFT_SIGN_RIGHT	src/solvers/SIMD_TYPES.hpp	/^	#define SHIFT_SIGN_RIGHT(/;"	d
SHIFT_SIGN_RIGHT	submodules/swe_solvers/src/solver/SIMD_TYPES.hpp	/^	#define SHIFT_SIGN_RIGHT(/;"	d
SIMD_COSTS_H	src/solvers/SIMD_COSTS.hpp	/^#define  SIMD_COSTS_H$/;"	d
SIMD_COSTS_H	submodules/swe_solvers/src/solver/SIMD_COSTS.hpp	/^#define  SIMD_COSTS_H$/;"	d
SIMD_DEFINITIONS_H	src/solvers/SIMD_DEFINITIONS.hpp	/^#define  SIMD_DEFINITIONS_H$/;"	d
SIMD_DEFINITIONS_H	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^#define  SIMD_DEFINITIONS_H$/;"	d
SIMD_TYPES_H	src/solvers/SIMD_TYPES.hpp	/^#define  SIMD_TYPES_H$/;"	d
SIMD_TYPES_H	submodules/swe_solvers/src/solver/SIMD_TYPES.hpp	/^#define  SIMD_TYPES_H$/;"	d
SIMULATION_H	src/opengl/simulation.h	/^#define SIMULATION_H$/;"	d
SQRTV	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define SQRTV /;"	d
SQRTV	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define SQRTV /;"	d
STOREU	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define STOREU /;"	d
STOREU	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define STOREU /;"	d
SUBV	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define SUBV /;"	d
SUBV	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define SUBV /;"	d
SWE	README.md	/^SWE$/;"	c
SWE/src/examples	src/examples/README.md	/^SWE\/src\/examples$/;"	c
SWEASAGISCENARIO_VIS_HPP_	src/scenarios/SWE_AsagiScenario_vis.hh	/^#define SWEASAGISCENARIO_VIS_HPP_$/;"	d
SWEDIMENSIONALSPLITTINGMPI_HH_	src/blocks/SWE_DimensionalSplittingMpi.hh	/^#define SWEDIMENSIONALSPLITTINGMPI_HH_$/;"	d
SWEDIMENSIONALSPLITTINGUPCXX_HH_	src/blocks/SWE_DimensionalSplittingUpcxx.hh	/^#define SWEDIMENSIONALSPLITTINGUPCXX_HH_$/;"	d
SWEDIMENSIONALSPLITTING_HH_	src/blocks/SWE_DimensionalSplitting.hh	/^#define SWEDIMENSIONALSPLITTING_HH_$/;"	d
SWEWAVEPROPAGATIONBLOCKCUDAKERNELS_HH_	src/blocks/cuda/SWE_WavePropagationBlockCuda_kernels.hh	/^#define SWEWAVEPROPAGATIONBLOCKCUDAKERNELS_HH_$/;"	d
SWEWAVEPROPAGATIONBLOCKCUDA_HH_	src/blocks/cuda/SWE_WavePropagationBlockCuda.hh	/^#define SWEWAVEPROPAGATIONBLOCKCUDA_HH_$/;"	d
SWEWAVEPROPAGATIONBLOCK_HH_	src/blocks/SWE_WavePropagationBlock.hh	/^#define SWEWAVEPROPAGATIONBLOCK_HH_$/;"	d
SWEWAVEPROPAGATIONBLOCK_SIMD_HH_	src/blocks/SWE_WavePropagationBlockSIMD.hh	/^#define SWEWAVEPROPAGATIONBLOCK_SIMD_HH_$/;"	d
SWE_AsagiJapanSmallVisInfo	src/scenarios/SWE_AsagiScenario_vis.hh	/^class SWE_AsagiJapanSmallVisInfo : public SWE_VisInfo$/;"	c
SWE_AsagiScenario	src/scenarios/SWE_AsagiScenario.hh	/^		SWE_AsagiScenario($/;"	f	class:SWE_AsagiScenario
SWE_AsagiScenario	src/scenarios/SWE_AsagiScenario.hh	/^class SWE_AsagiScenario: public SWE_Scenario {$/;"	c
SWE_BathymetryDamBreakScenario	src/scenarios/SWE_simple_scenarios.hh	/^class SWE_BathymetryDamBreakScenario : public SWE_Scenario {$/;"	c
SWE_BathymetryDamBreakVisInfo	src/scenarios/SWE_simple_scenarios_vis.hh	/^class SWE_BathymetryDamBreakVisInfo : public SWE_VisInfo {$/;"	c
SWE_Block	src/blocks/SWE_Block.hh	/^SWE_Block<T>::SWE_Block() {$/;"	f	class:SWE_Block
SWE_Block	src/blocks/SWE_Block.hh	/^SWE_Block<T>::SWE_Block(int nx, int ny, float dx, float dy, float originX, float originY) :$/;"	f	class:SWE_Block
SWE_Block	src/blocks/SWE_Block.hh	/^class SWE_Block {$/;"	c
SWE_Block	src/blocks/SWE_Block_common.cpp	/^SWE_Block::SWE_Block(int l_nx, int l_ny, float l_dx, float l_dy) :$/;"	f	class:SWE_Block
SWE_Block	src/blocks/SWE_Block_common.hh	/^class SWE_Block {$/;"	c
SWE_Block1D	src/blocks/SWE_Block_common.hh	/^	SWE_Block1D(const Float1D& _h, const Float1D& _hu, const Float1D& _hv) :$/;"	f	struct:SWE_Block1D
SWE_Block1D	src/blocks/SWE_Block_common.hh	/^	SWE_Block1D(float* _h, float* _hu, float* _hv, int _size, int _stride=1) :$/;"	f	struct:SWE_Block1D
SWE_Block1D	src/blocks/SWE_Block_common.hh	/^struct SWE_Block1D {$/;"	s
SWE_Block1D	src/types/SWE_Block1D.hh	/^	SWE_Block1D(const Float1D& _h, const Float1D& _hu, const Float1D& _hv) :$/;"	f	struct:SWE_Block1D
SWE_Block1D	src/types/SWE_Block1D.hh	/^	SWE_Block1D(float* _h, float* _hu, float* _hv, int _size, int _stride=1) :$/;"	f	struct:SWE_Block1D
SWE_Block1D	src/types/SWE_Block1D.hh	/^struct SWE_Block1D {$/;"	s
SWE_Block1D	src/types/SWE_Block1DUpcxx.hh	/^struct SWE_Block1D {$/;"	s
SWE_Block1DUpcxx	src/types/SWE_Block1DUpcxx.hh	/^	SWE_Block1DUpcxx(const Float1D& h, const Float1D& hu, const Float1D& hv) :$/;"	f	struct:SWE_Block1D
SWE_Block1DUpcxx	src/types/SWE_Block1DUpcxx.hh	/^	SWE_Block1DUpcxx(float* _h, float* _hu, float* _hv, int _size, int _stride=1) :$/;"	f	struct:SWE_Block1D
SWE_BlockCUDA	src/blocks/cuda/SWE_BlockCUDA.cu	/^SWE_BlockCUDA::SWE_BlockCUDA($/;"	f	typeref:typename:SWE_BlockCUDA::
SWE_BlockCUDA	src/blocks/cuda/SWE_BlockCUDA.hh	/^class SWE_BlockCUDA : public SWE_Block {$/;"	c
SWE_DIMENSIONALSPLITTINGCHARM_HH	src/blocks/SWE_DimensionalSplittingCharm.hh	/^#define SWE_DIMENSIONALSPLITTINGCHARM_HH$/;"	d
SWE_DimensionalSplitting	src/blocks/SWE_DimensionalSplitting.cpp	/^SWE_DimensionalSplitting::SWE_DimensionalSplitting (int nx, int ny, float dx, float dy, float or/;"	f	class:SWE_DimensionalSplitting
SWE_DimensionalSplitting	src/blocks/SWE_DimensionalSplitting.hh	/^class SWE_DimensionalSplitting : public SWE_Block<Float2DNative> {$/;"	c
SWE_DimensionalSplittingCharm	src/blocks/SWE_DimensionalSplittingCharm.cpp	/^SWE_DimensionalSplittingCharm::SWE_DimensionalSplittingCharm(CkMigrateMessage *msg) {}$/;"	f	class:SWE_DimensionalSplittingCharm
SWE_DimensionalSplittingCharm	src/blocks/SWE_DimensionalSplittingCharm.cpp	/^SWE_DimensionalSplittingCharm::SWE_DimensionalSplittingCharm(int nx, int ny, float dx, float dy,/;"	f	class:SWE_DimensionalSplittingCharm
SWE_DimensionalSplittingCharm	src/blocks/SWE_DimensionalSplittingCharm.hh	/^class SWE_DimensionalSplittingCharm : public CBase_SWE_DimensionalSplittingCharm, public SWE_Blo/;"	c
SWE_DimensionalSplittingCharm_SDAG_CODE	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^#define SWE_DimensionalSplittingCharm_SDAG_CODE /;"	d
SWE_DimensionalSplittingMpi	src/blocks/SWE_DimensionalSplittingMpi.cpp	/^SWE_DimensionalSplittingMpi::SWE_DimensionalSplittingMpi(int nx, int ny, float dx, float dy, flo/;"	f	class:SWE_DimensionalSplittingMpi
SWE_DimensionalSplittingMpi	src/blocks/SWE_DimensionalSplittingMpi.hh	/^class SWE_DimensionalSplittingMpi : public SWE_Block<Float2DNative> {$/;"	c
SWE_DimensionalSplittingUpcxx	src/blocks/SWE_DimensionalSplittingUpcxx.cpp	/^SWE_DimensionalSplittingUpcxx::SWE_DimensionalSplittingUpcxx(int nx, int ny, float dx, float dy,/;"	f	class:SWE_DimensionalSplittingUpcxx
SWE_DimensionalSplittingUpcxx	src/blocks/SWE_DimensionalSplittingUpcxx.hh	/^class SWE_DimensionalSplittingUpcxx : public SWE_Block<Float2DUpcxx> {$/;"	c
SWE_RadialDamBreakScenario	src/scenarios/SWE_simple_scenarios.hh	/^class SWE_RadialDamBreakScenario : public SWE_Scenario {$/;"	c
SWE_RusanovBlock	src/blocks/rusanov/SWE_RusanovBlock.cpp	/^SWE_RusanovBlock::SWE_RusanovBlock(float _offsetX, float _offsetY) $/;"	f	class:SWE_RusanovBlock
SWE_RusanovBlock	src/blocks/rusanov/SWE_RusanovBlock.hh	/^class SWE_RusanovBlock : public SWE_Block {$/;"	c
SWE_RusanovBlockCUDA	src/blocks/rusanov/SWE_RusanovBlockCUDA.cu	/^SWE_RusanovBlockCUDA::SWE_RusanovBlockCUDA(float _offsetX, float _offsetY, const int i_cudaDevic/;"	f	typeref:typename:SWE_RusanovBlockCUDA::
SWE_RusanovBlockCUDA	src/blocks/rusanov/SWE_RusanovBlockCUDA.hh	/^class SWE_RusanovBlockCUDA : public SWE_BlockCUDA {$/;"	c
SWE_Scenario	src/scenarios/SWE_Scenario.hh	/^class SWE_Scenario {$/;"	c
SWE_SeaAtRestScenario	src/scenarios/SWE_simple_scenarios.hh	/^class SWE_SeaAtRestScenario : public SWE_Scenario {$/;"	c
SWE_SplashingConeScenario	src/scenarios/SWE_simple_scenarios.hh	/^class SWE_SplashingConeScenario : public SWE_Scenario {$/;"	c
SWE_SplashingPoolScenario	src/scenarios/SWE_simple_scenarios.hh	/^class SWE_SplashingPoolScenario : public SWE_Scenario {$/;"	c
SWE_TsunamiScenario	src/scenarios/SWE_TsunamiScenario.hh	/^		SWE_TsunamiScenario() {}$/;"	f	class:SWE_TsunamiScenario
SWE_TsunamiScenario	src/scenarios/SWE_TsunamiScenario.hh	/^		SWE_TsunamiScenario(const char* inputFileName, const char* displacementFileName) {$/;"	f	class:SWE_TsunamiScenario
SWE_TsunamiScenario	src/scenarios/SWE_TsunamiScenario.hh	/^class SWE_TsunamiScenario : public SWE_Scenario {$/;"	c
SWE_VisInfo	src/scenarios/SWE_VisInfo.hh	/^class SWE_VisInfo {$/;"	c
SWE_WAVEACCUMULATION_BLOCK_HH_	src/blocks/SWE_WaveAccumulationBlock.hh	/^#define SWE_WAVEACCUMULATION_BLOCK_HH_$/;"	d
SWE_WaveAccumulationBlock	src/blocks/SWE_WaveAccumulationBlock.cpp	/^SWE_WaveAccumulationBlock::SWE_WaveAccumulationBlock($/;"	f	class:SWE_WaveAccumulationBlock
SWE_WaveAccumulationBlock	src/blocks/SWE_WaveAccumulationBlock.hh	/^class SWE_WaveAccumulationBlock: public SWE_Block {$/;"	c
SWE_WavePropagationBlock	src/blocks/SWE_WavePropagationBlock.cpp	/^SWE_WavePropagationBlock::SWE_WavePropagationBlock (int l_nx, int l_ny, float l_dx, float l_dy) /;"	f	class:SWE_WavePropagationBlock
SWE_WavePropagationBlock	src/blocks/SWE_WavePropagationBlock.hh	/^class SWE_WavePropagationBlock: public SWE_Block {$/;"	c
SWE_WavePropagationBlockCuda	src/blocks/cuda/SWE_WavePropagationBlockCuda.cu	/^SWE_WavePropagationBlockCuda::SWE_WavePropagationBlockCuda($/;"	f	typeref:typename:SWE_WavePropagationBlockCuda::
SWE_WavePropagationBlockCuda	src/blocks/cuda/SWE_WavePropagationBlockCuda.hh	/^class SWE_WavePropagationBlockCuda: public SWE_BlockCUDA {$/;"	c
SWE_WavePropagationBlockSIMD	src/blocks/SWE_WavePropagationBlockSIMD.cpp	/^SWE_WavePropagationBlockSIMD::SWE_WavePropagationBlockSIMD (int l_nx, int l_ny, float l_dx, floa/;"	f	class:SWE_WavePropagationBlockSIMD
SWE_WavePropagationBlockSIMD	src/blocks/SWE_WavePropagationBlockSIMD.hh	/^class SWE_WavePropagationBlockSIMD : public SWE_Block {$/;"	c
Shader	src/opengl/shader.cpp	/^Shader::Shader(char const * vertexShaderFile, char const * fragmentShaderFile)$/;"	f	class:Shader
Shader	src/opengl/shader.h	/^class Shader {$/;"	c
ShockRarefaction	src/solvers/AugRie.hpp	/^      ShockRarefaction,      \/**< 1st wave family: shock; 2nd wave family: rarefaction. *\/$/;"	e	enum:solver::AugRie::RiemannStructure
ShockRarefaction	src/solvers/AugRieCUDA.h	/^const integer ShockRarefaction = 3;$/;"	v	typeref:typename:const integer
ShockRarefaction	src/solvers/AugRieFun.hpp	/^const int ShockRarefaction = 3;$/;"	v	typeref:typename:const int
ShockRarefaction	src/solvers/AugRie_SIMD.hpp	/^	static const integer ShockRarefaction = SHIFT_SIGN_RIGHT(3);$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer
ShockRarefaction	submodules/swe_solvers/src/solver/AugRie.hpp	/^      ShockRarefaction,      \/**< 1st wave family: shock; 2nd wave family: rarefaction. *\/$/;"	e	enum:solver::AugRie::RiemannStructure
ShockRarefaction	submodules/swe_solvers/src/solver/AugRieCUDA.h	/^const integer ShockRarefaction = 3;$/;"	v	typeref:typename:const integer
ShockRarefaction	submodules/swe_solvers/src/solver/AugRieFun.hpp	/^const int ShockRarefaction = 3;$/;"	v	typeref:typename:const int
ShockRarefaction	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	static const integer ShockRarefaction = SHIFT_SIGN_RIGHT(3);$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer
ShockRarefaction_V	src/solvers/AugRie_SIMD.hpp	/^	const integer_vector ShockRarefaction_V;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer_vector
ShockRarefaction_V	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	const integer_vector ShockRarefaction_V;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer_vector
ShockShock	src/solvers/AugRie.hpp	/^      ShockShock,            \/**< 1st wave family: shock; 2nd wave family: shock. *\/$/;"	e	enum:solver::AugRie::RiemannStructure
ShockShock	src/solvers/AugRieCUDA.h	/^const integer ShockShock = 2;$/;"	v	typeref:typename:const integer
ShockShock	src/solvers/AugRieFun.hpp	/^const int ShockShock = 2;$/;"	v	typeref:typename:const int
ShockShock	src/solvers/AugRie_SIMD.hpp	/^	static const integer ShockShock = SHIFT_SIGN_RIGHT(1);$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer
ShockShock	submodules/swe_solvers/src/solver/AugRie.hpp	/^      ShockShock,            \/**< 1st wave family: shock; 2nd wave family: shock. *\/$/;"	e	enum:solver::AugRie::RiemannStructure
ShockShock	submodules/swe_solvers/src/solver/AugRieCUDA.h	/^const integer ShockShock = 2;$/;"	v	typeref:typename:const integer
ShockShock	submodules/swe_solvers/src/solver/AugRieFun.hpp	/^const int ShockShock = 2;$/;"	v	typeref:typename:const int
ShockShock	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	static const integer ShockShock = SHIFT_SIGN_RIGHT(1);$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer
ShockShock_V	src/solvers/AugRie_SIMD.hpp	/^	const integer_vector ShockShock_V;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer_vector
ShockShock_V	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	const integer_vector ShockShock_V;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer_vector
Simulation	src/opengl/simulation.cu	/^Simulation::Simulation ()$/;"	f	typeref:typename:Simulation::
Simulation	src/opengl/simulation.h	/^class Simulation {$/;"	c
SingleRarefactionDry	src/solvers/AugRie.hpp	/^      SingleRarefactionDry,  \/**< 1st wave family: rarefaction; 2nd wave family: contact discon/;"	e	enum:solver::AugRie::RiemannStructure
SingleRarefactionDry	src/solvers/AugRieCUDA.h	/^const integer SingleRarefactionDry = 1;$/;"	v	typeref:typename:const integer
SingleRarefactionDry	src/solvers/AugRieFun.hpp	/^const int SingleRarefactionDry = 1;$/;"	v	typeref:typename:const int
SingleRarefactionDry	src/solvers/AugRie_SIMD.hpp	/^	static const integer SingleRarefactionDry = SHIFT_SIGN_RIGHT(6);$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer
SingleRarefactionDry	submodules/swe_solvers/src/solver/AugRie.hpp	/^      SingleRarefactionDry,  \/**< 1st wave family: rarefaction; 2nd wave family: contact discon/;"	e	enum:solver::AugRie::RiemannStructure
SingleRarefactionDry	submodules/swe_solvers/src/solver/AugRieCUDA.h	/^const integer SingleRarefactionDry = 1;$/;"	v	typeref:typename:const integer
SingleRarefactionDry	submodules/swe_solvers/src/solver/AugRieFun.hpp	/^const int SingleRarefactionDry = 1;$/;"	v	typeref:typename:const int
SingleRarefactionDry	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	static const integer SingleRarefactionDry = SHIFT_SIGN_RIGHT(6);$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer
SingleRarefactionDry_V	src/solvers/AugRie_SIMD.hpp	/^	const integer_vector SingleRarefactionDry_V;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer_vector
SingleRarefactionDry_V	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	const integer_vector SingleRarefactionDry_V;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer_vector
Success	src/tools/args.hh	/^		Success = 0,$/;"	e	enum:tools::Args::Result
T	src/solvers/FWaveCuda.h	/^typedef float T;$/;"	t	typeref:typename:float
T	submodules/swe_solvers/src/solver/FWaveCuda.h	/^typedef float T;$/;"	t	typeref:typename:float
TEXT_H	src/opengl/text.h	/^#define TEXT_H$/;"	d
TILE_SIZE	src/blocks/cuda/SWE_BlockCUDA.hh	/^const int TILE_SIZE=16;$/;"	v	typeref:typename:const int
TIME_SIZE	src/tools/ProgressBar.hh	/^	static const int TIME_SIZE = 8;$/;"	m	class:tools::ProgressBar	typeref:typename:const int
TOOLS_ARGS_H	src/tools/args.hh	/^#define TOOLS_ARGS_H$/;"	d
Text	src/opengl/text.h	/^	Text()$/;"	f	class:Text
Text	src/opengl/text.h	/^class Text$/;"	c
VBO	src/opengl/vbo.h	/^	VBO()$/;"	f	class:VBO
VBO	src/opengl/vbo.h	/^class VBO$/;"	c
VBO_H	src/opengl/vbo.h	/^#define VBO_H$/;"	d
VECTOR_AVX_FLOAT32	src/solvers/SIMD_TYPES.hpp	/^		#define VECTOR_AVX_FLOAT32$/;"	d
VECTOR_AVX_FLOAT32	submodules/swe_solvers/src/solver/SIMD_TYPES.hpp	/^		#define VECTOR_AVX_FLOAT32$/;"	d
VECTOR_AVX_FLOAT64	src/solvers/SIMD_TYPES.hpp	/^		#define VECTOR_AVX_FLOAT64$/;"	d
VECTOR_AVX_FLOAT64	submodules/swe_solvers/src/solver/SIMD_TYPES.hpp	/^		#define VECTOR_AVX_FLOAT64$/;"	d
VECTOR_FULL_MASK	src/solvers/SIMD_TYPES.hpp	/^		#define VECTOR_FULL_MASK /;"	d
VECTOR_FULL_MASK	submodules/swe_solvers/src/solver/SIMD_TYPES.hpp	/^		#define VECTOR_FULL_MASK /;"	d
VECTOR_LENGTH	src/solvers/SIMD_TYPES.hpp	/^		#define VECTOR_LENGTH /;"	d
VECTOR_LENGTH	src/solvers/SIMD_TYPES.hpp	/^	#define VECTOR_LENGTH /;"	d
VECTOR_LENGTH	submodules/swe_solvers/src/solver/SIMD_TYPES.hpp	/^		#define VECTOR_LENGTH /;"	d
VECTOR_LENGTH	submodules/swe_solvers/src/solver/SIMD_TYPES.hpp	/^	#define VECTOR_LENGTH /;"	d
VECTOR_NOVEC	src/solvers/SIMD_TYPES.hpp	/^	#define VECTOR_NOVEC$/;"	d
VECTOR_NOVEC	submodules/swe_solvers/src/solver/SIMD_TYPES.hpp	/^	#define VECTOR_NOVEC$/;"	d
VECTOR_SSE4_FLOAT32	src/solvers/SIMD_TYPES.hpp	/^		#define VECTOR_SSE4_FLOAT32$/;"	d
VECTOR_SSE4_FLOAT32	submodules/swe_solvers/src/solver/SIMD_TYPES.hpp	/^		#define VECTOR_SSE4_FLOAT32$/;"	d
VECTOR_SSE4_FLOAT64	src/solvers/SIMD_TYPES.hpp	/^		#define VECTOR_SSE4_FLOAT64$/;"	d
VECTOR_SSE4_FLOAT64	submodules/swe_solvers/src/solver/SIMD_TYPES.hpp	/^		#define VECTOR_SSE4_FLOAT64$/;"	d
VISUALIZATION_H	src/opengl/visualization.h	/^#define VISUALIZATION_H$/;"	d
VTKWRITER_HH_	src/writer/VtkWriter.hh	/^#define VTKWRITER_HH_$/;"	d
Visualization	src/opengl/visualization.cpp	/^Visualization::Visualization(int windowWidth, int windowHeight, const char* window_title)$/;"	f	class:Visualization
Visualization	src/opengl/visualization.h	/^class Visualization {$/;"	c
VtkWriter	src/writer/VtkWriter.cpp	/^VtkWriter::VtkWriter( const std::string &i_baseName,$/;"	f	class:VtkWriter
VtkWriter	src/writer/VtkWriter.hh	/^class VtkWriter : public Writer {$/;"	c
WALL	src/types/Boundary.hh	/^	WALL,$/;"	e	enum:BoundaryType
WATERSHADER	src/opengl/visualization.h	/^   SHADED, WIREFRAME, WATERSHADER$/;"	e	enum:RenderMode
WAVEPROPAGATIONSOLVER_HPP_	src/solvers/WavePropagation.hpp	/^#define WAVEPROPAGATIONSOLVER_HPP_$/;"	d
WAVEPROPAGATIONSOLVER_HPP_	submodules/swe_solvers/src/solver/WavePropagation.hpp	/^#define WAVEPROPAGATIONSOLVER_HPP_$/;"	d
WINDOW_TITLE	src/examples/swe_opengl.cpp	/^#define WINDOW_TITLE /;"	d	file:
WIREFRAME	src/opengl/visualization.h	/^   SHADED, WIREFRAME, WATERSHADER$/;"	e	enum:RenderMode
WRITER_HH_	src/writer/Writer.hh	/^#define WRITER_HH_$/;"	d
WavePropagation	src/solvers/WavePropagation.hpp	/^    WavePropagation( T i_dryTolerance,$/;"	f	class:solver::WavePropagation
WavePropagation	src/solvers/WavePropagation.hpp	/^template <typename T> class solver::WavePropagation {$/;"	c	class:solver
WavePropagation	submodules/swe_solvers/src/solver/WavePropagation.hpp	/^    WavePropagation( T i_dryTolerance,$/;"	f	class:solver::WavePropagation
WavePropagation	submodules/swe_solvers/src/solver/WavePropagation.hpp	/^template <typename T> class solver::WavePropagation {$/;"	c	class:solver
WetDryInundation	src/solvers/AugRieCUDA.h	/^const integer WetDryInundation = 2;$/;"	v	typeref:typename:const integer
WetDryInundation	src/solvers/AugRieFun.hpp	/^const int WetDryInundation = 2;$/;"	v	typeref:typename:const int
WetDryInundation	src/solvers/AugRie_SIMD.hpp	/^	static const integer WetDryInundation = SHIFT_SIGN_RIGHT(2);$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer
WetDryInundation	src/solvers/WavePropagation.hpp	/^      WetDryInundation,     \/**< 1st cell: wet, 2nd cell: dry. 1st cell lies higher than the 2n/;"	e	enum:solver::WavePropagation::WetDryState
WetDryInundation	submodules/swe_solvers/src/solver/AugRieCUDA.h	/^const integer WetDryInundation = 2;$/;"	v	typeref:typename:const integer
WetDryInundation	submodules/swe_solvers/src/solver/AugRieFun.hpp	/^const int WetDryInundation = 2;$/;"	v	typeref:typename:const int
WetDryInundation	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	static const integer WetDryInundation = SHIFT_SIGN_RIGHT(2);$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer
WetDryInundation	submodules/swe_solvers/src/solver/WavePropagation.hpp	/^      WetDryInundation,     \/**< 1st cell: wet, 2nd cell: dry. 1st cell lies higher than the 2n/;"	e	enum:solver::WavePropagation::WetDryState
WetDryInundation_V	src/solvers/AugRie_SIMD.hpp	/^	const integer_vector WetDryInundation_V;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer_vector
WetDryInundation_V	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	const integer_vector WetDryInundation_V;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer_vector
WetDryState	src/solvers/WavePropagation.hpp	/^    enum WetDryState {$/;"	g	class:solver::WavePropagation
WetDryState	submodules/swe_solvers/src/solver/WavePropagation.hpp	/^    enum WetDryState {$/;"	g	class:solver::WavePropagation
WetDryWall	src/solvers/AugRieCUDA.h	/^const integer WetDryWall = 3;$/;"	v	typeref:typename:const integer
WetDryWall	src/solvers/AugRieFun.hpp	/^const int WetDryWall = 3;$/;"	v	typeref:typename:const int
WetDryWall	src/solvers/AugRie_SIMD.hpp	/^	static const integer WetDryWall = SHIFT_SIGN_RIGHT(3);$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer
WetDryWall	src/solvers/WavePropagation.hpp	/^      WetDryWall,           \/**< 1st cell: wet, 2nd cell: dry. 1st cell lies lower than the 2nd/;"	e	enum:solver::WavePropagation::WetDryState
WetDryWall	submodules/swe_solvers/src/solver/AugRieCUDA.h	/^const integer WetDryWall = 3;$/;"	v	typeref:typename:const integer
WetDryWall	submodules/swe_solvers/src/solver/AugRieFun.hpp	/^const int WetDryWall = 3;$/;"	v	typeref:typename:const int
WetDryWall	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	static const integer WetDryWall = SHIFT_SIGN_RIGHT(3);$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer
WetDryWall	submodules/swe_solvers/src/solver/WavePropagation.hpp	/^      WetDryWall,           \/**< 1st cell: wet, 2nd cell: dry. 1st cell lies lower than the 2nd/;"	e	enum:solver::WavePropagation::WetDryState
WetDryWallInundation	src/solvers/AugRieCUDA.h	/^const integer WetDryWallInundation = 4;$/;"	v	typeref:typename:const integer
WetDryWallInundation	src/solvers/AugRieFun.hpp	/^const int WetDryWallInundation = 4;$/;"	v	typeref:typename:const int
WetDryWallInundation	src/solvers/AugRie_SIMD.hpp	/^	static const integer WetDryWallInundation = SHIFT_SIGN_RIGHT(4);$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer
WetDryWallInundation	src/solvers/WavePropagation.hpp	/^      WetDryWallInundation, \/**< 1st cell: wet, 2nd cell: dry. 1st cell lies lower than the 2nd/;"	e	enum:solver::WavePropagation::WetDryState
WetDryWallInundation	submodules/swe_solvers/src/solver/AugRieCUDA.h	/^const integer WetDryWallInundation = 4;$/;"	v	typeref:typename:const integer
WetDryWallInundation	submodules/swe_solvers/src/solver/AugRieFun.hpp	/^const int WetDryWallInundation = 4;$/;"	v	typeref:typename:const int
WetDryWallInundation	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	static const integer WetDryWallInundation = SHIFT_SIGN_RIGHT(4);$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer
WetDryWallInundation	submodules/swe_solvers/src/solver/WavePropagation.hpp	/^      WetDryWallInundation, \/**< 1st cell: wet, 2nd cell: dry. 1st cell lies lower than the 2nd/;"	e	enum:solver::WavePropagation::WetDryState
WetDryWallInundation_V	src/solvers/AugRie_SIMD.hpp	/^	const integer_vector WetDryWallInundation_V;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer_vector
WetDryWallInundation_V	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	const integer_vector WetDryWallInundation_V;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer_vector
WetDryWall_V	src/solvers/AugRie_SIMD.hpp	/^	const integer_vector WetDryWall_V;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer_vector
WetDryWall_V	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	const integer_vector WetDryWall_V;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer_vector
WetWet	src/solvers/AugRieCUDA.h	/^const integer WetWet = 1;$/;"	v	typeref:typename:const integer
WetWet	src/solvers/AugRieFun.hpp	/^const int WetWet = 1;$/;"	v	typeref:typename:const int
WetWet	src/solvers/AugRie_SIMD.hpp	/^	static const integer WetWet = SHIFT_SIGN_RIGHT(1);$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer
WetWet	src/solvers/WavePropagation.hpp	/^      WetWet,               \/**< Both cells are wet. *\/$/;"	e	enum:solver::WavePropagation::WetDryState
WetWet	submodules/swe_solvers/src/solver/AugRieCUDA.h	/^const integer WetWet = 1;$/;"	v	typeref:typename:const integer
WetWet	submodules/swe_solvers/src/solver/AugRieFun.hpp	/^const int WetWet = 1;$/;"	v	typeref:typename:const int
WetWet	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	static const integer WetWet = SHIFT_SIGN_RIGHT(1);$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer
WetWet	submodules/swe_solvers/src/solver/WavePropagation.hpp	/^      WetWet,               \/**< Both cells are wet. *\/$/;"	e	enum:solver::WavePropagation::WetDryState
WetWet_V	src/solvers/AugRie_SIMD.hpp	/^	const integer_vector WetWet_V;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer_vector
WetWet_V	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	const integer_vector WetWet_V;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const integer_vector
Writer	src/writer/Writer.hh	/^		Writer(const std::string &i_fileName,$/;"	f	class:Writer
Writer	src/writer/Writer.hh	/^class Writer {$/;"	c
XORV_R	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define XORV_R /;"	d
XORV_R	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define XORV_R /;"	d
ZEROV_I	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define ZEROV_I /;"	d
ZEROV_I	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define ZEROV_I /;"	d
ZEROV_R	src/solvers/SIMD_DEFINITIONS.hpp	/^	#define ZEROV_R /;"	d
ZEROV_R	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	#define ZEROV_R /;"	d
_	buildAll.py	/^    _, errmsg = p.communicate()$/;"	v
_DECL_SWE_DimensionalSplittingCharm_H_	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^#define _DECL_SWE_DimensionalSplittingCharm_H_$/;"	d
_DECL_swe_charm_H_	src/examples/swe_charm.decl.h	/^#define _DECL_swe_charm_H_$/;"	d
__BLOCKCONNECTINTERFACE_HH	src/types/BlockConnectInterface.hh	/^#define __BLOCKCONNECTINTERFACE_HH$/;"	d
__BOUNDARY_HH	src/types/Boundary.hh	/^#define __BOUNDARY_HH$/;"	d
__CONSTANTS_HH	src/Constants.hh	/^#define __CONSTANTS_HH$/;"	d
__FLOAT1D_HH	src/tools/Float1D.hh	/^#define __FLOAT1D_HH$/;"	d
__FLOAT2DNATIVE_HH	src/tools/Float2DNative.hh	/^#define __FLOAT2DNATIVE_HH$/;"	d
__FLOAT2DUPCXX_HH	src/tools/Float2DUpcxx.hh	/^#define __FLOAT2DUPCXX_HH$/;"	d
__FLOAT2D_HH	src/tools/Float2D.hh	/^#define __FLOAT2D_HH$/;"	d
__HELP_HH	src/tools/help.hh	/^#define __HELP_HH$/;"	d
__SWE_ASAGISCENARIO_HH	src/scenarios/SWE_AsagiScenario.hh	/^#define __SWE_ASAGISCENARIO_HH$/;"	d
__SWE_BLOCK1DUPCXX_HH	src/types/SWE_Block1DUpcxx.hh	/^#define __SWE_BLOCK1DUPCXX_HH$/;"	d
__SWE_BLOCK1D_HH	src/types/SWE_Block1D.hh	/^#define __SWE_BLOCK1D_HH$/;"	d
__SWE_BLOCKCUDAKERNELS_HH	src/blocks/cuda/SWE_BlockCUDA_kernels.hh	/^#define __SWE_BLOCKCUDAKERNELS_HH$/;"	d
__SWE_BLOCKCUDA_HH	src/blocks/cuda/SWE_BlockCUDA.hh	/^#define __SWE_BLOCKCUDA_HH$/;"	d
__SWE_BLOCK_HH	src/blocks/SWE_Block.hh	/^#define __SWE_BLOCK_HH$/;"	d
__SWE_BLOCK_HH	src/blocks/SWE_Block_common.hh	/^#define __SWE_BLOCK_HH$/;"	d
__SWE_CHARM_HH	src/examples/swe_charm.hh	/^#define __SWE_CHARM_HH$/;"	d
__SWE_RUSANOVBLOCKCUDAKERNELS_HH	src/blocks/rusanov/SWE_RusanovBlockCUDA_kernels.hh	/^#define __SWE_RUSANOVBLOCKCUDAKERNELS_HH$/;"	d
__SWE_RUSANOVBLOCKCUDA_HH	src/blocks/rusanov/SWE_RusanovBlockCUDA.hh	/^#define __SWE_RUSANOVBLOCKCUDA_HH$/;"	d
__SWE_RUSANOVBLOCK_HH	src/blocks/rusanov/SWE_RusanovBlock.hh	/^#define __SWE_RUSANOVBLOCK_HH$/;"	d
__SWE_SCENARIO_HH	src/scenarios/SWE_Scenario.hh	/^#define __SWE_SCENARIO_HH$/;"	d
__SWE_SIMPLE_SCENARIOS_H	src/scenarios/SWE_simple_scenarios.hh	/^#define __SWE_SIMPLE_SCENARIOS_H$/;"	d
__SWE_SIMPLE_SCENARIOS_VIS_H	src/scenarios/SWE_simple_scenarios_vis.hh	/^#define __SWE_SIMPLE_SCENARIOS_VIS_H$/;"	d
__SWE_TSUNAMISCENARIO_HH	src/scenarios/SWE_TsunamiScenario.hh	/^#define __SWE_TSUNAMISCENARIO_HH$/;"	d
__SWE_VISINFO_H	src/scenarios/SWE_VisInfo.hh	/^#define __SWE_VISINFO_H$/;"	d
__anon0c947de60102	src/tools/Float2D.hh	/^		inline const float* operator[](int index) const {$/;"	f	class:Float2D	file:
__anon45bbcbd10102	src/blocks/SWE_DimensionalSplittingUpcxx.cpp	/^	maxTimestepGlobal = upcxx::reduce_all(maxTimestep, [](float a, float b) {return std::min(a, b);/;"	f	function:SWE_DimensionalSplittingUpcxx::computeNumericalFluxes	file:
__anon9b51294f0102	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    { return CProxyElement_SWE_DimensionalSplittingCharm(ckGetArrayID(), idx, CK_DELCTOR_CALL); /;"	f	class:CProxy_SWE_DimensionalSplittingCharm	file:
__anon9b51294f0202	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    { return CProxyElement_SWE_DimensionalSplittingCharm(ckGetArrayID(), idx, CK_DELCTOR_CALL); /;"	f	class:CProxy_SWE_DimensionalSplittingCharm	file:
__anon9b51294f0302	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^        {return CProxyElement_SWE_DimensionalSplittingCharm(ckGetArrayID(), CkArrayIndex1D(idx),/;"	f	class:CProxy_SWE_DimensionalSplittingCharm	file:
__anon9b51294f0402	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^        {return CProxyElement_SWE_DimensionalSplittingCharm(ckGetArrayID(), CkArrayIndex1D(idx),/;"	f	class:CProxy_SWE_DimensionalSplittingCharm	file:
__anon9b51294f0502	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^        {return CProxyElement_SWE_DimensionalSplittingCharm(ckGetArrayID(), idx, CK_DELCTOR_CALL/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	file:
__anon9b51294f0602	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^        {return CProxyElement_SWE_DimensionalSplittingCharm(ckGetArrayID(), idx, CK_DELCTOR_CALL/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	file:
__anon9b51294f0702	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^        {return CProxyElement_SWE_DimensionalSplittingCharm(ckGetArrayID(), *(CkArrayIndex1D*)&c/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	file:
__anon9b51294f0802	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^        {return CProxyElement_SWE_DimensionalSplittingCharm(ckGetArrayID(), *(CkArrayIndex1D*)&c/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	file:
__anonb198b0830102	src/writer/Writer.hh	/^	int operator[](unsigned int i) const {$/;"	f	struct:BoundarySize	file:
__idx	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    static int __idx;$/;"	m	class:CMessage_copyLayer	typeref:typename:int
__idx	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    static int __idx;$/;"	m	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
__idx	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^ int CkIndex_SWE_DimensionalSplittingCharm::__idx=0;$/;"	m	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
__idx	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^int CMessage_copyLayer::__idx=0;$/;"	m	class:CMessage_copyLayer	typeref:typename:int
__idx	src/examples/swe_charm.decl.h	/^    static int __idx;$/;"	m	class:CkIndex_swe_charm	typeref:typename:int
__idx	src/examples/swe_charm.def.h	/^ int CkIndex_swe_charm::__idx=0;$/;"	m	class:CkIndex_swe_charm	typeref:typename:int
__register	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    static void __register(const char *s, size_t size, CkPackFnPtr pack, CkUnpackFnPtr unpack) {$/;"	f	class:CMessage_copyLayer	typeref:typename:void
__register	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CkIndex_SWE_DimensionalSplittingCharm::__register(const char *s, size_t size) {$/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:void
__sdag_init	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::__sdag_init() { \/\/ Potentially missing SWE_DimensionalSpli/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
__sdag_register	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::__sdag_register() { \/\/ Potentially missing SWE_Dimensional/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
__xlater_roPup_blockCountX	src/examples/swe_charm.def.h	/^extern "C" void __xlater_roPup_blockCountX(void *_impl_pup_er) {$/;"	f	typeref:typename:void
__xlater_roPup_blockCountY	src/examples/swe_charm.def.h	/^extern "C" void __xlater_roPup_blockCountY(void *_impl_pup_er) {$/;"	f	typeref:typename:void
__xlater_roPup_checkpointCount	src/examples/swe_charm.def.h	/^extern "C" void __xlater_roPup_checkpointCount(void *_impl_pup_er) {$/;"	f	typeref:typename:void
__xlater_roPup_mainProxy	src/examples/swe_charm.def.h	/^extern "C" void __xlater_roPup_mainProxy(void *_impl_pup_er) {$/;"	f	typeref:typename:void
__xlater_roPup_simulationDuration	src/examples/swe_charm.def.h	/^extern "C" void __xlater_roPup_simulationDuration(void *_impl_pup_er) {$/;"	f	typeref:typename:void
_call_SWE_DimensionalSplittingCharm_CkMigrateMessage	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CkIndex_SWE_DimensionalSplittingCharm::_call_SWE_DimensionalSplittingCharm_CkMigrateMessage/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:void
_call_SWE_DimensionalSplittingCharm_marshall1	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CkIndex_SWE_DimensionalSplittingCharm::_call_SWE_DimensionalSplittingCharm_marshall1(void* /;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:void
_call_compute_void	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CkIndex_SWE_DimensionalSplittingCharm::_call_compute_void(void* impl_msg, void* impl_obj_vo/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:void
_call_done_marshall2	src/examples/swe_charm.def.h	/^void CkIndex_swe_charm::_call_done_marshall2(void* impl_msg, void* impl_obj_void)$/;"	f	class:CkIndex_swe_charm	typeref:typename:void
_call_exit_void	src/examples/swe_charm.def.h	/^void CkIndex_swe_charm::_call_exit_void(void* impl_msg, void* impl_obj_void)$/;"	f	class:CkIndex_swe_charm	typeref:typename:void
_call_receiveGhostBottom_copyLayer	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CkIndex_SWE_DimensionalSplittingCharm::_call_receiveGhostBottom_copyLayer(void* impl_msg, v/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:void
_call_receiveGhostLeft_copyLayer	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CkIndex_SWE_DimensionalSplittingCharm::_call_receiveGhostLeft_copyLayer(void* impl_msg, voi/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:void
_call_receiveGhostRight_copyLayer	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CkIndex_SWE_DimensionalSplittingCharm::_call_receiveGhostRight_copyLayer(void* impl_msg, vo/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:void
_call_receiveGhostTop_copyLayer	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CkIndex_SWE_DimensionalSplittingCharm::_call_receiveGhostTop_copyLayer(void* impl_msg, void/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:void
_call_redn_wrapper_reduceWaveSpeed_marshall8	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CkIndex_SWE_DimensionalSplittingCharm::_call_redn_wrapper_reduceWaveSpeed_marshall8(void* i/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:void
_call_reduceWaveSpeed_marshall8	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CkIndex_SWE_DimensionalSplittingCharm::_call_reduceWaveSpeed_marshall8(void* impl_msg, void/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:void
_call_reductionTrigger_void	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CkIndex_SWE_DimensionalSplittingCharm::_call_reductionTrigger_void(void* impl_msg, void* im/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:void
_call_swe_charm_CkArgMsg	src/examples/swe_charm.def.h	/^void CkIndex_swe_charm::_call_swe_charm_CkArgMsg(void* impl_msg, void* impl_obj_void)$/;"	f	class:CkIndex_swe_charm	typeref:typename:void
_callmarshall_SWE_DimensionalSplittingCharm_marshall1	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^int CkIndex_SWE_DimensionalSplittingCharm::_callmarshall_SWE_DimensionalSplittingCharm_marshall1/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
_callmarshall_done_marshall2	src/examples/swe_charm.def.h	/^int CkIndex_swe_charm::_callmarshall_done_marshall2(char* impl_buf, void* impl_obj_void) {$/;"	f	class:CkIndex_swe_charm	typeref:typename:int
_callmarshall_reduceWaveSpeed_marshall8	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^int CkIndex_SWE_DimensionalSplittingCharm::_callmarshall_reduceWaveSpeed_marshall8(char* impl_bu/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
_if_0	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_if_0(SDAG::CCounter* _co0, copyLayer* gen1) {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_if_0_end	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_if_0_end(SDAG::CCounter* _co0, copyLayer* gen1) {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_if_1	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_if_1(SDAG::CCounter* _co0, copyLayer* gen1) {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_if_1_end	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_if_1_end(SDAG::CCounter* _co0, copyLayer* gen1) {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_if_2	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_if_2(SDAG::CCounter* _co0, copyLayer* gen1) {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_if_2_end	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_if_2_end(SDAG::CCounter* _co0, copyLayer* gen1) {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_if_3	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_if_3(SDAG::CCounter* _co0, copyLayer* gen1) {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_if_3_end	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_if_3_end(SDAG::CCounter* _co0, copyLayer* gen1) {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_marshallmessagepup_SWE_DimensionalSplittingCharm_marshall1	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CkIndex_SWE_DimensionalSplittingCharm::_marshallmessagepup_SWE_DimensionalSplittingCharm_ma/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:void
_marshallmessagepup_done_marshall2	src/examples/swe_charm.def.h	/^void CkIndex_swe_charm::_marshallmessagepup_done_marshall2(PUP::er &implDestP,void *impl_msg) {$/;"	f	class:CkIndex_swe_charm	typeref:typename:void
_marshallmessagepup_reduceWaveSpeed_marshall8	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CkIndex_SWE_DimensionalSplittingCharm::_marshallmessagepup_reduceWaveSpeed_marshall8(PUP::e/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:void
_olist_0	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_olist_0() {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_olist_0_end	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_olist_0_end(SDAG::CCounter* _co0) {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_overlap_0	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_overlap_0() {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_overlap_0_end	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_overlap_0_end() {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_registerSWE_DimensionalSplittingCharm	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void _registerSWE_DimensionalSplittingCharm(void)$/;"	f	typeref:typename:void
_registerswe_charm	src/examples/swe_charm.def.h	/^void _registerswe_charm(void)$/;"	f	typeref:typename:void
_sdag_idx_SWE_DimensionalSplittingCharm_serial_0	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^int SWE_DimensionalSplittingCharm::_sdag_idx_SWE_DimensionalSplittingCharm_serial_0() { \/\/ Pot/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:int
_sdag_idx_SWE_DimensionalSplittingCharm_serial_1	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^int SWE_DimensionalSplittingCharm::_sdag_idx_SWE_DimensionalSplittingCharm_serial_1() { \/\/ Pot/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:int
_sdag_idx_SWE_DimensionalSplittingCharm_serial_2	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^int SWE_DimensionalSplittingCharm::_sdag_idx_SWE_DimensionalSplittingCharm_serial_2() { \/\/ Pot/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:int
_sdag_idx_SWE_DimensionalSplittingCharm_serial_3	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^int SWE_DimensionalSplittingCharm::_sdag_idx_SWE_DimensionalSplittingCharm_serial_3() { \/\/ Pot/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:int
_sdag_idx_SWE_DimensionalSplittingCharm_serial_4	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^int SWE_DimensionalSplittingCharm::_sdag_idx_SWE_DimensionalSplittingCharm_serial_4() { \/\/ Pot/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:int
_sdag_idx_SWE_DimensionalSplittingCharm_serial_5	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^int SWE_DimensionalSplittingCharm::_sdag_idx_SWE_DimensionalSplittingCharm_serial_5() { \/\/ Pot/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:int
_sdag_idx_SWE_DimensionalSplittingCharm_serial_6	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^int SWE_DimensionalSplittingCharm::_sdag_idx_SWE_DimensionalSplittingCharm_serial_6() { \/\/ Pot/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:int
_sdag_idx_SWE_DimensionalSplittingCharm_serial_7	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^int SWE_DimensionalSplittingCharm::_sdag_idx_SWE_DimensionalSplittingCharm_serial_7() { \/\/ Pot/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:int
_sdag_init	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_sdag_init() { \/\/ Potentially missing SWE_DimensionalSplit/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_sdag_pup	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_sdag_pup(PUP::er &p) { \/\/ Potentially missing SWE_Dimensi/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_sdag_reg_SWE_DimensionalSplittingCharm_serial_0	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^int SWE_DimensionalSplittingCharm::_sdag_reg_SWE_DimensionalSplittingCharm_serial_0() { \/\/ Pot/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:int
_sdag_reg_SWE_DimensionalSplittingCharm_serial_1	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^int SWE_DimensionalSplittingCharm::_sdag_reg_SWE_DimensionalSplittingCharm_serial_1() { \/\/ Pot/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:int
_sdag_reg_SWE_DimensionalSplittingCharm_serial_2	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^int SWE_DimensionalSplittingCharm::_sdag_reg_SWE_DimensionalSplittingCharm_serial_2() { \/\/ Pot/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:int
_sdag_reg_SWE_DimensionalSplittingCharm_serial_3	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^int SWE_DimensionalSplittingCharm::_sdag_reg_SWE_DimensionalSplittingCharm_serial_3() { \/\/ Pot/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:int
_sdag_reg_SWE_DimensionalSplittingCharm_serial_4	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^int SWE_DimensionalSplittingCharm::_sdag_reg_SWE_DimensionalSplittingCharm_serial_4() { \/\/ Pot/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:int
_sdag_reg_SWE_DimensionalSplittingCharm_serial_5	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^int SWE_DimensionalSplittingCharm::_sdag_reg_SWE_DimensionalSplittingCharm_serial_5() { \/\/ Pot/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:int
_sdag_reg_SWE_DimensionalSplittingCharm_serial_6	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^int SWE_DimensionalSplittingCharm::_sdag_reg_SWE_DimensionalSplittingCharm_serial_6() { \/\/ Pot/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:int
_sdag_reg_SWE_DimensionalSplittingCharm_serial_7	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^int SWE_DimensionalSplittingCharm::_sdag_reg_SWE_DimensionalSplittingCharm_serial_7() { \/\/ Pot/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:int
_serial_0	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_serial_0() {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_serial_1	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_serial_1() {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_serial_2	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_serial_2(SDAG::CCounter* _co0, copyLayer* gen1) {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_serial_3	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_serial_3(SDAG::CCounter* _co0, copyLayer* gen1) {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_serial_4	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_serial_4(SDAG::CCounter* _co0, copyLayer* gen1) {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_serial_5	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_serial_5(SDAG::CCounter* _co0, copyLayer* gen1) {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_serial_6	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_serial_6() {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_serial_7	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_serial_7() {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_slist_0	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_slist_0() {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_slist_0_end	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_slist_0_end() {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_slist_1	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_slist_1() {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_slist_1_end	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_slist_1_end() {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_slist_2	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_slist_2(SDAG::CCounter* _co0, copyLayer* gen1) {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_slist_2_end	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_slist_2_end(SDAG::CCounter* _co0, copyLayer* gen1) {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_slist_3	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_slist_3(SDAG::CCounter* _co0, copyLayer* gen1) {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_slist_3_end	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_slist_3_end(SDAG::CCounter* _co0, copyLayer* gen1) {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_slist_4	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_slist_4(SDAG::CCounter* _co0, copyLayer* gen1) {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_slist_4_end	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_slist_4_end(SDAG::CCounter* _co0, copyLayer* gen1) {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_slist_5	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_slist_5(SDAG::CCounter* _co0, copyLayer* gen1) {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_slist_5_end	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_slist_5_end(SDAG::CCounter* _co0, copyLayer* gen1) {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_when_0	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^SDAG::Continuation* SWE_DimensionalSplittingCharm::_when_0(SDAG::CCounter* _co0) {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:SDAG::Continuation *
_when_0_end	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_when_0_end(SDAG::CCounter* _co0, copyLayer* gen1) {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_when_1	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^SDAG::Continuation* SWE_DimensionalSplittingCharm::_when_1(SDAG::CCounter* _co0) {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:SDAG::Continuation *
_when_1_end	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_when_1_end(SDAG::CCounter* _co0, copyLayer* gen1) {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_when_2	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^SDAG::Continuation* SWE_DimensionalSplittingCharm::_when_2(SDAG::CCounter* _co0) {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:SDAG::Continuation *
_when_2_end	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_when_2_end(SDAG::CCounter* _co0, copyLayer* gen1) {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_when_3	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^SDAG::Continuation* SWE_DimensionalSplittingCharm::_when_3(SDAG::CCounter* _co0) {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:SDAG::Continuation *
_when_3_end	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_when_3_end(SDAG::CCounter* _co0, copyLayer* gen1) {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_when_4	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^SDAG::Continuation* SWE_DimensionalSplittingCharm::_when_4() {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:SDAG::Continuation *
_when_4_end	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_when_4_end() {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_while_0	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_while_0() {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
_while_0_end	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::_while_0_end() {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
addOption	src/tools/args.hh	/^	void addOption(const std::string &longOption,$/;"	f	class:tools::Args	typeref:typename:void
addText	src/opengl/text.h	/^	void addText(const char* text)$/;"	f	class:Text	typeref:typename:void
all	Makefile	/^all: test clean$/;"	t
alloc	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void* CMessage_copyLayer::alloc(int msgnum, size_t sz, int *sizes, int pb) {$/;"	f	class:CMessage_copyLayer	typeref:typename:void *
allowStep	src/opengl/controller.h	/^	bool allowStep;$/;"	m	class:Controller	typeref:typename:bool
angleX	src/opengl/camera.h	/^	float angleX, angleY;$/;"	m	class:Camera	typeref:typename:float
angleY	src/opengl/camera.h	/^	float angleX, angleY;$/;"	m	class:Camera	typeref:typename:float
applyBoundaryBathymetry	src/blocks/SWE_Block.hh	/^void SWE_Block<T>::applyBoundaryBathymetry() {$/;"	f	class:SWE_Block	typeref:typename:void
applyBoundaryConditions	src/blocks/SWE_Block.hh	/^void SWE_Block<T>::applyBoundaryConditions() {$/;"	f	class:SWE_Block	typeref:typename:void
applyBoundaryConditions	src/blocks/SWE_Block_common.cpp	/^void SWE_Block::applyBoundaryConditions() {$/;"	f	class:SWE_Block	typeref:typename:void
argumentInfo	src/tools/args.hh	/^	size_t argumentInfo(size_t i, std::ostream &out)$/;"	f	class:tools::Args	typeref:typename:size_t
asagi	build/options/SWE_gnu_cuda_asagi_openGL.py	/^asagi='yes'$/;"	v
asagi	build/options/SWE_gnu_mpi_asagi.py	/^asagi='yes'$/;"	v
asagiInputDir	build/options/SWE_gnu_cuda_asagi_openGL.py	/^asagiInputDir=''$/;"	v
asagiInputDir	build/options/SWE_gnu_mpi_asagi.py	/^asagiInputDir=''$/;"	v
augRieComputeNetUpdates	src/solvers/AugRieCUDA.h	/^augRieComputeNetUpdates ($/;"	f	typeref:typename:__device__ void
augRieComputeNetUpdates	submodules/swe_solvers/src/solver/AugRieCUDA.h	/^augRieComputeNetUpdates ($/;"	f	typeref:typename:__device__ void
augRieSolver	src/solvers/Hybrid.hpp	/^    solver::AugRie<T> augRieSolver;$/;"	m	class:solver::Hybrid	typeref:typename:solver::AugRie<T>
augRieSolver	submodules/swe_solvers/src/solver/Hybrid.hpp	/^    solver::AugRie<T> augRieSolver;$/;"	m	class:solver::Hybrid	typeref:typename:solver::AugRie<T>
b	src/blocks/SWE_Block.hh	/^		T b;$/;"	m	class:SWE_Block	typeref:typename:T
b	src/blocks/SWE_Block_common.hh	/^		Float2D b;$/;"	m	class:SWE_Block	typeref:typename:Float2D
b	src/blocks/SWE_DimensionalSplittingCharm.hh	/^		float *b;$/;"	m	class:copyLayer	typeref:typename:float *
b	src/writer/Writer.hh	/^		const Float2D &b;$/;"	m	class:Writer	typeref:typename:const Float2D &
bLeft	src/solvers/WavePropagation.hpp	/^    T bLeft;$/;"	m	class:solver::WavePropagation	typeref:typename:T
bLeft	submodules/swe_solvers/src/solver/WavePropagation.hpp	/^    T bLeft;$/;"	m	class:solver::WavePropagation	typeref:typename:T
bLeft_v	src/solvers/AugRie_SIMD.hpp	/^	real_vector bLeft_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real_vector
bLeft_v	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	real_vector bLeft_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real_vector
bOffset	src/opengl/visualization.h	/^	float wScale, bScale, bOffset;$/;"	m	class:Visualization	typeref:typename:float
bRight	src/solvers/WavePropagation.hpp	/^    T bRight;$/;"	m	class:solver::WavePropagation	typeref:typename:T
bRight	submodules/swe_solvers/src/solver/WavePropagation.hpp	/^    T bRight;$/;"	m	class:solver::WavePropagation	typeref:typename:T
bRight_v	src/solvers/AugRie_SIMD.hpp	/^	real_vector bRight_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real_vector
bRight_v	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	real_vector bRight_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real_vector
bScale	src/opengl/visualization.h	/^	float wScale, bScale, bOffset;$/;"	m	class:Visualization	typeref:typename:float
bVar	src/writer/NetCdfWriter.hh	/^		int timeVar, hVar, huVar, hvVar, bVar;$/;"	m	class:NetCdfWriter	typeref:typename:int
bathyVerticalOffset	src/scenarios/SWE_VisInfo.hh	/^    virtual float bathyVerticalOffset() { return 0.0f; };$/;"	f	class:SWE_VisInfo	typeref:typename:float
bathyVerticalOffset	src/scenarios/SWE_simple_scenarios_vis.hh	/^	float bathyVerticalOffset() { return 245.0f; };$/;"	f	class:SWE_BathymetryDamBreakVisInfo	typeref:typename:float
bathyVerticalScaling	src/scenarios/SWE_AsagiScenario_vis.hh	/^    virtual float bathyVerticalScaling() { return 0.010313f; };$/;"	f	class:SWE_AsagiJapanSmallVisInfo	typeref:typename:float
bathyVerticalScaling	src/scenarios/SWE_VisInfo.hh	/^    virtual float bathyVerticalScaling() { return 10.0f; };$/;"	f	class:SWE_VisInfo	typeref:typename:float
bathymetryGrid	src/scenarios/SWE_AsagiScenario.hh	/^		Grid* bathymetryGrid;$/;"	m	class:SWE_AsagiScenario	typeref:typename:Grid *
bathymetryGrid	src/scenarios/SWE_TsunamiScenario.hh	/^		InputGridSpecification bathymetryGrid;$/;"	m	class:SWE_TsunamiScenario	typeref:typename:InputGridSpecification
bathymetryRange	src/scenarios/SWE_AsagiScenario.hh	/^		float bathymetryRange[4];$/;"	m	class:SWE_AsagiScenario	typeref:typename:float[4]
bd	src/blocks/cuda/SWE_BlockCUDA.hh	/^    float* bd;$/;"	m	class:SWE_BlockCUDA	typeref:typename:float *
bindBuffer	src/opengl/vbo.h	/^	void bindBuffer(GLenum target = GL_ARRAY_BUFFER)$/;"	f	class:VBO	typeref:typename:void
block	src/opengl/simulation.h	/^    SWE_BlockCUDA* block;$/;"	m	class:Simulation	typeref:typename:SWE_BlockCUDA *
blockCountX	src/examples/swe_charm.cpp	/^\/* readonly *\/ int blockCountX;$/;"	v	typeref:typename:int
blockCountY	src/examples/swe_charm.cpp	/^\/* readonly *\/ int blockCountY;$/;"	v	typeref:typename:int
bottomCopyLayer	src/blocks/cuda/SWE_BlockCUDA.hh	/^    SWE_Block1D* bottomCopyLayer;$/;"	m	class:SWE_BlockCUDA	typeref:typename:SWE_Block1D *
bottomGhostLayer	src/blocks/cuda/SWE_BlockCUDA.hh	/^    SWE_Block1D* bottomGhostLayer;$/;"	m	class:SWE_BlockCUDA	typeref:typename:SWE_Block1D *
bottomLayer	src/blocks/cuda/SWE_BlockCUDA.hh	/^    float* bottomLayer;$/;"	m	class:SWE_BlockCUDA	typeref:typename:float *
bottomLayerDevice	src/blocks/cuda/SWE_BlockCUDA.hh	/^    float* bottomLayerDevice;$/;"	m	class:SWE_BlockCUDA	typeref:typename:float *
boundary	src/blocks/SWE_Block_common.hh	/^		BoundaryType boundary[4];$/;"	m	class:SWE_Block	typeref:typename:BoundaryType[4]
boundary	src/blocks/SWE_DimensionalSplittingCharm.hh	/^		Boundary boundary;$/;"	m	class:copyLayer	typeref:typename:Boundary
boundary	src/types/BlockConnectInterface.hh	/^	Boundary boundary;$/;"	m	struct:BlockConnectInterface	typeref:typename:Boundary
boundarySize	src/writer/Writer.hh	/^		const BoundarySize boundarySize;$/;"	m	class:Writer	typeref:typename:const BoundarySize
boundarySize	src/writer/Writer.hh	/^	int boundarySize[4];$/;"	m	struct:BoundarySize	typeref:typename:int[4]
boundaryType	src/blocks/SWE_Block.hh	/^		BoundaryType boundaryType[4];$/;"	m	class:SWE_Block	typeref:typename:BoundaryType[4]
calc	paraview/netcdf_swe.py	/^calc = Calculator( Input=group )$/;"	v
calculateNormal	src/opengl/simulation.cu	/^float3 calculateNormal(float3 fVert1, float3 fVert2,$/;"	f	typeref:typename:float3
calculateNormal	src/opengl/simulation.cu	/^void Simulation::calculateNormal(float fVert1[], float fVert2[],$/;"	f	typeref:typename:void Simulation::
calculateNormals	src/opengl/simulation.cu	/^void Simulation::calculateNormals(float3* vertexBuffer, float3* destBuffer) {$/;"	f	typeref:typename:void Simulation::
calculateWaterSurface	src/opengl/simulation.cu	/^void Simulation::calculateWaterSurface(float3* destBuffer) {$/;"	f	typeref:typename:void Simulation::
calculate_hstar	submodules/swe_solvers/unit_tests/scripts/calculate_hstar.m	/^function[hStar] = calculate_hstar(hLow, hHigh, huLow, huHigh)$/;"	f
camera	src/opengl/visualization.h	/^	Camera* camera;$/;"	m	class:Visualization	typeref:typename:Camera *
cameraX	src/opengl/camera.h	/^	float cameraX;$/;"	m	class:Camera	typeref:typename:float
cameraY	src/opengl/camera.h	/^	float cameraY;$/;"	m	class:Camera	typeref:typename:float
cameraZ	src/opengl/camera.h	/^	float cameraZ;$/;"	m	class:Camera	typeref:typename:float
chareCount	src/examples/swe_charm.hh	/^		int chareCount;$/;"	m	class:swe_charm	typeref:typename:int
charm	Makefile	/^charm:$/;"	t
checkCUDAError	src/blocks/cuda/SWE_BlockCUDA.cu	/^void checkCUDAError(const char *msg)$/;"	f	typeref:typename:void
checkComputeMiddleState	submodules/swe_solvers/src/unit_tests/ComponentsTest.cpp	/^void ComponentsTest::checkComputeMiddleState() {$/;"	f	class:ComponentsTest	typeref:typename:void
checkComputeNetUpdatesForPositivity	submodules/swe_solvers/src/unit_tests/ComponentsTest.cpp	/^void ComponentsTest::checkComputeNetUpdatesForPositivity() {$/;"	f	class:ComponentsTest	typeref:typename:void
checkComputeNetUpdatesForWalls	submodules/swe_solvers/src/unit_tests/ComponentsTest.cpp	/^void ComponentsTest::checkComputeNetUpdatesForWalls() {$/;"	f	class:ComponentsTest	typeref:typename:void
checkComputeNetUpdatesForWallsInOneDirection	submodules/swe_solvers/src/unit_tests/ComponentsTest.cpp	/^void ComponentsTest::checkComputeNetUpdatesForWallsInOneDirection(bool i_leftCellDry) {$/;"	f	class:ComponentsTest	typeref:typename:void
checkDetermineRiemannStructure	submodules/swe_solvers/src/unit_tests/ComponentsTest.cpp	/^void ComponentsTest::checkDetermineRiemannStructure() {$/;"	f	class:ComponentsTest	typeref:typename:void
checkDetermineWetDryStateSimple	submodules/swe_solvers/src/unit_tests/ComponentsTest.cpp	/^void ComponentsTest::checkDetermineWetDryStateSimple() {$/;"	f	class:ComponentsTest	typeref:typename:void
checkInundationLimits	submodules/swe_solvers/src/unit_tests/ComponentsTest.cpp	/^void ComponentsTest::checkInundationLimits() {$/;"	f	class:ComponentsTest	typeref:typename:void
checkInundationLimitsInOneDirection	submodules/swe_solvers/src/unit_tests/ComponentsTest.cpp	/^void ComponentsTest::checkInundationLimitsInOneDirection(const bool i_leftCellDry) {$/;"	f	class:ComponentsTest	typeref:typename:void
checkVector	src/solvers/SIMD_DEFINITIONS.hpp	/^	inline bool checkVector (const __m128 x) {$/;"	f	typeref:typename:bool
checkVector	src/solvers/SIMD_DEFINITIONS.hpp	/^	inline bool checkVector (const __m256 x) {$/;"	f	typeref:typename:bool
checkVector	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	inline bool checkVector (const __m128 x) {$/;"	f	typeref:typename:bool
checkVector	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	inline bool checkVector (const __m256 x) {$/;"	f	typeref:typename:bool
checkpointCount	src/examples/swe_charm.cpp	/^\/* readonly *\/ int checkpointCount;$/;"	v	typeref:typename:int
checkpointInstantOfTime	src/blocks/SWE_DimensionalSplittingCharm.hh	/^		float *checkpointInstantOfTime;$/;"	m	class:SWE_DimensionalSplittingCharm	typeref:typename:float *
ckAutoDelegate	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    void ckAutoDelegate(int opts=1) {$/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:void
ckBroadcast	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline void ckBroadcast(CkArrayMessage *m, int ep, int opts=0) const$/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:void
ckBroadcast	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline void ckBroadcast(CkArrayMessage *m, int ep, int opts=0) const$/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:void
ckBroadcast	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline void ckBroadcast(CkArrayMessage *m, int ep, int opts=0) const$/;"	f	class:CProxy_SWE_DimensionalSplittingCharm	typeref:typename:void
ckCheck	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline void ckCheck(void) const$/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:void
ckCheck	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline void ckCheck(void) const$/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:void
ckCheck	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline void ckCheck(void) const$/;"	f	class:CProxy_SWE_DimensionalSplittingCharm	typeref:typename:void
ckCheck	src/examples/swe_charm.decl.h	/^    inline void ckCheck(void) const$/;"	f	class:CProxy_swe_charm	typeref:typename:void
ckCreateArray	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline static CkArrayID ckCreateArray(CkArrayMessage *m,int ctor,const CkArrayOptions &opts)$/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:CkArrayID
ckCreateArray	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline static CkArrayID ckCreateArray(CkArrayMessage *m,int ctor,const CkArrayOptions &opts)$/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:CkArrayID
ckCreateArray	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline static CkArrayID ckCreateArray(CkArrayMessage *m,int ctor,const CkArrayOptions &opts)$/;"	f	class:CProxy_SWE_DimensionalSplittingCharm	typeref:typename:CkArrayID
ckCreateEmptyArray	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline static CkArrayID ckCreateEmptyArray(CkArrayOptions opts = CkArrayOptions())$/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:CkArrayID
ckCreateEmptyArray	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline static CkArrayID ckCreateEmptyArray(CkArrayOptions opts = CkArrayOptions())$/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:CkArrayID
ckCreateEmptyArray	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline static CkArrayID ckCreateEmptyArray(CkArrayOptions opts = CkArrayOptions())$/;"	f	class:CProxy_SWE_DimensionalSplittingCharm	typeref:typename:CkArrayID
ckCreateEmptyArrayAsync	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline static void ckCreateEmptyArrayAsync(CkCallback cb, CkArrayOptions opts = CkArrayOptio/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:void
ckCreateEmptyArrayAsync	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline static void ckCreateEmptyArrayAsync(CkCallback cb, CkArrayOptions opts = CkArrayOptio/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:void
ckCreateEmptyArrayAsync	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline static void ckCreateEmptyArrayAsync(CkCallback cb, CkArrayOptions opts = CkArrayOptio/;"	f	class:CProxy_SWE_DimensionalSplittingCharm	typeref:typename:void
ckDelegate	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    void ckDelegate(CkDelegateMgr *dTo,CkDelegateData *dPtr=NULL)$/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:void
ckDelegate	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    void ckDelegate(CkDelegateMgr *dTo,CkDelegateData *dPtr=NULL)$/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:void
ckDelegate	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    void ckDelegate(CkDelegateMgr *dTo,CkDelegateData *dPtr=NULL)$/;"	f	class:CProxy_SWE_DimensionalSplittingCharm	typeref:typename:void
ckDelegate	src/examples/swe_charm.decl.h	/^    void ckDelegate(CkDelegateMgr *dTo,CkDelegateData *dPtr=NULL)$/;"	f	class:CProxy_swe_charm	typeref:typename:void
ckDelegatedIdx	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    CkGroupID ckDelegatedIdx(void) const$/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:CkGroupID
ckDelegatedIdx	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    CkGroupID ckDelegatedIdx(void) const$/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:CkGroupID
ckDelegatedIdx	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    CkGroupID ckDelegatedIdx(void) const$/;"	f	class:CProxy_SWE_DimensionalSplittingCharm	typeref:typename:CkGroupID
ckDelegatedIdx	src/examples/swe_charm.decl.h	/^    CkGroupID ckDelegatedIdx(void) const$/;"	f	class:CProxy_swe_charm	typeref:typename:CkGroupID
ckDelegatedPtr	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline CkDelegateData *ckDelegatedPtr(void) const$/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:CkDelegateData *
ckDelegatedPtr	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline CkDelegateData *ckDelegatedPtr(void) const$/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:CkDelegateData *
ckDelegatedPtr	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline CkDelegateData *ckDelegatedPtr(void) const$/;"	f	class:CProxy_SWE_DimensionalSplittingCharm	typeref:typename:CkDelegateData *
ckDelegatedPtr	src/examples/swe_charm.decl.h	/^    inline CkDelegateData *ckDelegatedPtr(void) const$/;"	f	class:CProxy_swe_charm	typeref:typename:CkDelegateData *
ckDelegatedTo	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline CkDelegateMgr *ckDelegatedTo(void) const$/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:CkDelegateMgr *
ckDelegatedTo	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline CkDelegateMgr *ckDelegatedTo(void) const$/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:CkDelegateMgr *
ckDelegatedTo	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline CkDelegateMgr *ckDelegatedTo(void) const$/;"	f	class:CProxy_SWE_DimensionalSplittingCharm	typeref:typename:CkDelegateMgr *
ckDelegatedTo	src/examples/swe_charm.decl.h	/^    inline CkDelegateMgr *ckDelegatedTo(void) const$/;"	f	class:CProxy_swe_charm	typeref:typename:CkDelegateMgr *
ckGetArrayElements	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline CkArrayIndex *ckGetArrayElements() const$/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:CkArrayIndex *
ckGetArrayElements	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline CkArrayIndex *ckGetArrayElements(int i) const$/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:CkArrayIndex *
ckGetArrayID	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline CkArrayID ckGetArrayID(void) const$/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:CkArrayID
ckGetArrayID	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline CkArrayID ckGetArrayID(void) const$/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:CkArrayID
ckGetArrayID	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline CkArrayID ckGetArrayID(void) const$/;"	f	class:CProxy_SWE_DimensionalSplittingCharm	typeref:typename:CkArrayID
ckGetArrayIDn	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline CkArrayID ckGetArrayIDn(int i) const$/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:CkArrayID
ckGetChareID	src/examples/swe_charm.decl.h	/^    const CkChareID &ckGetChareID(void) const$/;"	f	class:CProxy_swe_charm	typeref:typename:const CkChareID &
ckGetIndex	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline const CkArrayIndex &ckGetIndex() const$/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:const CkArrayIndex &
ckGetNumElements	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline int ckGetNumElements() const$/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:int
ckGetNumElements	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline int ckGetNumElements(int i) const$/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:int
ckGetSectionID	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline CkSectionID &ckGetSectionID()$/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:CkSectionID &
ckGetSectionID	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline CkSectionID &ckGetSectionID(int i)$/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:CkSectionID &
ckGetSectionIDs	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline CkSectionID *ckGetSectionIDs()$/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:CkSectionID *
ckGetSectionInfo	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline CkSectionInfo &ckGetSectionInfo()$/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:CkSectionInfo &
ckInsert	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline void ckInsert(CkArrayMessage *m,int ctor,int onPe)$/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:void
ckInsertIdx	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline void ckInsertIdx(CkArrayMessage *m,int ctor,int onPe,const CkArrayIndex &idx)$/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:void
ckInsertIdx	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline void ckInsertIdx(CkArrayMessage *m,int ctor,int onPe,const CkArrayIndex &idx)$/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:void
ckInsertIdx	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline void ckInsertIdx(CkArrayMessage *m,int ctor,int onPe,const CkArrayIndex &idx)$/;"	f	class:CProxy_SWE_DimensionalSplittingCharm	typeref:typename:void
ckIsDelegated	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    int ckIsDelegated(void) const$/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:int
ckIsDelegated	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    int ckIsDelegated(void) const$/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:int
ckIsDelegated	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    int ckIsDelegated(void) const$/;"	f	class:CProxy_SWE_DimensionalSplittingCharm	typeref:typename:int
ckIsDelegated	src/examples/swe_charm.decl.h	/^    int ckIsDelegated(void) const$/;"	f	class:CProxy_swe_charm	typeref:typename:int
ckLocMgr	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline CkLocMgr *ckLocMgr(void) const$/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:CkLocMgr *
ckLocMgr	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline CkLocMgr *ckLocMgr(void) const$/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:CkLocMgr *
ckLocMgr	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline CkLocMgr *ckLocMgr(void) const$/;"	f	class:CProxy_SWE_DimensionalSplittingCharm	typeref:typename:CkLocMgr *
ckLocal	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    SWE_DimensionalSplittingCharm *ckLocal(void) const$/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:SWE_DimensionalSplittingCharm *
ckLocal	src/examples/swe_charm.decl.h	/^    swe_charm *ckLocal(void) const$/;"	f	class:CProxy_swe_charm	typeref:typename:swe_charm *
ckLocalBranch	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline CkArray *ckLocalBranch(void) const$/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:CkArray *
ckLocalBranch	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline CkArray *ckLocalBranch(void) const$/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:CkArray *
ckLocalBranch	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline CkArray *ckLocalBranch(void) const$/;"	f	class:CProxy_SWE_DimensionalSplittingCharm	typeref:typename:CkArray *
ckNew	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    static CkArrayID ckNew(CkArrayOptions opts = CkArrayOptions()) { return ckCreateEmptyArray(o/;"	f	class:CProxy_SWE_DimensionalSplittingCharm	typeref:typename:CkArrayID
ckNew	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    static CkSectionID ckNew(const CkArrayID &aid, CkArrayIndex *elems, int nElems) {$/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:CkSectionID
ckNew	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    static CkSectionID ckNew(const CkArrayID &aid, CkArrayIndex *elems, int nElems, int factor) /;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:CkSectionID
ckNew	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    static CkSectionID ckNew(const CkArrayID &aid, int l, int u, int s, int factor=USE_DEFAULT_B/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:CkSectionID
ckNew	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    static int ckNew(CkMigrateMessage* impl_msg) { return idx_SWE_DimensionalSplittingCharm_CkMi/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
ckNew	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    static int ckNew(int nx, int ny, float dy, float dx, float originX, float originY, int posX,/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
ckNew	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    static void      ckNew(CkCallback cb, CkArrayOptions opts = CkArrayOptions()) { ckCreateEmpt/;"	f	class:CProxy_SWE_DimensionalSplittingCharm	typeref:typename:void
ckNew	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^CkArrayID CProxy_SWE_DimensionalSplittingCharm::ckNew(int nx, int ny, float dy, float dx, float /;"	f	class:CProxy_SWE_DimensionalSplittingCharm	typeref:typename:CkArrayID
ckNew	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CProxy_SWE_DimensionalSplittingCharm::ckNew(int nx, int ny, float dy, float dx, float origi/;"	f	class:CProxy_SWE_DimensionalSplittingCharm	typeref:typename:void
ckNew	src/examples/swe_charm.decl.h	/^    static int ckNew(CkArgMsg* impl_msg) { return idx_swe_charm_CkArgMsg(); }$/;"	f	class:CkIndex_swe_charm	typeref:typename:int
ckNew	src/examples/swe_charm.def.h	/^CkChareID CProxy_swe_charm::ckNew(CkArgMsg* impl_msg, int impl_onPE)$/;"	f	class:CProxy_swe_charm	typeref:typename:CkChareID
ckNew	src/examples/swe_charm.def.h	/^void CProxy_swe_charm::ckNew(CkArgMsg* impl_msg, CkChareID* pcid, int impl_onPE)$/;"	f	class:CProxy_swe_charm	typeref:typename:void
ckSend	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline void ckSend(CkArrayMessage *m, int ep, int opts = 0) const$/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:void
ckSend	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline void ckSend(CkArrayMessage *m, int ep, int opts = 0)$/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:void
ckSendSync	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline void *ckSendSync(CkArrayMessage *m, int ep) const$/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:void *
ckSetChareID	src/examples/swe_charm.decl.h	/^    void ckSetChareID(const CkChareID &c)$/;"	f	class:CProxy_swe_charm	typeref:typename:void
ckSetReductionClient	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline void ckSetReductionClient(CkCallback *cb) const$/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:void
ckSetReductionClient	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline void ckSetReductionClient(CkCallback *cb) const$/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:void
ckSetReductionClient	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline void ckSetReductionClient(CkCallback *cb) const$/;"	f	class:CProxy_SWE_DimensionalSplittingCharm	typeref:typename:void
ckSetReductionClient	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline void ckSetReductionClient(CkReductionClientFn fn,void *param=NULL) const$/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:void
ckSetReductionClient	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline void ckSetReductionClient(CkReductionClientFn fn,void *param=NULL) const$/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:void
ckSetReductionClient	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline void ckSetReductionClient(CkReductionClientFn fn,void *param=NULL) const$/;"	f	class:CProxy_SWE_DimensionalSplittingCharm	typeref:typename:void
ckUndelegate	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    void ckUndelegate(void)$/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:void
ckUndelegate	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    void ckUndelegate(void)$/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:void
ckUndelegate	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    void ckUndelegate(void)$/;"	f	class:CProxy_SWE_DimensionalSplittingCharm	typeref:typename:void
ckUndelegate	src/examples/swe_charm.decl.h	/^    void ckUndelegate(void)$/;"	f	class:CProxy_swe_charm	typeref:typename:void
clean	Makefile	/^clean:$/;"	t
cleanUp	src/opengl/visualization.cpp	/^void Visualization::cleanUp() {$/;"	f	class:Visualization	typeref:typename:void
clear	src/tools/ProgressBar.hh	/^	void clear()$/;"	f	class:tools::ProgressBar	typeref:typename:void
clocks	src/tools/Logger.hh	/^  std::map<std::string, clock_t> clocks;$/;"	m	class:tools::Logger	typeref:typename:std::map<std::string,clock_t>
cmd	buildAll.py	/^    cmd = ['scons']$/;"	v
cols	src/tools/Float2D.hh	/^		int cols;$/;"	m	class:Float2D	typeref:typename:int
compiler	build/options/SWE_intel_mpi.py	/^compiler='intel'$/;"	v
compiler	build/options/SWE_intel_mpi_vectorized.py	/^compiler='intel'$/;"	v
compute	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    static int compute() { return idx_compute_void(); }$/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
compute	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CProxyElement_SWE_DimensionalSplittingCharm::compute(const CkEntryOptions *impl_e_opts) $/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:void
compute	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CProxySection_SWE_DimensionalSplittingCharm::compute(const CkEntryOptions *impl_e_opts) $/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:void
compute	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CProxy_SWE_DimensionalSplittingCharm::compute(const CkEntryOptions *impl_e_opts) $/;"	f	class:CProxy_SWE_DimensionalSplittingCharm	typeref:typename:void
compute	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::compute() {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
computeBathymetrySources	src/blocks/rusanov/SWE_RusanovBlock.cpp	/^void SWE_RusanovBlock::computeBathymetrySources() {$/;"	f	class:SWE_RusanovBlock	typeref:typename:void
computeBathymetrySources	src/blocks/rusanov/SWE_RusanovBlockCUDA.cu	/^void SWE_RusanovBlockCUDA::computeBathymetrySources() {$/;"	f	typeref:typename:void SWE_RusanovBlockCUDA::
computeCapability	build/options/SWE_gnu_cuda.py	/^computeCapability='sm_21'$/;"	v
computeCapability	build/options/SWE_gnu_cuda_openGL.py	/^computeCapability='sm_21'$/;"	v
computeCapability	build/options/SWE_gnu_mpi_asagi.py	/^computeCapability='sm_21'$/;"	v
computeCapability	build/options/SWE_gnu_mpi_with_cuda.py	/^computeCapability='sm_21'$/;"	v
computeClock	src/blocks/SWE_DimensionalSplitting.hh	/^		std::clock_t computeClock;$/;"	m	class:SWE_DimensionalSplitting	typeref:typename:std::clock_t
computeClock	src/blocks/SWE_DimensionalSplittingCharm.hh	/^		std::clock_t computeClock;$/;"	m	class:SWE_DimensionalSplittingCharm	typeref:typename:std::clock_t
computeClock	src/blocks/SWE_DimensionalSplittingMpi.hh	/^		std::clock_t computeClock;$/;"	m	class:SWE_DimensionalSplittingMpi	typeref:typename:std::clock_t
computeClock	src/blocks/SWE_DimensionalSplittingUpcxx.hh	/^		std::clock_t computeClock;$/;"	m	class:SWE_DimensionalSplittingUpcxx	typeref:typename:std::clock_t
computeFlux	src/blocks/rusanov/SWE_RusanovBlock.cpp	/^float SWE_RusanovBlock::computeFlux(float fLow, float fHigh, float xiLow, float xiHigh,$/;"	f	class:SWE_RusanovBlock	typeref:typename:float
computeFlux	src/blocks/rusanov/SWE_RusanovBlockCUDA_kernels.cu	/^float computeFlux(float fLow, float fHigh, float xiLow, float xiHigh, float llf) {$/;"	f	typeref:typename:float
computeLocalSV	src/blocks/rusanov/SWE_RusanovBlock.cpp	/^float SWE_RusanovBlock::computeLocalSV(int i, int j, char dir) {$/;"	f	class:SWE_RusanovBlock	typeref:typename:float
computeMaxTimestep	src/blocks/SWE_Block.hh	/^void SWE_Block<T>::computeMaxTimestep( const float dryTol, const float cflNumber) {$/;"	f	class:SWE_Block	typeref:typename:void
computeMaxTimestep	src/blocks/SWE_Block_common.cpp	/^void SWE_Block::computeMaxTimestep( const float i_dryTol,$/;"	f	class:SWE_Block	typeref:typename:void
computeMaxTimestep	src/blocks/rusanov/SWE_RusanovBlock.hh	/^    virtual void computeMaxTimestep() {$/;"	f	class:SWE_RusanovBlock	typeref:typename:void
computeMaxTimestepCUDA	src/blocks/rusanov/SWE_RusanovBlockCUDA.cu	/^void SWE_RusanovBlockCUDA::computeMaxTimestepCUDA() {$/;"	f	typeref:typename:void SWE_RusanovBlockCUDA::
computeMiddleState	src/solvers/AugRie.hpp	/^    inline void computeMiddleState( const T &i_hLeft, const T &i_hRight,$/;"	f	class:solver::AugRie	typeref:typename:void
computeMiddleState	src/solvers/AugRieCUDA.h	/^computeMiddleState ($/;"	f	typeref:typename:__device__ void
computeMiddleState	src/solvers/AugRieFun.hpp	/^computeMiddleState ($/;"	f	class:solver::AugRieFun	typeref:typename:void
computeMiddleState	src/solvers/AugRie_SIMD.hpp	/^	computeMiddleState ($/;"	f	class:solver::AugRie_SIMD	typeref:typename:void
computeMiddleState	submodules/swe_solvers/src/solver/AugRie.hpp	/^    inline void computeMiddleState( const T &i_hLeft, const T &i_hRight,$/;"	f	class:solver::AugRie	typeref:typename:void
computeMiddleState	submodules/swe_solvers/src/solver/AugRieCUDA.h	/^computeMiddleState ($/;"	f	typeref:typename:__device__ void
computeMiddleState	submodules/swe_solvers/src/solver/AugRieFun.hpp	/^computeMiddleState ($/;"	f	class:solver::AugRieFun	typeref:typename:void
computeMiddleState	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	computeMiddleState ($/;"	f	class:solver::AugRie_SIMD	typeref:typename:void
computeMiddleState_SIMD	src/solvers/AugRie_SIMD.hpp	/^	computeMiddleState_SIMD ($/;"	f	class:solver::AugRie_SIMD	typeref:typename:void
computeMiddleState_SIMD	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	computeMiddleState_SIMD ($/;"	f	class:solver::AugRie_SIMD	typeref:typename:void
computeNetUpdates	src/solvers/AugRie.hpp	/^    void computeNetUpdates ( const T &i_hLeft,  const T &i_hRight,$/;"	f	class:solver::AugRie	typeref:typename:void
computeNetUpdates	src/solvers/AugRieFun.hpp	/^void computeNetUpdates ($/;"	f	class:solver::AugRieFun	typeref:typename:void
computeNetUpdates	src/solvers/AugRie_SIMD.hpp	/^	computeNetUpdates ($/;"	f	class:solver::AugRie_SIMD	typeref:typename:void
computeNetUpdates	src/solvers/FWave.hpp	/^    void computeNetUpdates ( const T &i_hLeft,  const T &i_hRight,$/;"	f	class:solver::FWave	typeref:typename:void
computeNetUpdates	src/solvers/FWaveVec.hpp	/^	void computeNetUpdates ( T i_hLeft,  T i_hRight,$/;"	f	class:solver::FWaveVec	typeref:typename:void
computeNetUpdates	src/solvers/Hybrid.hpp	/^    void computeNetUpdates ( const T &i_hLeft,  const T &i_hRight,$/;"	f	class:solver::Hybrid	typeref:typename:void
computeNetUpdates	submodules/swe_solvers/src/solver/AugRie.hpp	/^    void computeNetUpdates ( const T &i_hLeft,  const T &i_hRight,$/;"	f	class:solver::AugRie	typeref:typename:void
computeNetUpdates	submodules/swe_solvers/src/solver/AugRieFun.hpp	/^void computeNetUpdates ($/;"	f	class:solver::AugRieFun	typeref:typename:void
computeNetUpdates	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	computeNetUpdates ($/;"	f	class:solver::AugRie_SIMD	typeref:typename:void
computeNetUpdates	submodules/swe_solvers/src/solver/FWave.hpp	/^    void computeNetUpdates ( const T &i_hLeft,  const T &i_hRight,$/;"	f	class:solver::FWave	typeref:typename:void
computeNetUpdates	submodules/swe_solvers/src/solver/FWaveVec.hpp	/^	void computeNetUpdates ( T i_hLeft,  T i_hRight,$/;"	f	class:solver::FWaveVec	typeref:typename:void
computeNetUpdates	submodules/swe_solvers/src/solver/Hybrid.hpp	/^    void computeNetUpdates ( const T &i_hLeft,  const T &i_hRight,$/;"	f	class:solver::Hybrid	typeref:typename:void
computeNetUpdatesHybrid	src/solvers/FWave.hpp	/^    void computeNetUpdatesHybrid ( const T &i_hLeft,  const T &i_hRight,$/;"	f	class:solver::FWave	typeref:typename:void
computeNetUpdatesHybrid	submodules/swe_solvers/src/solver/FWave.hpp	/^    void computeNetUpdatesHybrid ( const T &i_hLeft,  const T &i_hRight,$/;"	f	class:solver::FWave	typeref:typename:void
computeNetUpdatesKernel	src/blocks/cuda/SWE_WavePropagationBlockCuda_kernels.cu	/^void computeNetUpdatesKernel($/;"	f	typeref:typename:void
computeNetUpdates_SIMD	src/solvers/AugRie_SIMD.hpp	/^	computeNetUpdates_SIMD ($/;"	f	class:solver::AugRie_SIMD	typeref:typename:void
computeNetUpdates_SIMD	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	computeNetUpdates_SIMD ($/;"	f	class:solver::AugRie_SIMD	typeref:typename:void
computeNetUpdates_WithWaveSpeeds	src/solvers/FWave.hpp	/^    void computeNetUpdates_WithWaveSpeeds ( const T i_waveSpeeds[2],$/;"	f	class:solver::FWave	typeref:typename:void
computeNetUpdates_WithWaveSpeeds	submodules/swe_solvers/src/solver/FWave.hpp	/^    void computeNetUpdates_WithWaveSpeeds ( const T i_waveSpeeds[2],$/;"	f	class:solver::FWave	typeref:typename:void
computeNumberOfBlockRows	src/examples/netCdf_mpi.cpp	/^int computeNumberOfBlockRows(int i_numberOfProcesses) {$/;"	f	typeref:typename:int
computeNumberOfBlockRows	src/examples/swe_mpi_legacy.cpp	/^int computeNumberOfBlockRows(int i_numberOfProcesses) {$/;"	f	typeref:typename:int
computeNumericalFluxes	src/blocks/SWE_DimensionalSplitting.cpp	/^void SWE_DimensionalSplitting::computeNumericalFluxes() {$/;"	f	class:SWE_DimensionalSplitting	typeref:typename:void
computeNumericalFluxes	src/blocks/SWE_DimensionalSplittingCharm.hh	/^		void computeNumericalFluxes() {}$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
computeNumericalFluxes	src/blocks/SWE_DimensionalSplittingMpi.cpp	/^void SWE_DimensionalSplittingMpi::computeNumericalFluxes () {$/;"	f	class:SWE_DimensionalSplittingMpi	typeref:typename:void
computeNumericalFluxes	src/blocks/SWE_DimensionalSplittingUpcxx.cpp	/^void SWE_DimensionalSplittingUpcxx::computeNumericalFluxes () {$/;"	f	class:SWE_DimensionalSplittingUpcxx	typeref:typename:void
computeNumericalFluxes	src/blocks/SWE_WaveAccumulationBlock.cpp	/^void SWE_WaveAccumulationBlock::computeNumericalFluxes() {$/;"	f	class:SWE_WaveAccumulationBlock	typeref:typename:void
computeNumericalFluxes	src/blocks/SWE_WavePropagationBlock.cpp	/^SWE_WavePropagationBlock::computeNumericalFluxes ()$/;"	f	class:SWE_WavePropagationBlock	typeref:typename:void
computeNumericalFluxes	src/blocks/SWE_WavePropagationBlockSIMD.cpp	/^SWE_WavePropagationBlockSIMD::computeNumericalFluxes ()$/;"	f	class:SWE_WavePropagationBlockSIMD	typeref:typename:void
computeNumericalFluxes	src/blocks/cuda/SWE_WavePropagationBlockCuda.cu	/^void SWE_WavePropagationBlockCuda::computeNumericalFluxes() {$/;"	f	typeref:typename:void SWE_WavePropagationBlockCuda::
computeNumericalFluxes	src/blocks/rusanov/SWE_RusanovBlock.cpp	/^void SWE_RusanovBlock::computeNumericalFluxes() {$/;"	f	class:SWE_RusanovBlock	typeref:typename:void
computeNumericalFluxes	src/blocks/rusanov/SWE_RusanovBlockCUDA.cu	/^void SWE_RusanovBlockCUDA::computeNumericalFluxes() {$/;"	f	typeref:typename:void SWE_RusanovBlockCUDA::
computeOneDPositionKernel	src/blocks/cuda/SWE_WavePropagationBlockCuda_kernels.cu	/^inline int computeOneDPositionKernel(const int i_i, const int i_j, const int i_ny) {$/;"	f	typeref:typename:int
computeTime	src/blocks/SWE_DimensionalSplitting.hh	/^		float computeTime;$/;"	m	class:SWE_DimensionalSplitting	typeref:typename:float
computeTime	src/blocks/SWE_DimensionalSplittingCharm.hh	/^		float computeTime;$/;"	m	class:SWE_DimensionalSplittingCharm	typeref:typename:float
computeTime	src/blocks/SWE_DimensionalSplittingMpi.hh	/^		float computeTime;$/;"	m	class:SWE_DimensionalSplittingMpi	typeref:typename:float
computeTime	src/blocks/SWE_DimensionalSplittingUpcxx.hh	/^		float computeTime;$/;"	m	class:SWE_DimensionalSplittingUpcxx	typeref:typename:float
computeTimeWall	src/blocks/SWE_DimensionalSplitting.hh	/^		float computeTimeWall;$/;"	m	class:SWE_DimensionalSplitting	typeref:typename:float
computeTimeWall	src/blocks/SWE_DimensionalSplittingCharm.hh	/^		float computeTimeWall;$/;"	m	class:SWE_DimensionalSplittingCharm	typeref:typename:float
computeTimeWall	src/blocks/SWE_DimensionalSplittingMpi.hh	/^		float computeTimeWall;$/;"	m	class:SWE_DimensionalSplittingMpi	typeref:typename:float
computeTimeWall	src/blocks/SWE_DimensionalSplittingUpcxx.hh	/^		float computeTimeWall;$/;"	m	class:SWE_DimensionalSplittingUpcxx	typeref:typename:float
computeWaveDecomposition	src/solvers/AugRie.hpp	/^    inline void computeWaveDecomposition( T o_fWaves[3][2],$/;"	f	class:solver::AugRie	typeref:typename:void
computeWaveDecomposition	src/solvers/AugRie_SIMD.hpp	/^	computeWaveDecomposition (real o_fWaves[3][2], real o_waveSpeeds[3])$/;"	f	class:solver::AugRie_SIMD	typeref:typename:void
computeWaveDecomposition	src/solvers/FWave.hpp	/^    void computeWaveDecomposition( const T i_waveSpeeds[2],$/;"	f	class:solver::FWave	typeref:typename:void
computeWaveDecomposition	submodules/swe_solvers/src/solver/AugRie.hpp	/^    inline void computeWaveDecomposition( T o_fWaves[3][2],$/;"	f	class:solver::AugRie	typeref:typename:void
computeWaveDecomposition	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	computeWaveDecomposition (real o_fWaves[3][2], real o_waveSpeeds[3])$/;"	f	class:solver::AugRie_SIMD	typeref:typename:void
computeWaveDecomposition	submodules/swe_solvers/src/solver/FWave.hpp	/^    void computeWaveDecomposition( const T i_waveSpeeds[2],$/;"	f	class:solver::FWave	typeref:typename:void
computeWaveDecomposition_SIMD	src/solvers/AugRie_SIMD.hpp	/^	computeWaveDecomposition_SIMD (real_vector o_fWaves[3][2], real_vector o_waveSpeeds[3], const r/;"	f	class:solver::AugRie_SIMD	typeref:typename:void
computeWaveDecomposition_SIMD	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	computeWaveDecomposition_SIMD (real_vector o_fWaves[3][2], real_vector o_waveSpeeds[3], const r/;"	f	class:solver::AugRie_SIMD	typeref:typename:void
computeWaveSpeeds	src/solvers/FWave.hpp	/^    void computeWaveSpeeds( T o_waveSpeeds[2]) const {$/;"	f	class:solver::FWave	typeref:typename:void
computeWaveSpeeds	submodules/swe_solvers/src/solver/FWave.hpp	/^    void computeWaveSpeeds( T o_waveSpeeds[2]) const {$/;"	f	class:solver::FWave	typeref:typename:void
compute_2_closure	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^      compute_2_closure() {$/;"	f	struct:Closure_SWE_DimensionalSplittingCharm::compute_2_closure
compute_2_closure	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^      compute_2_closure(CkMigrateMessage*) {$/;"	f	struct:Closure_SWE_DimensionalSplittingCharm::compute_2_closure
compute_2_closure	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^    struct Closure_SWE_DimensionalSplittingCharm::compute_2_closure : public SDAG::Closure {$/;"	s	class:Closure_SWE_DimensionalSplittingCharm
compute_end	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::compute_end() {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
connectBoundaries	src/blocks/SWE_DimensionalSplittingUpcxx.cpp	/^void SWE_DimensionalSplittingUpcxx::connectBoundaries(BlockConnectInterface<upcxx::global_ptr<fl/;"	f	class:SWE_DimensionalSplittingUpcxx	typeref:typename:void
connectNeighbours	src/blocks/SWE_DimensionalSplittingMpi.cpp	/^void SWE_DimensionalSplittingMpi::connectNeighbours(int p_neighbourRankId[]) {$/;"	f	class:SWE_DimensionalSplittingMpi	typeref:typename:void
containsBathymetry	src/blocks/SWE_DimensionalSplittingCharm.hh	/^		bool containsBathymetry;$/;"	m	class:copyLayer	typeref:typename:bool
contribute	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CProxySection_SWE_DimensionalSplittingCharm::contribute(int dataSize,void *data,CkReduction/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:void
coord	src/opengl/visualization.cpp	/^int Visualization::coord(int x, int y, int width) {$/;"	f	class:Visualization	typeref:typename:int
copyLayer	src/blocks/SWE_DimensionalSplittingCharm.hh	/^class copyLayer : public CMessage_copyLayer {$/;"	c
copyRights	src/tools/Logger.hh	/^  const std::string copyRights;$/;"	m	class:tools::Logger	typeref:typename:const std::string
counterAugRie	src/solvers/Hybrid.hpp	/^    long counterAugRie;$/;"	m	class:solver::Hybrid	typeref:typename:long
counterAugRie	submodules/swe_solvers/src/solver/Hybrid.hpp	/^    long counterAugRie;$/;"	m	class:solver::Hybrid	typeref:typename:long
counterFWave	src/solvers/Hybrid.hpp	/^    long counterFWave;$/;"	m	class:solver::Hybrid	typeref:typename:long
counterFWave	submodules/swe_solvers/src/solver/Hybrid.hpp	/^    long counterFWave;$/;"	m	class:solver::Hybrid	typeref:typename:long
cout	src/tools/Logger.hh	/^    std::ostream& cout() {$/;"	f	class:tools::Logger	typeref:typename:std::ostream &
createIndicesVBO	src/opengl/visualization.cpp	/^void Visualization::createIndicesVBO(int xsize, int ysize)$/;"	f	class:Visualization	typeref:typename:void
createRandomNumber	submodules/swe_solvers/src/unit_tests/ComponentsTest.cpp	/^double ComponentsTest::createRandomNumber( const double i_min, const double i_max) {$/;"	f	class:ComponentsTest	typeref:typename:double
createVertexVBO	src/opengl/visualization.cpp	/^void Visualization::createVertexVBO(VBO &vbo, struct cudaGraphicsResource *&vbo_res,$/;"	f	class:Visualization	typeref:typename:void
create_nc_testphi	submodules/swe_solvers/unit_tests/scripts/create_nc_testphi.m	/^function[size] = create_nc_testphi(path)$/;"	f
cuda_vbo_normals	src/opengl/visualization.h	/^	struct cudaGraphicsResource* cuda_vbo_normals;$/;"	m	class:Visualization	typeref:struct:cudaGraphicsResource *
cuda_vbo_watersurface	src/opengl/visualization.h	/^	struct cudaGraphicsResource* cuda_vbo_watersurface;$/;"	m	class:Visualization	typeref:struct:cudaGraphicsResource *
curTime	src/opengl/simulation.h	/^    float curTime;$/;"	m	class:Simulation	typeref:typename:float
currentCheckpoint	src/blocks/SWE_DimensionalSplittingCharm.hh	/^		int currentCheckpoint;$/;"	m	class:SWE_DimensionalSplittingCharm	typeref:typename:int
currentSimulationTime	src/blocks/SWE_DimensionalSplittingCharm.hh	/^		float currentSimulationTime;$/;"	m	class:SWE_DimensionalSplittingCharm	typeref:typename:float
currentTime	src/scenarios/SWE_TsunamiScenario.hh	/^		float currentTime;$/;"	m	class:SWE_TsunamiScenario	typeref:typename:float
dX	src/writer/VtkWriter.hh	/^	float dX, dY;$/;"	m	class:VtkWriter	typeref:typename:float
dY	src/writer/VtkWriter.hh	/^	float dX, dY;$/;"	m	class:VtkWriter	typeref:typename:float
data	src/tools/Float2DNative.hh	/^		std::shared_ptr<float> data;$/;"	m	class:Float2DNative	typeref:typename:std::shared_ptr<float>
data	src/tools/Float2DUpcxx.hh	/^		upcxx::global_ptr<float> data;$/;"	m	class:Float2DUpcxx	typeref:typename:upcxx::global_ptr<float>
dataFile	src/writer/NetCdfWriter.hh	/^		int dataFile;$/;"	m	class:NetCdfWriter	typeref:typename:int
dealloc	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CMessage_copyLayer::dealloc(void *p) {$/;"	f	class:CMessage_copyLayer	typeref:typename:void
debugVisBuffer	src/opengl/simulation.cu	/^void Simulation::debugVisBuffer(float3* _visBuffer) {$/;"	f	typeref:typename:void Simulation::
debug_charm_test	Makefile	/^debug_charm_test:$/;"	t
defaultCflNumber	src/Constants.hh	/^const float defaultCflNumber = 0.4;$/;"	v	typeref:typename:const float
defaultDryTol	src/Constants.hh	/^const float defaultDryTol = 0.1;$/;"	v	typeref:typename:const float
defaultScenario	src/opengl/simulation.h	/^    SWE_SplashingPoolScenario defaultScenario;$/;"	m	class:Simulation	typeref:typename:SWE_SplashingPoolScenario
deleteCudaResource	src/opengl/visualization.cpp	/^void Visualization::deleteCudaResource(struct cudaGraphicsResource *&vbo_res)$/;"	f	class:Visualization	typeref:typename:void
description	src/tools/args.hh	/^		std::string description;$/;"	m	struct:tools::Args::optionInfo	typeref:typename:std::string
determineRiemannStructure	src/solvers/AugRie.hpp	/^    inline RiemannStructure determineRiemannStructure( const T &i_hLeft, const T &i_hRight,$/;"	f	class:solver::AugRie	typeref:typename:RiemannStructure
determineRiemannStructure	src/solvers/AugRie_SIMD.hpp	/^	determineRiemannStructure (const real &i_hLeft, const real &i_hRight,$/;"	f	class:solver::AugRie_SIMD	typeref:typename:integer
determineRiemannStructure	submodules/swe_solvers/src/solver/AugRie.hpp	/^    inline RiemannStructure determineRiemannStructure( const T &i_hLeft, const T &i_hRight,$/;"	f	class:solver::AugRie	typeref:typename:RiemannStructure
determineRiemannStructure	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	determineRiemannStructure (const real &i_hLeft, const real &i_hRight,$/;"	f	class:solver::AugRie_SIMD	typeref:typename:integer
determineRiemannStructure_SIMD	src/solvers/AugRie_SIMD.hpp	/^	determineRiemannStructure_SIMD ($/;"	f	class:solver::AugRie_SIMD	typeref:typename:integer_vector
determineRiemannStructure_SIMD	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	determineRiemannStructure_SIMD ($/;"	f	class:solver::AugRie_SIMD	typeref:typename:integer_vector
determineWetDryState	src/solvers/AugRie.hpp	/^    void determineWetDryState() {$/;"	f	class:solver::AugRie	typeref:typename:void
determineWetDryState	src/solvers/AugRie_SIMD.hpp	/^	determineWetDryState ()$/;"	f	class:solver::AugRie_SIMD	typeref:typename:void
determineWetDryState	src/solvers/FWave.hpp	/^    void determineWetDryState() {$/;"	f	class:solver::FWave	typeref:typename:void
determineWetDryState	submodules/swe_solvers/src/solver/AugRie.hpp	/^    void determineWetDryState() {$/;"	f	class:solver::AugRie	typeref:typename:void
determineWetDryState	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	determineWetDryState ()$/;"	f	class:solver::AugRie_SIMD	typeref:typename:void
determineWetDryState	submodules/swe_solvers/src/solver/FWave.hpp	/^    void determineWetDryState() {$/;"	f	class:solver::FWave	typeref:typename:void
determineWetDryState_SIMD	src/solvers/AugRie_SIMD.hpp	/^	determineWetDryState_SIMD ()$/;"	f	class:solver::AugRie_SIMD	typeref:typename:void
determineWetDryState_SIMD	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	determineWetDryState_SIMD ()$/;"	f	class:solver::AugRie_SIMD	typeref:typename:void
disableShader	src/opengl/shader.cpp	/^void Shader::disableShader() {$/;"	f	class:Shader	typeref:typename:void
displacementGrid	src/scenarios/SWE_AsagiScenario.hh	/^		Grid* displacementGrid;$/;"	m	class:SWE_AsagiScenario	typeref:typename:Grid *
displacementGrid	src/scenarios/SWE_TsunamiScenario.hh	/^		InputGridSpecification displacementGrid;$/;"	m	class:SWE_TsunamiScenario	typeref:typename:InputGridSpecification
displacementRange	src/scenarios/SWE_AsagiScenario.hh	/^		float displacementRange[4];$/;"	m	class:SWE_AsagiScenario	typeref:typename:float[4]
displayImage	src/opengl/camera.cpp	/^void Camera::displayImage() {$/;"	f	class:Camera	typeref:typename:void
done	src/examples/swe_charm.cpp	/^void swe_charm::done(int index) {$/;"	f	class:swe_charm	typeref:typename:void
done	src/examples/swe_charm.decl.h	/^    static int done(int index) { return idx_done_marshall2(); }$/;"	f	class:CkIndex_swe_charm	typeref:typename:int
done	src/examples/swe_charm.def.h	/^void CProxy_swe_charm::done(int index, const CkEntryOptions *impl_e_opts)$/;"	f	class:CProxy_swe_charm	typeref:typename:void
done	src/opengl/controller.h	/^	bool done;$/;"	m	class:Controller	typeref:typename:bool
doneInserting	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline void doneInserting(void)$/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:void
doneInserting	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline void doneInserting(void)$/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:void
doneInserting	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline void doneInserting(void)$/;"	f	class:CProxy_SWE_DimensionalSplittingCharm	typeref:typename:void
done_2_closure	src/examples/swe_charm.def.h	/^      done_2_closure() {$/;"	f	struct:Closure_swe_charm::done_2_closure
done_2_closure	src/examples/swe_charm.def.h	/^      done_2_closure(CkMigrateMessage*) {$/;"	f	struct:Closure_swe_charm::done_2_closure
done_2_closure	src/examples/swe_charm.def.h	/^    struct Closure_swe_charm::done_2_closure : public SDAG::Closure {$/;"	s	class:Closure_swe_charm
dryTol	src/opengl/simulation.cu	/^const float dryTol = 100.;$/;"	v	typeref:typename:const float
dryTol	src/solvers/AugRieFun.hpp	/^	const real dryTol;$/;"	m	class:solver::AugRieFun	typeref:typename:const real
dryTol	src/solvers/FWaveCuda.h	/^const T dryTol = (T) 100.;$/;"	v	typeref:typename:const T
dryTol	src/solvers/FWaveVec.hpp	/^	const T dryTol;$/;"	m	class:solver::FWaveVec	typeref:typename:const T
dryTol	src/solvers/Hybrid.hpp	/^    const T dryTol;$/;"	m	class:solver::Hybrid	typeref:typename:const T
dryTol	src/solvers/WavePropagation.hpp	/^    T dryTol;$/;"	m	class:solver::WavePropagation	typeref:typename:T
dryTol	submodules/swe_solvers/src/solver/AugRieFun.hpp	/^	const real dryTol;$/;"	m	class:solver::AugRieFun	typeref:typename:const real
dryTol	submodules/swe_solvers/src/solver/FWaveCuda.h	/^const T dryTol = (T) 100.;$/;"	v	typeref:typename:const T
dryTol	submodules/swe_solvers/src/solver/FWaveVec.hpp	/^	const T dryTol;$/;"	m	class:solver::FWaveVec	typeref:typename:const T
dryTol	submodules/swe_solvers/src/solver/Hybrid.hpp	/^    const T dryTol;$/;"	m	class:solver::Hybrid	typeref:typename:const T
dryTol	submodules/swe_solvers/src/solver/WavePropagation.hpp	/^    T dryTol;$/;"	m	class:solver::WavePropagation	typeref:typename:T
dryTol	submodules/swe_solvers/src/unit_tests/ComponentsTest.h	/^  const double dryTol;$/;"	m	class:ComponentsTest	typeref:typename:const double
dryTol	submodules/swe_solvers/unit_tests/scripts/calculate_hstar.m	/^dryTol = 0.001;$/;"	v
dryTol	submodules/swe_solvers/unit_tests/scripts/create_nc_testphi.m	/^dryTol = 0.1;$/;"	v
dryTol_v	src/solvers/AugRie_SIMD.hpp	/^	const real_vector dryTol_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const real_vector
dryTol_v	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	const real_vector dryTol_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const real_vector
dryTol_v_neg	src/solvers/AugRie_SIMD.hpp	/^	const real_vector dryTol_v_neg;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const real_vector
dryTol_v_neg	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	const real_vector dryTol_v_neg;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const real_vector
dx	src/blocks/SWE_Block.hh	/^		float dx;$/;"	m	class:SWE_Block	typeref:typename:float
dx	src/blocks/SWE_Block_common.hh	/^		float dx;$/;"	m	class:SWE_Block	typeref:typename:float
dx	src/scenarios/SWE_TsunamiScenario.hh	/^		float dx;$/;"	m	class:SWE_TsunamiScenario	typeref:typename:float
dy	src/blocks/SWE_Block.hh	/^		float dy;$/;"	m	class:SWE_Block	typeref:typename:float
dy	src/blocks/SWE_Block_common.hh	/^		float dy;$/;"	m	class:SWE_Block	typeref:typename:float
dy	src/scenarios/SWE_TsunamiScenario.hh	/^		float dy;$/;"	m	class:SWE_TsunamiScenario	typeref:typename:float
element_t	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    typedef CProxyElement_SWE_DimensionalSplittingCharm element_t;$/;"	t	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:CProxyElement_SWE_DimensionalSplittingCharm
element_t	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    typedef CProxyElement_SWE_DimensionalSplittingCharm element_t;$/;"	t	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:CProxyElement_SWE_DimensionalSplittingCharm
element_t	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    typedef CProxyElement_SWE_DimensionalSplittingCharm element_t;$/;"	t	class:CProxy_SWE_DimensionalSplittingCharm	typeref:typename:CProxyElement_SWE_DimensionalSplittingCharm
element_t	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    typedef CProxyElement_SWE_DimensionalSplittingCharm element_t;$/;"	t	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:CProxyElement_SWE_DimensionalSplittingCharm
element_t	src/examples/swe_charm.decl.h	/^    typedef CProxy_swe_charm element_t;$/;"	t	class:CProxy_swe_charm	typeref:typename:CProxy_swe_charm
element_t	src/examples/swe_charm.decl.h	/^    typedef CProxy_swe_charm element_t;$/;"	t	class:CkIndex_swe_charm	typeref:typename:CProxy_swe_charm
enableShader	src/opengl/shader.cpp	/^void Shader::enableShader() {$/;"	f	class:Shader	typeref:typename:void
endSimulation	src/scenarios/SWE_Scenario.hh	/^		virtual float endSimulation() { return 0; };$/;"	f	class:SWE_Scenario	typeref:typename:float
endSimulation	src/scenarios/SWE_simple_scenarios.hh	/^	virtual float endSimulation() { return (float) 15; };$/;"	f	class:SWE_BathymetryDamBreakScenario	typeref:typename:float
endSimulation	src/scenarios/SWE_simple_scenarios.hh	/^	virtual float endSimulation() { return (float) 15; };$/;"	f	class:SWE_RadialDamBreakScenario	typeref:typename:float
endSimulation	src/scenarios/SWE_simple_scenarios.hh	/^	virtual float endSimulation() { return (float) 15; };$/;"	f	class:SWE_SplashingPoolScenario	typeref:typename:float
endSimulation	src/scenarios/SWE_simple_scenarios.hh	/^    float endSimulation() { return 0.5f; };$/;"	f	class:SWE_SplashingConeScenario	typeref:typename:float
endTextMode	src/opengl/text.h	/^	void endTextMode()$/;"	f	class:Text	typeref:typename:void
endTime	src/blocks/SWE_DimensionalSplitting.hh	/^		struct timespec endTime;$/;"	m	class:SWE_DimensionalSplitting	typeref:struct:timespec
endTime	src/blocks/SWE_DimensionalSplittingCharm.hh	/^		struct timespec endTime;$/;"	m	class:SWE_DimensionalSplittingCharm	typeref:struct:timespec
endTime	src/blocks/SWE_DimensionalSplittingMpi.hh	/^		struct timespec endTime;$/;"	m	class:SWE_DimensionalSplittingMpi	typeref:struct:timespec
endTime	src/blocks/SWE_DimensionalSplittingUpcxx.hh	/^		struct timespec endTime;$/;"	m	class:SWE_DimensionalSplittingUpcxx	typeref:struct:timespec
endTimeCompute	src/blocks/SWE_DimensionalSplittingCharm.hh	/^		struct timespec endTimeCompute;$/;"	m	class:SWE_DimensionalSplittingCharm	typeref:struct:timespec
errmsg	buildAll.py	/^    _, errmsg = p.communicate()$/;"	v
exchangeBathymetry	src/blocks/SWE_DimensionalSplittingMpi.cpp	/^void SWE_DimensionalSplittingMpi::exchangeBathymetry() {$/;"	f	class:SWE_DimensionalSplittingMpi	typeref:typename:void
exchangeBathymetry	src/blocks/SWE_DimensionalSplittingUpcxx.cpp	/^void SWE_DimensionalSplittingUpcxx::exchangeBathymetry() {$/;"	f	class:SWE_DimensionalSplittingUpcxx	typeref:typename:void
exchangeBottomTopGhostLayers	src/examples/netCdf_mpi.cpp	/^void exchangeBottomTopGhostLayers( const int i_bottomNeighborRank, SWE_Block1D* o_bottomNeighbor/;"	f	typeref:typename:void
exchangeBottomTopGhostLayers	src/examples/swe_mpi_legacy.cpp	/^void exchangeBottomTopGhostLayers( const int i_bottomNeighborRank, SWE_Block1D* o_bottomNeighbor/;"	f	typeref:typename:void
exchangeLeftRightGhostLayers	src/examples/netCdf_mpi.cpp	/^void exchangeLeftRightGhostLayers( const int i_leftNeighborRank,  SWE_Block1D* o_leftInflow,  SW/;"	f	typeref:typename:void
exchangeLeftRightGhostLayers	src/examples/swe_mpi_legacy.cpp	/^void exchangeLeftRightGhostLayers( const int i_leftNeighborRank,  SWE_Block1D* o_leftInflow,  SW/;"	f	typeref:typename:void
exists	CudaTool.py	/^def exists(env):$/;"	f
exit	src/examples/swe_charm.cpp	/^void swe_charm::exit() {$/;"	f	class:swe_charm	typeref:typename:void
exit	src/examples/swe_charm.decl.h	/^    static int exit() { return idx_exit_void(); }$/;"	f	class:CkIndex_swe_charm	typeref:typename:int
exit_3_closure	src/examples/swe_charm.def.h	/^      exit_3_closure() {$/;"	f	struct:Closure_swe_charm::exit_3_closure
exit_3_closure	src/examples/swe_charm.def.h	/^      exit_3_closure(CkMigrateMessage*) {$/;"	f	struct:Closure_swe_charm::exit_3_closure
exit_3_closure	src/examples/swe_charm.def.h	/^    struct Closure_swe_charm::exit_3_closure : public SDAG::Closure {$/;"	s	class:Closure_swe_charm
fWaveComputeNetUpdates	src/solvers/FWaveCuda.h	/^void fWaveComputeNetUpdates( const T i_gravity,$/;"	f	typeref:typename:__device__ void
fWaveComputeNetUpdates	submodules/swe_solvers/src/solver/FWaveCuda.h	/^void fWaveComputeNetUpdates( const T i_gravity,$/;"	f	typeref:typename:__device__ void
fWaveComputeWaveDecomposition	src/solvers/FWaveCuda.h	/^inline void fWaveComputeWaveDecomposition( const T i_gravity,$/;"	f	typeref:typename:__device__ void
fWaveComputeWaveDecomposition	src/solvers/FWaveVec.hpp	/^	void fWaveComputeWaveDecomposition($/;"	f	class:solver::FWaveVec	typeref:typename:void
fWaveComputeWaveDecomposition	submodules/swe_solvers/src/solver/FWaveCuda.h	/^inline void fWaveComputeWaveDecomposition( const T i_gravity,$/;"	f	typeref:typename:__device__ void
fWaveComputeWaveDecomposition	submodules/swe_solvers/src/solver/FWaveVec.hpp	/^	void fWaveComputeWaveDecomposition($/;"	f	class:solver::FWaveVec	typeref:typename:void
fWaveComputeWaveSpeeds	src/solvers/FWaveCuda.h	/^inline void fWaveComputeWaveSpeeds( const T i_gravity,$/;"	f	typeref:typename:__device__ void
fWaveComputeWaveSpeeds	src/solvers/FWaveVec.hpp	/^	void fWaveComputeWaveSpeeds($/;"	f	class:solver::FWaveVec	typeref:typename:void
fWaveComputeWaveSpeeds	submodules/swe_solvers/src/solver/FWaveCuda.h	/^inline void fWaveComputeWaveSpeeds( const T i_gravity,$/;"	f	typeref:typename:__device__ void
fWaveComputeWaveSpeeds	submodules/swe_solvers/src/solver/FWaveVec.hpp	/^	void fWaveComputeWaveSpeeds($/;"	f	class:solver::FWaveVec	typeref:typename:void
fWaveSolver	src/solvers/Hybrid.hpp	/^    solver::FWave<T> fWaveSolver;$/;"	m	class:solver::Hybrid	typeref:typename:solver::FWave<T>
fWaveSolver	submodules/swe_solvers/src/solver/Hybrid.hpp	/^    solver::FWave<T> fWaveSolver;$/;"	m	class:solver::Hybrid	typeref:typename:solver::FWave<T>
fabs_ps	src/solvers/SIMD_DEFINITIONS.hpp	/^	inline __m128 fabs_ps(const __m128 x) {$/;"	f	typeref:typename:__m128
fabs_ps	src/solvers/SIMD_DEFINITIONS.hpp	/^	inline __m256 fabs_ps(const __m256 x) {$/;"	f	typeref:typename:__m256
fabs_ps	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	inline __m128 fabs_ps(const __m128 x) {$/;"	f	typeref:typename:__m128
fabs_ps	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	inline __m256 fabs_ps(const __m256 x) {$/;"	f	typeref:typename:__m256
fileName	src/writer/Writer.hh	/^		const std::string fileName;$/;"	m	class:Writer	typeref:typename:const std::string
files	paraview/netcdf_swe.py	/^files = QtGui.QFileDialog.getOpenFileNames(None, 'Select SWE output files ...', QtCore.QString()/;"	v
finalize	src/blocks/cuda/SWE_BlockCUDA.cu	/^void SWE_BlockCUDA::finalize()$/;"	f	typeref:typename:void SWE_BlockCUDA::
finialize	src/opengl/vbo.h	/^	void finialize()$/;"	f	class:VBO	typeref:typename:void
finishMessage	src/tools/Logger.hh	/^  const std::string finishMessage;$/;"	m	class:tools::Logger	typeref:typename:const std::string
flops	src/blocks/SWE_WavePropagationBlockSIMD.hh	/^	size_t flops;$/;"	m	class:SWE_WavePropagationBlockSIMD	typeref:typename:size_t
flops	src/solvers/AugRie_SIMD.hpp	/^	mutable size_t flops;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:size_t
flops	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	mutable size_t flops;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:size_t
flush	src/writer/NetCdfWriter.hh	/^		unsigned int flush;$/;"	m	class:NetCdfWriter	typeref:typename:unsigned int
font	src/opengl/text.cpp	/^TTF_Font* Text::font = 0L;$/;"	m	class:Text	typeref:typename:TTF_Font *
font	src/opengl/text.h	/^	static TTF_Font* font;$/;"	m	class:Text	typeref:typename:TTF_Font *
fragmentShader	src/opengl/shader.h	/^	GLuint   fragmentShader;$/;"	m	class:Shader	typeref:typename:GLuint
fragmentShaderLength	src/opengl/shader.h	/^	GLint    fragmentShaderLength;$/;"	m	class:Shader	typeref:typename:GLint
fragmentShaderSource	src/opengl/shader.h	/^	GLchar * fragmentShaderSource;$/;"	m	class:Shader	typeref:typename:GLchar *
frames	src/opengl/camera.h	/^	unsigned int frames;$/;"	m	class:Camera	typeref:typename:unsigned int
freeMpiType	src/blocks/SWE_DimensionalSplittingMpi.cpp	/^void SWE_DimensionalSplittingMpi::freeMpiType() {$/;"	f	class:SWE_DimensionalSplittingMpi	typeref:typename:void
g	src/Constants.hh	/^const float g = 9.81;$/;"	v	typeref:typename:const float
g	src/blocks/SWE_Block_common.cpp	/^const float SWE_Block::g = 9.81f;$/;"	m	class:SWE_Block	typeref:typename:const float
g	src/blocks/SWE_Block_common.hh	/^		static const float g;$/;"	m	class:SWE_Block	typeref:typename:const float
g	src/solvers/AugRieFun.hpp	/^	const real g;            \/\/ gravity constant$/;"	m	class:solver::AugRieFun	typeref:typename:const real
g	src/solvers/Hybrid.hpp	/^    const T g;$/;"	m	class:solver::Hybrid	typeref:typename:const T
g	src/solvers/WavePropagation.hpp	/^    const T g;$/;"	m	class:solver::WavePropagation	typeref:typename:const T
g	submodules/swe_solvers/src/solver/AugRieFun.hpp	/^	const real g;            \/\/ gravity constant$/;"	m	class:solver::AugRieFun	typeref:typename:const real
g	submodules/swe_solvers/src/solver/Hybrid.hpp	/^    const T g;$/;"	m	class:solver::Hybrid	typeref:typename:const T
g	submodules/swe_solvers/src/solver/WavePropagation.hpp	/^    const T g;$/;"	m	class:solver::WavePropagation	typeref:typename:const T
g	submodules/swe_solvers/unit_tests/scripts/calculate_hstar.m	/^g = 9.81;$/;"	v
g_v	src/solvers/AugRie_SIMD.hpp	/^	const real_vector g_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const real_vector
g_v	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	const real_vector g_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const real_vector
gdb	Makefile	/^gdb: test\/runner.cpp$/;"	t
generate	CudaTool.py	/^def generate(env):$/;"	f
generateBaseFileName	src/tools/help.hh	/^std::string generateBaseFileName(std::string &i_baseName, int i_blockPositionX , int i_blockPosi/;"	f	typeref:typename:std::string
generateContainerFileName	src/tools/help.hh	/^inline std::string generateContainerFileName(std::string baseName, int timeStep) {$/;"	f	typeref:typename:std::string
generateFileName	src/tools/help.hh	/^inline std::string generateFileName( std::string i_baseName,$/;"	f	typeref:typename:std::string
generateFileName	src/tools/help.hh	/^inline std::string generateFileName(std::string baseName, int timeStep) {$/;"	f	typeref:typename:std::string
generateFileName	src/tools/help.hh	/^inline std::string generateFileName(std::string baseName, int timeStep, int block_X, int block_Y/;"	f	typeref:typename:std::string
generateFileName	src/writer/VtkWriter.hh	/^    std::string generateFileName()$/;"	f	class:VtkWriter	typeref:typename:std::string
getArgument	src/tools/args.hh	/^	T getArgument(const std::string &option)$/;"	f	class:tools::Args	typeref:typename:T
getArgument	src/tools/args.hh	/^	T getArgument(const std::string &option, T defaultArgument)$/;"	f	class:tools::Args	typeref:typename:T
getArgument	src/tools/args.hh	/^std::string tools::Args::getArgument(const std::string &option)$/;"	f	class:tools::tools::Args	typeref:typename:std::string
getBathyCoord	src/blocks/cuda/SWE_BlockCUDA.hh	/^int getBathyCoord(int x, int y, int ny) {$/;"	f	typeref:typename:__device__ int
getBathymetry	src/blocks/SWE_Block.hh	/^const T& SWE_Block<T>::getBathymetry() {$/;"	f	class:SWE_Block	typeref:typename:const T &
getBathymetry	src/blocks/SWE_Block_common.cpp	/^const Float2D& SWE_Block::getBathymetry() {$/;"	f	class:SWE_Block	typeref:typename:const Float2D &
getBathymetry	src/opengl/simulation.h	/^    const Float2D& getBathymetry() { return block->getBathymetry(); }$/;"	f	class:Simulation	typeref:typename:const Float2D &
getBathymetry	src/scenarios/SWE_AsagiScenario.hh	/^		float getBathymetry(float x, float y) {$/;"	f	class:SWE_AsagiScenario	typeref:typename:float
getBathymetry	src/scenarios/SWE_Scenario.hh	/^		virtual float getBathymetry(float x, float y) { return 0; }$/;"	f	class:SWE_Scenario	typeref:typename:float
getBathymetry	src/scenarios/SWE_TsunamiScenario.hh	/^		virtual float getBathymetry(float x, float y) {$/;"	f	class:SWE_TsunamiScenario	typeref:typename:float
getBathymetry	src/scenarios/SWE_simple_scenarios.hh	/^    float getBathymetry(float x, float y) { $/;"	f	class:SWE_BathymetryDamBreakScenario	typeref:typename:float
getBathymetry	src/scenarios/SWE_simple_scenarios.hh	/^    float getBathymetry(float x, float y) { $/;"	f	class:SWE_SeaAtRestScenario	typeref:typename:float
getBathymetry	src/scenarios/SWE_simple_scenarios.hh	/^    float getBathymetry(float x, float y) { $/;"	f	class:SWE_SplashingConeScenario	typeref:typename:float
getBathymetry	src/scenarios/SWE_simple_scenarios.hh	/^    float getBathymetry(float x, float y) {$/;"	f	class:SWE_RadialDamBreakScenario	typeref:typename:float
getBathymetry	src/scenarios/SWE_simple_scenarios.hh	/^    float getBathymetry(float x, float y) {$/;"	f	class:SWE_SplashingPoolScenario	typeref:typename:float
getBoundary	src/scenarios/SWE_TsunamiScenario.hh	/^		float getBoundary(BoundaryEdge edge) {$/;"	f	class:SWE_TsunamiScenario	typeref:typename:float
getBoundaryPos	src/scenarios/SWE_AsagiScenario.hh	/^		float getBoundaryPos(Boundary boundary) {$/;"	f	class:SWE_AsagiScenario	typeref:typename:float
getBoundaryPos	src/scenarios/SWE_Scenario.hh	/^		virtual float getBoundaryPos(Boundary boundary) {$/;"	f	class:SWE_Scenario	typeref:typename:float
getBoundaryPos	src/scenarios/SWE_simple_scenarios.hh	/^    float getBoundaryPos(Boundary boundary) {$/;"	f	class:SWE_BathymetryDamBreakScenario	typeref:typename:float
getBoundaryPos	src/scenarios/SWE_simple_scenarios.hh	/^    float getBoundaryPos(Boundary boundary) {$/;"	f	class:SWE_RadialDamBreakScenario	typeref:typename:float
getBoundaryPos	src/scenarios/SWE_simple_scenarios.hh	/^    float getBoundaryPos(Boundary boundary) {$/;"	f	class:SWE_SplashingPoolScenario	typeref:typename:float
getBoundaryType	src/scenarios/SWE_AsagiScenario.hh	/^		BoundaryType getBoundaryType(Boundary boundary) {$/;"	f	class:SWE_AsagiScenario	typeref:typename:BoundaryType
getBoundaryType	src/scenarios/SWE_Scenario.hh	/^		virtual BoundaryType getBoundaryType(Boundary boundary) { return OUTFLOW; }$/;"	f	class:SWE_Scenario	typeref:typename:BoundaryType
getBoundaryType	src/scenarios/SWE_simple_scenarios.hh	/^    virtual BoundaryType getBoundaryType(Boundary boundary) { return OUTFLOW; };$/;"	f	class:SWE_RadialDamBreakScenario	typeref:typename:BoundaryType
getBoundaryType	src/scenarios/SWE_simple_scenarios.hh	/^    virtual BoundaryType getBoundaryType(Boundary boundary) { return OUTFLOW; };$/;"	f	class:SWE_SplashingConeScenario	typeref:typename:BoundaryType
getBoundaryType	src/scenarios/SWE_simple_scenarios.hh	/^    virtual BoundaryType getBoundaryType(Boundary edge) { return OUTFLOW; };$/;"	f	class:SWE_BathymetryDamBreakScenario	typeref:typename:BoundaryType
getCUDA_bathymetry	src/blocks/cuda/SWE_BlockCUDA.hh	/^    const float* getCUDA_bathymetry() { return bd; };$/;"	f	class:SWE_BlockCUDA	typeref:typename:const float *
getCUDA_waterHeight	src/blocks/cuda/SWE_BlockCUDA.hh	/^    const float* getCUDA_waterHeight() { return hd; };$/;"	f	class:SWE_BlockCUDA	typeref:typename:const float *
getCellCoord	src/blocks/cuda/SWE_BlockCUDA.hh	/^int getCellCoord(int x, int y, int ny) {$/;"	f	typeref:typename:__device__ int
getCellCountHorizontal	src/blocks/SWE_Block.hh	/^int SWE_Block<T>::getCellCountHorizontal() {$/;"	f	class:SWE_Block	typeref:typename:int
getCellCountVertical	src/blocks/SWE_Block.hh	/^int SWE_Block<T>::getCellCountVertical() {$/;"	f	class:SWE_Block	typeref:typename:int
getCellSizeHorizontal	src/blocks/SWE_Block.hh	/^float SWE_Block<T>::getCellSizeHorizontal() {$/;"	f	class:SWE_Block	typeref:typename:float
getCellSizeVertical	src/blocks/SWE_Block.hh	/^float SWE_Block<T>::getCellSizeVertical() {$/;"	f	class:SWE_Block	typeref:typename:float
getCols	src/tools/Float2D.hh	/^		int getCols() const {$/;"	f	class:Float2D	typeref:typename:int
getCopyLayer	src/blocks/SWE_DimensionalSplittingUpcxx.cpp	/^BlockConnectInterface<upcxx::global_ptr<float>> SWE_DimensionalSplittingUpcxx::getCopyLayer(Boun/;"	f	class:SWE_DimensionalSplittingUpcxx	typeref:typename:BlockConnectInterface<upcxx::global_ptr<float>>
getCudaNormalsPtr	src/opengl/visualization.cpp	/^cudaGraphicsResource** Visualization::getCudaNormalsPtr() {$/;"	f	class:Visualization	typeref:typename:cudaGraphicsResource **
getCudaWaterSurfacePtr	src/opengl/visualization.cpp	/^cudaGraphicsResource** Visualization::getCudaWaterSurfacePtr() {$/;"	f	class:Visualization	typeref:typename:cudaGraphicsResource **
getDischarge_hu	src/blocks/SWE_Block_common.cpp	/^const Float2D& SWE_Block::getDischarge_hu() {$/;"	f	class:SWE_Block	typeref:typename:const Float2D &
getDischarge_hv	src/blocks/SWE_Block_common.cpp	/^const Float2D& SWE_Block::getDischarge_hv() {$/;"	f	class:SWE_Block	typeref:typename:const Float2D &
getDx	src/scenarios/SWE_TsunamiScenario.hh	/^		float getDx() { return dx; };$/;"	f	class:SWE_TsunamiScenario	typeref:typename:float
getDy	src/scenarios/SWE_TsunamiScenario.hh	/^		float getDy() { return dy; } ;$/;"	f	class:SWE_TsunamiScenario	typeref:typename:float
getEdgeCoord	src/blocks/cuda/SWE_BlockCUDA.hh	/^int getEdgeCoord(int x, int y, int ny) {$/;"	f	typeref:typename:__device__ int
getMaxTimestep	src/blocks/SWE_Block.hh	/^float SWE_Block<T>::getMaxTimestep() {$/;"	f	class:SWE_Block	typeref:typename:float
getMaxTimestep	src/blocks/SWE_Block_common.hh	/^		float getMaxTimestep(){$/;"	f	class:SWE_Block	typeref:typename:float
getMomentumHorizontal	src/blocks/SWE_Block.hh	/^const T& SWE_Block<T>::getMomentumHorizontal() {$/;"	f	class:SWE_Block	typeref:typename:const T &
getMomentumVertical	src/blocks/SWE_Block.hh	/^const T& SWE_Block<T>::getMomentumVertical() {$/;"	f	class:SWE_Block	typeref:typename:const T &
getName	src/opengl/vbo.h	/^	GLuint getName()$/;"	f	class:VBO	typeref:typename:GLuint
getNearestIndex	src/scenarios/SWE_TsunamiScenario.hh	/^		int getNearestIndex(float position, float origin, float width) {$/;"	f	class:SWE_TsunamiScenario	typeref:typename:int
getNx	src/blocks/SWE_Block_common.hh	/^		int getNx(){$/;"	f	class:SWE_Block	typeref:typename:int
getNx	src/opengl/simulation.h	/^    int getNx() { return nx; }$/;"	f	class:Simulation	typeref:typename:int
getNx	src/scenarios/SWE_TsunamiScenario.hh	/^		size_t getNx() { return nx; };$/;"	f	class:SWE_TsunamiScenario	typeref:typename:size_t
getNy	src/blocks/SWE_Block_common.hh	/^		int getNy(){$/;"	f	class:SWE_Block	typeref:typename:int
getNy	src/opengl/simulation.h	/^    int getNy() { return ny; }$/;"	f	class:Simulation	typeref:typename:int
getNy	src/scenarios/SWE_TsunamiScenario.hh	/^		size_t getNy() { return ny; };$/;"	f	class:SWE_TsunamiScenario	typeref:typename:size_t
getOriginX	src/blocks/SWE_Block.hh	/^int SWE_Block<T>::getOriginX() {$/;"	f	class:SWE_Block	typeref:typename:int
getOriginX	src/scenarios/SWE_TsunamiScenario.hh	/^		float getOriginX() { return originX; };$/;"	f	class:SWE_TsunamiScenario	typeref:typename:float
getOriginY	src/blocks/SWE_Block.hh	/^int SWE_Block<T>::getOriginY() {$/;"	f	class:SWE_Block	typeref:typename:int
getOriginY	src/scenarios/SWE_TsunamiScenario.hh	/^		float getOriginY() { return originY; } ;$/;"	f	class:SWE_TsunamiScenario	typeref:typename:float
getP0	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^            float & getP0() { return maxWaveSpeed;}$/;"	f	struct:Closure_SWE_DimensionalSplittingCharm::reduceWaveSpeed_8_closure	typeref:typename:float &
getP0	src/examples/swe_charm.def.h	/^            int & getP0() { return index;}$/;"	f	struct:Closure_swe_charm::done_2_closure	typeref:typename:int &
getPointer	src/tools/Float2DNative.hh	/^		std::shared_ptr<float> getPointer() {$/;"	f	class:Float2DNative	typeref:typename:std::shared_ptr<float>
getPointer	src/tools/Float2DUpcxx.hh	/^		upcxx::global_ptr<float> getPointer() const {$/;"	f	class:Float2DUpcxx	typeref:typename:upcxx::global_ptr<float>
getRawPointer	src/tools/Float1D.hh	/^float* Float1D::getRawPointer() const {$/;"	f	class:Float1D	typeref:typename:float *
getRawPointer	src/tools/Float2D.hh	/^		float* getRawPointer() const {$/;"	f	class:Float2D	typeref:typename:float *
getRows	src/tools/Float2D.hh	/^		int getRows() const {$/;"	f	class:Float2D	typeref:typename:int
getScalingApproximation	src/opengl/simulation.cu	/^void Simulation::getScalingApproximation(float &bScale, float &bOffset, float &wScale)$/;"	f	typeref:typename:void Simulation::
getSimulatedTimesteps	src/scenarios/SWE_TsunamiScenario.hh	/^		int getSimulatedTimesteps() { return simulatedTimesteps; }$/;"	f	class:SWE_TsunamiScenario	typeref:typename:int
getSimulationTime	src/scenarios/SWE_TsunamiScenario.hh	/^		float getSimulationTime() { return currentTime; }$/;"	f	class:SWE_TsunamiScenario	typeref:typename:float
getSize	src/tools/Float1D.hh	/^int Float1D::getSize() const {$/;"	f	class:Float1D	typeref:typename:int
getStats	src/solvers/Hybrid.hpp	/^    void getStats( long &o_counterFWave, long &o_counterAugRie ) {$/;"	f	class:solver::Hybrid	typeref:typename:void
getStats	submodules/swe_solvers/src/solver/Hybrid.hpp	/^    void getStats( long &o_counterFWave, long &o_counterAugRie ) {$/;"	f	class:solver::Hybrid	typeref:typename:void
getTime	src/tools/Logger.hh	/^    double getTime(const std::string &i_name) {$/;"	f	class:tools::Logger	typeref:typename:double
getUniformLocation	src/opengl/shader.h	/^	GLint getUniformLocation(const char* name)$/;"	f	class:Shader	typeref:typename:GLint
getVeloc_u	src/scenarios/SWE_Scenario.hh	/^		virtual float getVeloc_u(float x, float y) { return 0; }$/;"	f	class:SWE_Scenario	typeref:typename:float
getVeloc_v	src/scenarios/SWE_Scenario.hh	/^		virtual float getVeloc_v(float x, float y) { return 0; }$/;"	f	class:SWE_Scenario	typeref:typename:float
getWaterHeight	src/blocks/SWE_Block.hh	/^const T& SWE_Block<T>::getWaterHeight() {$/;"	f	class:SWE_Block	typeref:typename:const T &
getWaterHeight	src/blocks/SWE_Block_common.cpp	/^const Float2D& SWE_Block::getWaterHeight() {$/;"	f	class:SWE_Block	typeref:typename:const Float2D &
getWaterHeight	src/scenarios/SWE_AsagiScenario.hh	/^		float getWaterHeight(float x, float y) {$/;"	f	class:SWE_AsagiScenario	typeref:typename:float
getWaterHeight	src/scenarios/SWE_Scenario.hh	/^		virtual float getWaterHeight(float x, float y) { return 0; }$/;"	f	class:SWE_Scenario	typeref:typename:float
getWaterHeight	src/scenarios/SWE_TsunamiScenario.hh	/^		virtual float getWaterHeight(float x, float y) {$/;"	f	class:SWE_TsunamiScenario	typeref:typename:float
getWaterHeight	src/scenarios/SWE_simple_scenarios.hh	/^    float getWaterHeight( float i_positionX,$/;"	f	class:SWE_BathymetryDamBreakScenario	typeref:typename:float
getWaterHeight	src/scenarios/SWE_simple_scenarios.hh	/^    float getWaterHeight(float x, float y) { $/;"	f	class:SWE_RadialDamBreakScenario	typeref:typename:float
getWaterHeight	src/scenarios/SWE_simple_scenarios.hh	/^    float getWaterHeight(float x, float y) { $/;"	f	class:SWE_SeaAtRestScenario	typeref:typename:float
getWaterHeight	src/scenarios/SWE_simple_scenarios.hh	/^    float getWaterHeight(float x, float y) { $/;"	f	class:SWE_SplashingConeScenario	typeref:typename:float
getWaterHeight	src/scenarios/SWE_simple_scenarios.hh	/^    float getWaterHeight(float x, float y) {$/;"	f	class:SWE_SplashingPoolScenario	typeref:typename:float
glAttachShader	src/opengl/shader.cpp	/^PFNGLATTACHSHADERPROC Shader::glAttachShader;$/;"	m	class:Shader	typeref:typename:PFNGLATTACHSHADERPROC
glAttachShader	src/opengl/shader.h	/^	static PFNGLATTACHSHADERPROC glAttachShader;$/;"	m	class:Shader	typeref:typename:PFNGLATTACHSHADERPROC
glBindBuffer	src/opengl/vbo.cpp	/^PFNGLBINDBUFFERARBPROC VBO::glBindBuffer = 0L;$/;"	m	class:VBO	typeref:typename:PFNGLBINDBUFFERARBPROC
glBindBuffer	src/opengl/vbo.h	/^	static PFNGLBINDBUFFERARBPROC glBindBuffer;					\/\/ VBO Bind Procedure$/;"	m	class:VBO	typeref:typename:PFNGLBINDBUFFERARBPROC
glBufferData	src/opengl/vbo.cpp	/^PFNGLBUFFERDATAARBPROC VBO::glBufferData = 0L;$/;"	m	class:VBO	typeref:typename:PFNGLBUFFERDATAARBPROC
glBufferData	src/opengl/vbo.h	/^	static PFNGLBUFFERDATAARBPROC glBufferData;					\/\/ VBO Data Loading Procedure$/;"	m	class:VBO	typeref:typename:PFNGLBUFFERDATAARBPROC
glCompileShader	src/opengl/shader.cpp	/^PFNGLCOMPILESHADERPROC Shader::glCompileShader;$/;"	m	class:Shader	typeref:typename:PFNGLCOMPILESHADERPROC
glCompileShader	src/opengl/shader.h	/^	static PFNGLCOMPILESHADERPROC glCompileShader;$/;"	m	class:Shader	typeref:typename:PFNGLCOMPILESHADERPROC
glCreateProgram	src/opengl/shader.cpp	/^PFNGLCREATEPROGRAMPROC Shader::glCreateProgram;$/;"	m	class:Shader	typeref:typename:PFNGLCREATEPROGRAMPROC
glCreateProgram	src/opengl/shader.h	/^	static PFNGLCREATEPROGRAMPROC glCreateProgram;$/;"	m	class:Shader	typeref:typename:PFNGLCREATEPROGRAMPROC
glCreateShader	src/opengl/shader.cpp	/^PFNGLCREATESHADERPROC Shader::glCreateShader;$/;"	m	class:Shader	typeref:typename:PFNGLCREATESHADERPROC
glCreateShader	src/opengl/shader.h	/^	static PFNGLCREATESHADERPROC glCreateShader;$/;"	m	class:Shader	typeref:typename:PFNGLCREATESHADERPROC
glDeleteBuffers	src/opengl/vbo.cpp	/^PFNGLDELETEBUFFERSARBPROC VBO::glDeleteBuffers = 0L;$/;"	m	class:VBO	typeref:typename:PFNGLDELETEBUFFERSARBPROC
glDeleteBuffers	src/opengl/vbo.h	/^	static PFNGLDELETEBUFFERSARBPROC glDeleteBuffers;			\/\/ VBO Deletion Procedure$/;"	m	class:VBO	typeref:typename:PFNGLDELETEBUFFERSARBPROC
glDeleteProgram	src/opengl/shader.cpp	/^PFNGLDELETEPROGRAMPROC Shader::glDeleteProgram;$/;"	m	class:Shader	typeref:typename:PFNGLDELETEPROGRAMPROC
glDeleteProgram	src/opengl/shader.h	/^	static PFNGLDELETEPROGRAMPROC glDeleteProgram;$/;"	m	class:Shader	typeref:typename:PFNGLDELETEPROGRAMPROC
glDeleteShader	src/opengl/shader.cpp	/^PFNGLDELETESHADERPROC Shader::glDeleteShader;$/;"	m	class:Shader	typeref:typename:PFNGLDELETESHADERPROC
glDeleteShader	src/opengl/shader.h	/^	static PFNGLDELETESHADERPROC glDeleteShader;$/;"	m	class:Shader	typeref:typename:PFNGLDELETESHADERPROC
glDetachShader	src/opengl/shader.cpp	/^PFNGLDETACHSHADERPROC Shader::glDetachShader;$/;"	m	class:Shader	typeref:typename:PFNGLDETACHSHADERPROC
glDetachShader	src/opengl/shader.h	/^	static PFNGLDETACHSHADERPROC glDetachShader;$/;"	m	class:Shader	typeref:typename:PFNGLDETACHSHADERPROC
glGenBuffers	src/opengl/vbo.cpp	/^PFNGLGENBUFFERSARBPROC VBO::glGenBuffers = 0L;$/;"	m	class:VBO	typeref:typename:PFNGLGENBUFFERSARBPROC
glGenBuffers	src/opengl/vbo.h	/^	static PFNGLGENBUFFERSARBPROC glGenBuffers;					\/\/ VBO Name Generation Procedure$/;"	m	class:VBO	typeref:typename:PFNGLGENBUFFERSARBPROC
glGetObjectParameterivARB	src/opengl/shader.cpp	/^PFNGLGETOBJECTPARAMETERIVARBPROC Shader::glGetObjectParameterivARB;$/;"	m	class:Shader	typeref:typename:PFNGLGETOBJECTPARAMETERIVARBPROC
glGetObjectParameterivARB	src/opengl/shader.h	/^	static PFNGLGETOBJECTPARAMETERIVARBPROC glGetObjectParameterivARB;$/;"	m	class:Shader	typeref:typename:PFNGLGETOBJECTPARAMETERIVARBPROC
glGetProgramInfoLog	src/opengl/shader.cpp	/^PFNGLGETPROGRAMINFOLOGPROC Shader::glGetProgramInfoLog;$/;"	m	class:Shader	typeref:typename:PFNGLGETPROGRAMINFOLOGPROC
glGetProgramInfoLog	src/opengl/shader.h	/^	static PFNGLGETPROGRAMINFOLOGPROC glGetProgramInfoLog;$/;"	m	class:Shader	typeref:typename:PFNGLGETPROGRAMINFOLOGPROC
glGetShaderInfoLog	src/opengl/shader.cpp	/^PFNGLGETSHADERINFOLOGPROC Shader::glGetShaderInfoLog;$/;"	m	class:Shader	typeref:typename:PFNGLGETSHADERINFOLOGPROC
glGetShaderInfoLog	src/opengl/shader.h	/^	static PFNGLGETSHADERINFOLOGPROC glGetShaderInfoLog;$/;"	m	class:Shader	typeref:typename:PFNGLGETSHADERINFOLOGPROC
glGetShaderiv	src/opengl/shader.cpp	/^PFNGLGETSHADERIVPROC Shader::glGetShaderiv;$/;"	m	class:Shader	typeref:typename:PFNGLGETSHADERIVPROC
glGetShaderiv	src/opengl/shader.h	/^	static PFNGLGETSHADERIVPROC glGetShaderiv;$/;"	m	class:Shader	typeref:typename:PFNGLGETSHADERIVPROC
glGetUniformLocation	src/opengl/shader.cpp	/^PFNGLGETUNIFORMLOCATIONPROC Shader::glGetUniformLocation;$/;"	m	class:Shader	typeref:typename:PFNGLGETUNIFORMLOCATIONPROC
glGetUniformLocation	src/opengl/shader.h	/^	static PFNGLGETUNIFORMLOCATIONPROC glGetUniformLocation;$/;"	m	class:Shader	typeref:typename:PFNGLGETUNIFORMLOCATIONPROC
glLinkProgram	src/opengl/shader.cpp	/^PFNGLLINKPROGRAMPROC Shader::glLinkProgram;$/;"	m	class:Shader	typeref:typename:PFNGLLINKPROGRAMPROC
glLinkProgram	src/opengl/shader.h	/^	static PFNGLLINKPROGRAMPROC glLinkProgram;$/;"	m	class:Shader	typeref:typename:PFNGLLINKPROGRAMPROC
glPrimitiveRestartIndexNV	src/opengl/visualization.cpp	/^PFNGLPRIMITIVERESTARTINDEXNVPROC Visualization::glPrimitiveRestartIndexNV;$/;"	m	class:Visualization	typeref:typename:PFNGLPRIMITIVERESTARTINDEXNVPROC
glPrimitiveRestartIndexNV	src/opengl/visualization.h	/^	static PFNGLPRIMITIVERESTARTINDEXNVPROC glPrimitiveRestartIndexNV;$/;"	m	class:Visualization	typeref:typename:PFNGLPRIMITIVERESTARTINDEXNVPROC
glShaderSource	src/opengl/shader.cpp	/^PFNGLSHADERSOURCEPROC Shader::glShaderSource;$/;"	m	class:Shader	typeref:typename:PFNGLSHADERSOURCEPROC
glShaderSource	src/opengl/shader.h	/^	static PFNGLSHADERSOURCEPROC glShaderSource;$/;"	m	class:Shader	typeref:typename:PFNGLSHADERSOURCEPROC
glUniform1f	src/opengl/shader.cpp	/^PFNGLUNIFORM1FPROC Shader::glUniform1f;$/;"	m	class:Shader	typeref:typename:PFNGLUNIFORM1FPROC
glUniform1f	src/opengl/shader.h	/^	static PFNGLUNIFORM1FPROC glUniform1f;$/;"	m	class:Shader	typeref:typename:PFNGLUNIFORM1FPROC
glUseProgram	src/opengl/shader.cpp	/^PFNGLUSEPROGRAMPROC Shader::glUseProgram;$/;"	m	class:Shader	typeref:typename:PFNGLUSEPROGRAMPROC
glUseProgram	src/opengl/shader.h	/^	static PFNGLUSEPROGRAMPROC glUseProgram;$/;"	m	class:Shader	typeref:typename:PFNGLUSEPROGRAMPROC
grabGhostLayer	src/blocks/SWE_Block_common.cpp	/^SWE_Block1D* SWE_Block::grabGhostLayer(BoundaryEdge edge) {$/;"	f	class:SWE_Block	typeref:typename:SWE_Block1D *
grabGhostLayer	src/blocks/cuda/SWE_BlockCUDA.cu	/^SWE_Block1D* SWE_BlockCUDA::grabGhostLayer(BoundaryEdge edge){$/;"	f	typeref:typename:SWE_Block1D * SWE_BlockCUDA::
gravity	submodules/swe_solvers/src/unit_tests/ComponentsTest.h	/^  const double gravity;$/;"	m	class:ComponentsTest	typeref:typename:const double
grid_xsize	src/opengl/visualization.h	/^	int grid_xsize;$/;"	m	class:Visualization	typeref:typename:int
grid_ysize	src/opengl/visualization.h	/^	int grid_ysize;$/;"	m	class:Visualization	typeref:typename:int
group	paraview/netcdf_swe.py	/^	group = GroupDatasets( Input=sources )$/;"	v
h	src/blocks/SWE_Block.hh	/^		T h;$/;"	m	class:SWE_Block	typeref:typename:T
h	src/blocks/SWE_Block_common.hh	/^		Float2D h;$/;"	m	class:SWE_Block	typeref:typename:Float2D
h	src/blocks/SWE_Block_common.hh	/^	Float1D h;$/;"	m	struct:SWE_Block1D	typeref:typename:Float1D
h	src/blocks/SWE_DimensionalSplittingCharm.hh	/^		float *h;$/;"	m	class:copyLayer	typeref:typename:float *
h	src/types/SWE_Block1D.hh	/^	Float1D h;$/;"	m	struct:SWE_Block1D	typeref:typename:Float1D
h	src/types/SWE_Block1DUpcxx.hh	/^	Float1DUpcxx h;$/;"	m	struct:SWE_Block1D	typeref:typename:Float1DUpcxx
hHigh	submodules/swe_solvers/unit_tests/scripts/main.m	/^hHigh = ncread(path, 'hHigh', 1, size);$/;"	v
hHighVec	submodules/swe_solvers/unit_tests/scripts/create_nc_testphi.m	/^  hHighVec = ncread(path, 'hLow', wallSize, randomSize);$/;"	v
hLeft	src/solvers/WavePropagation.hpp	/^    T hLeft;$/;"	m	class:solver::WavePropagation	typeref:typename:T
hLeft	submodules/swe_solvers/src/solver/WavePropagation.hpp	/^    T hLeft;$/;"	m	class:solver::WavePropagation	typeref:typename:T
hLeft	submodules/swe_solvers/src/unit_tests/ComponentsTest.h	/^  double hLeft, hRight, uLeft, uRight;$/;"	m	class:ComponentsTest	typeref:typename:double
hLeft_v	src/solvers/AugRie_SIMD.hpp	/^	real_vector hLeft_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real_vector
hLeft_v	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	real_vector hLeft_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real_vector
hLow	submodules/swe_solvers/unit_tests/scripts/main.m	/^hLow = ncread(path, 'hLow', 1, size);$/;"	v
hLowVec	submodules/swe_solvers/unit_tests/scripts/create_nc_testphi.m	/^  hLowVec = ncread(path, 'hLow', 1, size);$/;"	v
hMiddle	src/solvers/AugRie.hpp	/^    T hMiddle;$/;"	m	class:solver::AugRie	typeref:typename:T
hMiddle	src/solvers/AugRie_SIMD.hpp	/^	real hMiddle;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real
hMiddle	submodules/swe_solvers/src/solver/AugRie.hpp	/^    T hMiddle;$/;"	m	class:solver::AugRie	typeref:typename:T
hMiddle	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	real hMiddle;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real
hMiddle_v	src/solvers/AugRie_SIMD.hpp	/^	real_vector hMiddle_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real_vector
hMiddle_v	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	real_vector hMiddle_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real_vector
hMin	submodules/swe_solvers/unit_tests/scripts/calculate_hstar.m	/^hMin = min(hLow, hHigh);$/;"	v
hNetUpdates	src/blocks/SWE_WaveAccumulationBlock.hh	/^    Float2D hNetUpdates;$/;"	m	class:SWE_WaveAccumulationBlock	typeref:typename:Float2D
hNetUpdatesAbove	src/blocks/SWE_DimensionalSplitting.hh	/^		Float2DNative hNetUpdatesAbove;$/;"	m	class:SWE_DimensionalSplitting	typeref:typename:Float2DNative
hNetUpdatesAbove	src/blocks/SWE_DimensionalSplittingCharm.hh	/^		Float2DNative hNetUpdatesAbove;$/;"	m	class:SWE_DimensionalSplittingCharm	typeref:typename:Float2DNative
hNetUpdatesAbove	src/blocks/SWE_DimensionalSplittingMpi.hh	/^		Float2DNative hNetUpdatesAbove;$/;"	m	class:SWE_DimensionalSplittingMpi	typeref:typename:Float2DNative
hNetUpdatesAbove	src/blocks/SWE_DimensionalSplittingUpcxx.hh	/^		Float2DUpcxx hNetUpdatesAbove;$/;"	m	class:SWE_DimensionalSplittingUpcxx	typeref:typename:Float2DUpcxx
hNetUpdatesAbove	src/blocks/SWE_WavePropagationBlock.hh	/^    Float2D hNetUpdatesAbove;$/;"	m	class:SWE_WavePropagationBlock	typeref:typename:Float2D
hNetUpdatesAbove	src/blocks/SWE_WavePropagationBlockSIMD.hh	/^	Float2D hNetUpdatesAbove;$/;"	m	class:SWE_WavePropagationBlockSIMD	typeref:typename:Float2D
hNetUpdatesAboveD	src/blocks/cuda/SWE_WavePropagationBlockCuda.hh	/^    float* hNetUpdatesAboveD;$/;"	m	class:SWE_WavePropagationBlockCuda	typeref:typename:float *
hNetUpdatesBelow	src/blocks/SWE_DimensionalSplitting.hh	/^		Float2DNative hNetUpdatesBelow;$/;"	m	class:SWE_DimensionalSplitting	typeref:typename:Float2DNative
hNetUpdatesBelow	src/blocks/SWE_DimensionalSplittingCharm.hh	/^		Float2DNative hNetUpdatesBelow;$/;"	m	class:SWE_DimensionalSplittingCharm	typeref:typename:Float2DNative
hNetUpdatesBelow	src/blocks/SWE_DimensionalSplittingMpi.hh	/^		Float2DNative hNetUpdatesBelow;$/;"	m	class:SWE_DimensionalSplittingMpi	typeref:typename:Float2DNative
hNetUpdatesBelow	src/blocks/SWE_DimensionalSplittingUpcxx.hh	/^		Float2DUpcxx hNetUpdatesBelow;$/;"	m	class:SWE_DimensionalSplittingUpcxx	typeref:typename:Float2DUpcxx
hNetUpdatesBelow	src/blocks/SWE_WavePropagationBlock.hh	/^    Float2D hNetUpdatesBelow;$/;"	m	class:SWE_WavePropagationBlock	typeref:typename:Float2D
hNetUpdatesBelow	src/blocks/SWE_WavePropagationBlockSIMD.hh	/^	Float2D hNetUpdatesBelow;$/;"	m	class:SWE_WavePropagationBlockSIMD	typeref:typename:Float2D
hNetUpdatesBelowD	src/blocks/cuda/SWE_WavePropagationBlockCuda.hh	/^    float* hNetUpdatesBelowD;$/;"	m	class:SWE_WavePropagationBlockCuda	typeref:typename:float *
hNetUpdatesLeft	src/blocks/SWE_DimensionalSplitting.hh	/^		Float2DNative hNetUpdatesLeft;$/;"	m	class:SWE_DimensionalSplitting	typeref:typename:Float2DNative
hNetUpdatesLeft	src/blocks/SWE_DimensionalSplittingCharm.hh	/^		Float2DNative hNetUpdatesLeft;$/;"	m	class:SWE_DimensionalSplittingCharm	typeref:typename:Float2DNative
hNetUpdatesLeft	src/blocks/SWE_DimensionalSplittingMpi.hh	/^		Float2DNative hNetUpdatesLeft;$/;"	m	class:SWE_DimensionalSplittingMpi	typeref:typename:Float2DNative
hNetUpdatesLeft	src/blocks/SWE_DimensionalSplittingUpcxx.hh	/^		Float2DUpcxx hNetUpdatesLeft;$/;"	m	class:SWE_DimensionalSplittingUpcxx	typeref:typename:Float2DUpcxx
hNetUpdatesLeft	src/blocks/SWE_WavePropagationBlock.hh	/^    Float2D hNetUpdatesLeft;$/;"	m	class:SWE_WavePropagationBlock	typeref:typename:Float2D
hNetUpdatesLeft	src/blocks/SWE_WavePropagationBlockSIMD.hh	/^	Float2D hNetUpdatesLeft;$/;"	m	class:SWE_WavePropagationBlockSIMD	typeref:typename:Float2D
hNetUpdatesLeftD	src/blocks/cuda/SWE_WavePropagationBlockCuda.hh	/^    float* hNetUpdatesLeftD;$/;"	m	class:SWE_WavePropagationBlockCuda	typeref:typename:float *
hNetUpdatesRight	src/blocks/SWE_DimensionalSplitting.hh	/^		Float2DNative hNetUpdatesRight;$/;"	m	class:SWE_DimensionalSplitting	typeref:typename:Float2DNative
hNetUpdatesRight	src/blocks/SWE_DimensionalSplittingCharm.hh	/^		Float2DNative hNetUpdatesRight;$/;"	m	class:SWE_DimensionalSplittingCharm	typeref:typename:Float2DNative
hNetUpdatesRight	src/blocks/SWE_DimensionalSplittingMpi.hh	/^		Float2DNative hNetUpdatesRight;$/;"	m	class:SWE_DimensionalSplittingMpi	typeref:typename:Float2DNative
hNetUpdatesRight	src/blocks/SWE_DimensionalSplittingUpcxx.hh	/^		Float2DUpcxx hNetUpdatesRight;$/;"	m	class:SWE_DimensionalSplittingUpcxx	typeref:typename:Float2DUpcxx
hNetUpdatesRight	src/blocks/SWE_WavePropagationBlock.hh	/^    Float2D hNetUpdatesRight;$/;"	m	class:SWE_WavePropagationBlock	typeref:typename:Float2D
hNetUpdatesRight	src/blocks/SWE_WavePropagationBlockSIMD.hh	/^	Float2D hNetUpdatesRight;$/;"	m	class:SWE_WavePropagationBlockSIMD	typeref:typename:Float2D
hNetUpdatesRightD	src/blocks/cuda/SWE_WavePropagationBlockCuda.hh	/^    float* hNetUpdatesRightD;$/;"	m	class:SWE_WavePropagationBlockCuda	typeref:typename:float *
hRight	src/solvers/WavePropagation.hpp	/^    T hRight;$/;"	m	class:solver::WavePropagation	typeref:typename:T
hRight	submodules/swe_solvers/src/solver/WavePropagation.hpp	/^    T hRight;$/;"	m	class:solver::WavePropagation	typeref:typename:T
hRight	submodules/swe_solvers/src/unit_tests/ComponentsTest.h	/^  double hLeft, hRight, uLeft, uRight;$/;"	m	class:ComponentsTest	typeref:typename:double
hRight_v	src/solvers/AugRie_SIMD.hpp	/^	real_vector hRight_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real_vector
hRight_v	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	real_vector hRight_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real_vector
hStar	src/blocks/SWE_DimensionalSplitting.hh	/^		Float2DNative hStar;$/;"	m	class:SWE_DimensionalSplitting	typeref:typename:Float2DNative
hStar	src/blocks/SWE_DimensionalSplittingCharm.hh	/^		Float2DNative hStar;$/;"	m	class:SWE_DimensionalSplittingCharm	typeref:typename:Float2DNative
hStar	src/blocks/SWE_DimensionalSplittingMpi.hh	/^		Float2DNative hStar;$/;"	m	class:SWE_DimensionalSplittingMpi	typeref:typename:Float2DNative
hStar	src/blocks/SWE_DimensionalSplittingUpcxx.hh	/^		Float2DUpcxx hStar;$/;"	m	class:SWE_DimensionalSplittingUpcxx	typeref:typename:Float2DUpcxx
hStar	submodules/swe_solvers/unit_tests/scripts/calculate_hstar.m	/^    hStar = 0.; %large rarefaction$/;"	v
hStar	submodules/swe_solvers/unit_tests/scripts/calculate_hstar.m	/^hStar = fzero( phi, [zeroTol, maxWaterHeight]);$/;"	v
hStar	submodules/swe_solvers/unit_tests/scripts/main.m	/^hStar = zeros(size, 1);$/;"	v
hVar	src/writer/NetCdfWriter.hh	/^		int timeVar, hVar, huVar, hvVar, bVar;$/;"	m	class:NetCdfWriter	typeref:typename:int
half_g	src/solvers/AugRieFun.hpp	/^	const real half_g;       \/\/ 0.5 * gravity constant$/;"	m	class:solver::AugRieFun	typeref:typename:const real
half_g	submodules/swe_solvers/src/solver/AugRieFun.hpp	/^	const real half_g;       \/\/ 0.5 * gravity constant$/;"	m	class:solver::AugRieFun	typeref:typename:const real
half_gravity	src/solvers/FWaveVec.hpp	/^	const T half_gravity; \/\/ 0.5 * gravity constant$/;"	m	class:solver::FWaveVec	typeref:typename:const T
half_gravity	submodules/swe_solvers/src/solver/FWaveVec.hpp	/^	const T half_gravity; \/\/ 0.5 * gravity constant$/;"	m	class:solver::FWaveVec	typeref:typename:const T
handleEvents	src/opengl/controller.cpp	/^bool Controller::handleEvents() {$/;"	f	class:Controller	typeref:typename:bool
handleKeyPress	src/opengl/controller.cpp	/^bool Controller::handleKeyPress( SDL_keysym *keysym) {$/;"	f	class:Controller	typeref:typename:bool
hasFocus	src/opengl/controller.cpp	/^bool Controller::hasFocus() {$/;"	f	class:Controller	typeref:typename:bool
hd	src/blocks/cuda/SWE_BlockCUDA.hh	/^    float* hd;$/;"	m	class:SWE_BlockCUDA	typeref:typename:float *
height	src/opengl/text.h	/^	std::vector<int> height;$/;"	m	class:Text	typeref:typename:std::vector<int>
height2Color	src/opengl/visualization.cpp	/^void Visualization::height2Color(float height, GLfloat *color)$/;"	f	class:Visualization	typeref:typename:void
helpMessage	src/tools/args.hh	/^	void helpMessage(const char* prog, std::ostream &out = std::cout)$/;"	f	class:tools::Args	typeref:typename:void
hu	src/blocks/SWE_Block.hh	/^		T hu;$/;"	m	class:SWE_Block	typeref:typename:T
hu	src/blocks/SWE_Block_common.hh	/^		Float2D hu;$/;"	m	class:SWE_Block	typeref:typename:Float2D
hu	src/blocks/SWE_Block_common.hh	/^	Float1D hu;$/;"	m	struct:SWE_Block1D	typeref:typename:Float1D
hu	src/blocks/SWE_DimensionalSplittingCharm.hh	/^		float *hu;$/;"	m	class:copyLayer	typeref:typename:float *
hu	src/types/SWE_Block1D.hh	/^	Float1D hu;$/;"	m	struct:SWE_Block1D	typeref:typename:Float1D
hu	src/types/SWE_Block1DUpcxx.hh	/^	Float1DUpcxx hu;$/;"	m	struct:SWE_Block1D	typeref:typename:Float1DUpcxx
huHigh	submodules/swe_solvers/unit_tests/scripts/main.m	/^huHigh = ncread(path, 'huHigh', 1, size);$/;"	v
huHighVec	submodules/swe_solvers/unit_tests/scripts/create_nc_testphi.m	/^  huHighVec = randSpeeds .* hHighVec;$/;"	v
huLeft	src/solvers/WavePropagation.hpp	/^    T huLeft;$/;"	m	class:solver::WavePropagation	typeref:typename:T
huLeft	submodules/swe_solvers/src/solver/WavePropagation.hpp	/^    T huLeft;$/;"	m	class:solver::WavePropagation	typeref:typename:T
huLeft_v	src/solvers/AugRie_SIMD.hpp	/^	real_vector huLeft_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real_vector
huLeft_v	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	real_vector huLeft_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real_vector
huLow	submodules/swe_solvers/unit_tests/scripts/main.m	/^huLow = ncread(path, 'huLow', 1, size);$/;"	v
huLowVec	submodules/swe_solvers/unit_tests/scripts/create_nc_testphi.m	/^  huLowVec = randSpeeds .* hLowVec;$/;"	v
huNetUpdates	src/blocks/SWE_WaveAccumulationBlock.hh	/^    Float2D huNetUpdates;$/;"	m	class:SWE_WaveAccumulationBlock	typeref:typename:Float2D
huNetUpdatesAbove	src/blocks/SWE_WavePropagationBlockSIMD.hh	/^	Float2D huNetUpdatesAbove;$/;"	m	class:SWE_WavePropagationBlockSIMD	typeref:typename:Float2D
huNetUpdatesBelow	src/blocks/SWE_WavePropagationBlockSIMD.hh	/^	Float2D huNetUpdatesBelow;$/;"	m	class:SWE_WavePropagationBlockSIMD	typeref:typename:Float2D
huNetUpdatesLeft	src/blocks/SWE_DimensionalSplitting.hh	/^		Float2DNative huNetUpdatesLeft;$/;"	m	class:SWE_DimensionalSplitting	typeref:typename:Float2DNative
huNetUpdatesLeft	src/blocks/SWE_DimensionalSplittingCharm.hh	/^		Float2DNative huNetUpdatesLeft;$/;"	m	class:SWE_DimensionalSplittingCharm	typeref:typename:Float2DNative
huNetUpdatesLeft	src/blocks/SWE_DimensionalSplittingMpi.hh	/^		Float2DNative huNetUpdatesLeft;$/;"	m	class:SWE_DimensionalSplittingMpi	typeref:typename:Float2DNative
huNetUpdatesLeft	src/blocks/SWE_DimensionalSplittingUpcxx.hh	/^		Float2DUpcxx huNetUpdatesLeft;$/;"	m	class:SWE_DimensionalSplittingUpcxx	typeref:typename:Float2DUpcxx
huNetUpdatesLeft	src/blocks/SWE_WavePropagationBlock.hh	/^    Float2D huNetUpdatesLeft;$/;"	m	class:SWE_WavePropagationBlock	typeref:typename:Float2D
huNetUpdatesLeft	src/blocks/SWE_WavePropagationBlockSIMD.hh	/^	Float2D huNetUpdatesLeft;$/;"	m	class:SWE_WavePropagationBlockSIMD	typeref:typename:Float2D
huNetUpdatesLeftD	src/blocks/cuda/SWE_WavePropagationBlockCuda.hh	/^    float* huNetUpdatesLeftD;$/;"	m	class:SWE_WavePropagationBlockCuda	typeref:typename:float *
huNetUpdatesRight	src/blocks/SWE_DimensionalSplitting.hh	/^		Float2DNative huNetUpdatesRight;$/;"	m	class:SWE_DimensionalSplitting	typeref:typename:Float2DNative
huNetUpdatesRight	src/blocks/SWE_DimensionalSplittingCharm.hh	/^		Float2DNative huNetUpdatesRight;$/;"	m	class:SWE_DimensionalSplittingCharm	typeref:typename:Float2DNative
huNetUpdatesRight	src/blocks/SWE_DimensionalSplittingMpi.hh	/^		Float2DNative huNetUpdatesRight;$/;"	m	class:SWE_DimensionalSplittingMpi	typeref:typename:Float2DNative
huNetUpdatesRight	src/blocks/SWE_DimensionalSplittingUpcxx.hh	/^		Float2DUpcxx huNetUpdatesRight;$/;"	m	class:SWE_DimensionalSplittingUpcxx	typeref:typename:Float2DUpcxx
huNetUpdatesRight	src/blocks/SWE_WavePropagationBlock.hh	/^    Float2D huNetUpdatesRight;$/;"	m	class:SWE_WavePropagationBlock	typeref:typename:Float2D
huNetUpdatesRight	src/blocks/SWE_WavePropagationBlockSIMD.hh	/^	Float2D huNetUpdatesRight;$/;"	m	class:SWE_WavePropagationBlockSIMD	typeref:typename:Float2D
huNetUpdatesRightD	src/blocks/cuda/SWE_WavePropagationBlockCuda.hh	/^    float* huNetUpdatesRightD;$/;"	m	class:SWE_WavePropagationBlockCuda	typeref:typename:float *
huRight	src/solvers/WavePropagation.hpp	/^    T huRight;$/;"	m	class:solver::WavePropagation	typeref:typename:T
huRight	submodules/swe_solvers/src/solver/WavePropagation.hpp	/^    T huRight;$/;"	m	class:solver::WavePropagation	typeref:typename:T
huRight_v	src/solvers/AugRie_SIMD.hpp	/^	real_vector huRight_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real_vector
huRight_v	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	real_vector huRight_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real_vector
huStar	src/blocks/SWE_DimensionalSplitting.hh	/^		Float2DNative huStar;$/;"	m	class:SWE_DimensionalSplitting	typeref:typename:Float2DNative
huStar	src/blocks/SWE_DimensionalSplittingCharm.hh	/^		Float2DNative huStar;$/;"	m	class:SWE_DimensionalSplittingCharm	typeref:typename:Float2DNative
huStar	src/blocks/SWE_DimensionalSplittingMpi.hh	/^		Float2DNative huStar;$/;"	m	class:SWE_DimensionalSplittingMpi	typeref:typename:Float2DNative
huStar	src/blocks/SWE_DimensionalSplittingUpcxx.hh	/^		Float2DUpcxx huStar;$/;"	m	class:SWE_DimensionalSplittingUpcxx	typeref:typename:Float2DUpcxx
huVar	src/writer/NetCdfWriter.hh	/^		int timeVar, hVar, huVar, hvVar, bVar;$/;"	m	class:NetCdfWriter	typeref:typename:int
hud	src/blocks/cuda/SWE_BlockCUDA.hh	/^    float* hud;$/;"	m	class:SWE_BlockCUDA	typeref:typename:float *
hv	src/blocks/SWE_Block.hh	/^		T hv;$/;"	m	class:SWE_Block	typeref:typename:T
hv	src/blocks/SWE_Block_common.hh	/^		Float2D hv;$/;"	m	class:SWE_Block	typeref:typename:Float2D
hv	src/blocks/SWE_Block_common.hh	/^	Float1D hv;$/;"	m	struct:SWE_Block1D	typeref:typename:Float1D
hv	src/blocks/SWE_DimensionalSplittingCharm.hh	/^		float *hv;$/;"	m	class:copyLayer	typeref:typename:float *
hv	src/types/SWE_Block1D.hh	/^	Float1D hv;$/;"	m	struct:SWE_Block1D	typeref:typename:Float1D
hv	src/types/SWE_Block1DUpcxx.hh	/^	Float1DUpcxx hv;$/;"	m	struct:SWE_Block1D	typeref:typename:Float1DUpcxx
hvNetUpdates	src/blocks/SWE_WaveAccumulationBlock.hh	/^    Float2D hvNetUpdates;$/;"	m	class:SWE_WaveAccumulationBlock	typeref:typename:Float2D
hvNetUpdatesAbove	src/blocks/SWE_DimensionalSplitting.hh	/^		Float2DNative hvNetUpdatesAbove;$/;"	m	class:SWE_DimensionalSplitting	typeref:typename:Float2DNative
hvNetUpdatesAbove	src/blocks/SWE_DimensionalSplittingCharm.hh	/^		Float2DNative hvNetUpdatesAbove;$/;"	m	class:SWE_DimensionalSplittingCharm	typeref:typename:Float2DNative
hvNetUpdatesAbove	src/blocks/SWE_DimensionalSplittingMpi.hh	/^		Float2DNative hvNetUpdatesAbove;$/;"	m	class:SWE_DimensionalSplittingMpi	typeref:typename:Float2DNative
hvNetUpdatesAbove	src/blocks/SWE_DimensionalSplittingUpcxx.hh	/^		Float2DUpcxx hvNetUpdatesAbove;$/;"	m	class:SWE_DimensionalSplittingUpcxx	typeref:typename:Float2DUpcxx
hvNetUpdatesAbove	src/blocks/SWE_WavePropagationBlock.hh	/^    Float2D hvNetUpdatesAbove;$/;"	m	class:SWE_WavePropagationBlock	typeref:typename:Float2D
hvNetUpdatesAbove	src/blocks/SWE_WavePropagationBlockSIMD.hh	/^	Float2D hvNetUpdatesAbove;$/;"	m	class:SWE_WavePropagationBlockSIMD	typeref:typename:Float2D
hvNetUpdatesAboveD	src/blocks/cuda/SWE_WavePropagationBlockCuda.hh	/^    float* hvNetUpdatesAboveD;$/;"	m	class:SWE_WavePropagationBlockCuda	typeref:typename:float *
hvNetUpdatesBelow	src/blocks/SWE_DimensionalSplitting.hh	/^		Float2DNative hvNetUpdatesBelow;$/;"	m	class:SWE_DimensionalSplitting	typeref:typename:Float2DNative
hvNetUpdatesBelow	src/blocks/SWE_DimensionalSplittingCharm.hh	/^		Float2DNative hvNetUpdatesBelow;$/;"	m	class:SWE_DimensionalSplittingCharm	typeref:typename:Float2DNative
hvNetUpdatesBelow	src/blocks/SWE_DimensionalSplittingMpi.hh	/^		Float2DNative hvNetUpdatesBelow;$/;"	m	class:SWE_DimensionalSplittingMpi	typeref:typename:Float2DNative
hvNetUpdatesBelow	src/blocks/SWE_DimensionalSplittingUpcxx.hh	/^		Float2DUpcxx hvNetUpdatesBelow;$/;"	m	class:SWE_DimensionalSplittingUpcxx	typeref:typename:Float2DUpcxx
hvNetUpdatesBelow	src/blocks/SWE_WavePropagationBlock.hh	/^    Float2D hvNetUpdatesBelow;$/;"	m	class:SWE_WavePropagationBlock	typeref:typename:Float2D
hvNetUpdatesBelow	src/blocks/SWE_WavePropagationBlockSIMD.hh	/^	Float2D hvNetUpdatesBelow;$/;"	m	class:SWE_WavePropagationBlockSIMD	typeref:typename:Float2D
hvNetUpdatesBelowD	src/blocks/cuda/SWE_WavePropagationBlockCuda.hh	/^    float* hvNetUpdatesBelowD;$/;"	m	class:SWE_WavePropagationBlockCuda	typeref:typename:float *
hvNetUpdatesLeft	src/blocks/SWE_WavePropagationBlockSIMD.hh	/^	Float2D hvNetUpdatesLeft;$/;"	m	class:SWE_WavePropagationBlockSIMD	typeref:typename:Float2D
hvNetUpdatesRight	src/blocks/SWE_WavePropagationBlockSIMD.hh	/^	Float2D hvNetUpdatesRight;$/;"	m	class:SWE_WavePropagationBlockSIMD	typeref:typename:Float2D
hvVar	src/writer/NetCdfWriter.hh	/^		int timeVar, hVar, huVar, hvVar, bVar;$/;"	m	class:NetCdfWriter	typeref:typename:int
hvd	src/blocks/cuda/SWE_BlockCUDA.hh	/^    float* hvd;$/;"	m	class:SWE_BlockCUDA	typeref:typename:float *
i	src/blocks/rusanov/SWE_RusanovBlockCUDA.cu	/^     for(int i=0; i<=swe.nx+1; i++) {$/;"	v	typeref:typename:int
i	src/blocks/rusanov/SWE_RusanovBlockCUDA.cu	/^    for(int i=0; i<=swe.nx+1; i++) {$/;"	v	typeref:typename:int
idx_SWE_DimensionalSplittingCharm_CkMigrateMessage	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline static int idx_SWE_DimensionalSplittingCharm_CkMigrateMessage() {$/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
idx_SWE_DimensionalSplittingCharm_marshall1	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline static int idx_SWE_DimensionalSplittingCharm_marshall1() {$/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
idx_compute	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline static int idx_compute(void (SWE_DimensionalSplittingCharm::*)() ) {$/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
idx_compute_void	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline static int idx_compute_void() {$/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
idx_done	src/examples/swe_charm.decl.h	/^    inline static int idx_done(void (swe_charm::*)(int index) ) {$/;"	f	class:CkIndex_swe_charm	typeref:typename:int
idx_done_marshall2	src/examples/swe_charm.decl.h	/^    inline static int idx_done_marshall2() {$/;"	f	class:CkIndex_swe_charm	typeref:typename:int
idx_exit	src/examples/swe_charm.decl.h	/^    inline static int idx_exit(void (swe_charm::*)() ) {$/;"	f	class:CkIndex_swe_charm	typeref:typename:int
idx_exit_void	src/examples/swe_charm.decl.h	/^    inline static int idx_exit_void() {$/;"	f	class:CkIndex_swe_charm	typeref:typename:int
idx_receiveGhostBottom	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline static int idx_receiveGhostBottom(void (SWE_DimensionalSplittingCharm::*)(copyLayer* /;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
idx_receiveGhostBottom_copyLayer	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline static int idx_receiveGhostBottom_copyLayer() {$/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
idx_receiveGhostLeft	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline static int idx_receiveGhostLeft(void (SWE_DimensionalSplittingCharm::*)(copyLayer* im/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
idx_receiveGhostLeft_copyLayer	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline static int idx_receiveGhostLeft_copyLayer() {$/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
idx_receiveGhostRight	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline static int idx_receiveGhostRight(void (SWE_DimensionalSplittingCharm::*)(copyLayer* i/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
idx_receiveGhostRight_copyLayer	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline static int idx_receiveGhostRight_copyLayer() {$/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
idx_receiveGhostTop	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline static int idx_receiveGhostTop(void (SWE_DimensionalSplittingCharm::*)(copyLayer* imp/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
idx_receiveGhostTop_copyLayer	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline static int idx_receiveGhostTop_copyLayer() {$/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
idx_redn_wrapper_reduceWaveSpeed_marshall8	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline static int idx_redn_wrapper_reduceWaveSpeed_marshall8() {$/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
idx_reduceWaveSpeed	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline static int idx_reduceWaveSpeed(void (SWE_DimensionalSplittingCharm::*)(float maxWaveS/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
idx_reduceWaveSpeed_marshall8	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline static int idx_reduceWaveSpeed_marshall8() {$/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
idx_reductionTrigger	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline static int idx_reductionTrigger(void (SWE_DimensionalSplittingCharm::*)() ) {$/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
idx_reductionTrigger_void	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline static int idx_reductionTrigger_void() {$/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
idx_swe_charm_CkArgMsg	src/examples/swe_charm.decl.h	/^    inline static int idx_swe_charm_CkArgMsg() {$/;"	f	class:CkIndex_swe_charm	typeref:typename:int
indentation	src/tools/Logger.hh	/^  const std::string indentation;$/;"	m	class:tools::Logger	typeref:typename:const std::string
index	src/examples/swe_charm.def.h	/^            int index;$/;"	m	struct:Closure_swe_charm::done_2_closure	typeref:typename:int
index_t	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    typedef CkIndex_SWE_DimensionalSplittingCharm index_t;$/;"	t	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:CkIndex_SWE_DimensionalSplittingCharm
index_t	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    typedef CkIndex_SWE_DimensionalSplittingCharm index_t;$/;"	t	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:CkIndex_SWE_DimensionalSplittingCharm
index_t	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    typedef CkIndex_SWE_DimensionalSplittingCharm index_t;$/;"	t	class:CProxy_SWE_DimensionalSplittingCharm	typeref:typename:CkIndex_SWE_DimensionalSplittingCharm
index_t	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    typedef CkIndex_SWE_DimensionalSplittingCharm index_t;$/;"	t	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:CkIndex_SWE_DimensionalSplittingCharm
index_t	src/examples/swe_charm.decl.h	/^    typedef CkIndex_swe_charm index_t;$/;"	t	class:CProxy_swe_charm	typeref:typename:CkIndex_swe_charm
index_t	src/examples/swe_charm.decl.h	/^    typedef CkIndex_swe_charm index_t;$/;"	t	class:CkIndex_swe_charm	typeref:typename:CkIndex_swe_charm
indicesCount	src/opengl/visualization.h	/^	GLsizei* indicesCount;$/;"	m	class:Visualization	typeref:typename:GLsizei *
indicesOffset	src/opengl/visualization.h	/^	GLvoid** indicesOffset;$/;"	m	class:Visualization	typeref:typename:GLvoid **
init	src/blocks/cuda/SWE_BlockCUDA.cu	/^void SWE_BlockCUDA::init(int i_cudaDevice)$/;"	f	typeref:typename:void SWE_BlockCUDA::
init	src/opengl/vbo.cpp	/^void VBO::init()$/;"	f	class:VBO	typeref:typename:void
init	src/opengl/visualization.cpp	/^void Visualization::init(Simulation &sim, SWE_VisInfo *visInfo)$/;"	f	class:Visualization	typeref:typename:void
initCUDA	src/opengl/visualization.cpp	/^void Visualization::initCUDA() {$/;"	f	class:Visualization	typeref:typename:void
initGLDefaults	src/opengl/visualization.cpp	/^void Visualization::initGLDefaults() {$/;"	f	class:Visualization	typeref:typename:void
initSDL	src/opengl/visualization.cpp	/^void Visualization::initSDL() {$/;"	f	class:Visualization	typeref:typename:void
initScenario	src/blocks/SWE_Block.hh	/^void SWE_Block<T>::initScenario(SWE_Scenario &scenario, BoundaryType boundaries[]) {$/;"	f	class:SWE_Block	typeref:typename:void
initScenario	src/blocks/SWE_Block_common.cpp	/^void SWE_Block::initScenario( float _offsetX, float _offsetY,$/;"	f	class:SWE_Block	typeref:typename:void
initWallClockTime	src/tools/Logger.hh	/^    void initWallClockTime( const double i_wallClockTime ) {$/;"	f	class:tools::Logger	typeref:typename:void
insert	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CProxyElement_SWE_DimensionalSplittingCharm::insert(int nx, int ny, float dy, float dx, flo/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:void
instances	src/opengl/text.cpp	/^unsigned int Text::instances = 0;$/;"	m	class:Text	typeref:typename:unsigned int
instances	src/opengl/text.h	/^	static unsigned int instances;$/;"	m	class:Text	typeref:typename:unsigned int
integer	src/solvers/SIMD_TYPES.hpp	/^	typedef unsigned int integer;$/;"	t	typeref:typename:unsigned int
integer	src/solvers/SIMD_TYPES.hpp	/^	typedef unsigned long long integer;$/;"	t	typeref:typename:unsigned long long
integer	submodules/swe_solvers/src/solver/SIMD_TYPES.hpp	/^	typedef unsigned int integer;$/;"	t	typeref:typename:unsigned int
integer	submodules/swe_solvers/src/solver/SIMD_TYPES.hpp	/^	typedef unsigned long long integer;$/;"	t	typeref:typename:unsigned long long
integer_vector	src/solvers/SIMD_TYPES.hpp	/^	typedef __m128i integer_vector;$/;"	t	typeref:typename:__m128i
integer_vector	src/solvers/SIMD_TYPES.hpp	/^	typedef __m256i integer_vector;$/;"	t	typeref:typename:__m256i
integer_vector	submodules/swe_solvers/src/solver/SIMD_TYPES.hpp	/^	typedef __m128i integer_vector;$/;"	t	typeref:typename:__m128i
integer_vector	submodules/swe_solvers/src/solver/SIMD_TYPES.hpp	/^	typedef __m256i integer_vector;$/;"	t	typeref:typename:__m256i
io	src/writer/NetCdfWriter.hh	/^namespace io {$/;"	n
isActive	src/opengl/controller.h	/^	bool isActive;$/;"	m	class:Controller	typeref:typename:bool
isDummy	src/blocks/SWE_DimensionalSplittingCharm.hh	/^		bool isDummy;$/;"	m	class:copyLayer	typeref:typename:bool
isExtensionSupported	src/opengl/shader.cpp	/^bool Shader::isExtensionSupported(const char* szTargetExtension )$/;"	f	class:Shader	typeref:typename:bool
isExtensionSupported	src/opengl/visualization.cpp	/^bool Visualization::isExtensionSupported(const char* szTargetExtension )$/;"	f	class:Visualization	typeref:typename:bool
isFirstStep	src/opengl/simulation.h	/^    int isFirstStep;$/;"	m	class:Simulation	typeref:typename:int
isPaused	src/opengl/controller.cpp	/^bool Controller::isPaused() {$/;"	f	class:Controller	typeref:typename:bool
isProgramLinked	src/opengl/shader.cpp	/^bool Shader::isProgramLinked(GLuint program, char const * prefix)$/;"	f	class:Shader	typeref:typename:bool
isSet	src/tools/args.hh	/^	bool isSet(const std::string &option)$/;"	f	class:tools::Args	typeref:typename:bool
isShaderCompiled	src/opengl/shader.cpp	/^bool Shader::isShaderCompiled(GLuint shader, char const * prefix)$/;"	f	class:Shader	typeref:typename:bool
j	src/blocks/rusanov/SWE_RusanovBlockCUDA.cu	/^  for(int j=swe.ny+1; j>=0; j--) {$/;"	v	typeref:typename:int
kernelBottomBoundary	src/blocks/cuda/SWE_BlockCUDA_kernels.cu	/^void kernelBottomBoundary(float* hd, float* hud, float* hvd,$/;"	f	typeref:typename:void
kernelBottomCopyLayer	src/blocks/cuda/SWE_BlockCUDA_kernels.cu	/^void kernelBottomCopyLayer(float* hd, float* hud, float* hvd,$/;"	f	typeref:typename:void
kernelBottomGhostBoundary	src/blocks/cuda/SWE_BlockCUDA_kernels.cu	/^void kernelBottomGhostBoundary(float* hd, float* hud, float* hvd,$/;"	f	typeref:typename:void
kernelCalcNormals	src/opengl/simulation.cu	/^void kernelCalcNormals(float3* visBuffer, float3* normalBuffer, int nx, int ny)$/;"	f	typeref:typename:void
kernelCalcVisBuffer	src/opengl/simulation.cu	/^void kernelCalcVisBuffer(float3* visBuffer, const float* hd, const float* bd, $/;"	f	typeref:typename:void
kernelComputeBathymetrySources	src/blocks/rusanov/SWE_RusanovBlockCUDA_kernels.cu	/^void kernelComputeBathymetrySources(float* hd, float* bd, float* Bxd, float* Byd, $/;"	f	typeref:typename:void
kernelComputeFluxesF	src/blocks/rusanov/SWE_RusanovBlockCUDA_kernels.cu	/^void kernelComputeFluxesF(float* hd, float* hud, float* hvd,$/;"	f	typeref:typename:void
kernelComputeFluxesG	src/blocks/rusanov/SWE_RusanovBlockCUDA_kernels.cu	/^void kernelComputeFluxesG(float* hd, float* hud, float* hvd,$/;"	f	typeref:typename:void
kernelEulerTimestep	src/blocks/rusanov/SWE_RusanovBlockCUDA_kernels.cu	/^void kernelEulerTimestep(float* hd, float* hud, float* hvd,$/;"	f	typeref:typename:void
kernelHdBufferEdges	src/blocks/cuda/SWE_BlockCUDA_kernels.cu	/^void kernelHdBufferEdges(float* hd, int nx, int ny)$/;"	f	typeref:typename:void
kernelLeftBoundary	src/blocks/cuda/SWE_BlockCUDA_kernels.cu	/^void kernelLeftBoundary(float* hd, float* hud, float* hvd,$/;"	f	typeref:typename:void
kernelMaximum	src/blocks/rusanov/SWE_RusanovBlockCUDA_kernels.cu	/^void kernelMaximum(float* maxhd, float* maxvd, int start, int size) {$/;"	f	typeref:typename:void
kernelRightBoundary	src/blocks/cuda/SWE_BlockCUDA_kernels.cu	/^void kernelRightBoundary(float* hd, float* hud, float* hvd,$/;"	f	typeref:typename:void
kernelTopBoundary	src/blocks/cuda/SWE_BlockCUDA_kernels.cu	/^void kernelTopBoundary(float* hd, float* hud, float* hvd,$/;"	f	typeref:typename:void
kernelTopCopyLayer	src/blocks/cuda/SWE_BlockCUDA_kernels.cu	/^void kernelTopCopyLayer(float* hd, float* hud, float* hvd,$/;"	f	typeref:typename:void
kernelTopGhostBoundary	src/blocks/cuda/SWE_BlockCUDA_kernels.cu	/^void kernelTopGhostBoundary(float* hd, float* hud, float* hvd,$/;"	f	typeref:typename:void
largeDelimiter	src/tools/Logger.hh	/^  const std::string largeDelimiter;$/;"	m	class:tools::Logger	typeref:typename:const std::string
lastTime	src/opengl/camera.h	/^	unsigned int lastTime;$/;"	m	class:Camera	typeref:typename:unsigned int
loadNewScenario	src/opengl/simulation.cu	/^void Simulation::loadNewScenario(SWE_Scenario* scene)$/;"	f	typeref:typename:void Simulation::
local_t	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    typedef SWE_DimensionalSplittingCharm local_t;$/;"	t	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:SWE_DimensionalSplittingCharm
local_t	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    typedef SWE_DimensionalSplittingCharm local_t;$/;"	t	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:SWE_DimensionalSplittingCharm
local_t	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    typedef SWE_DimensionalSplittingCharm local_t;$/;"	t	class:CProxy_SWE_DimensionalSplittingCharm	typeref:typename:SWE_DimensionalSplittingCharm
local_t	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    typedef SWE_DimensionalSplittingCharm local_t;$/;"	t	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:SWE_DimensionalSplittingCharm
local_t	src/examples/swe_charm.decl.h	/^    typedef swe_charm local_t;$/;"	t	class:CProxy_swe_charm	typeref:typename:swe_charm
local_t	src/examples/swe_charm.decl.h	/^    typedef swe_charm local_t;$/;"	t	class:CkIndex_swe_charm	typeref:typename:swe_charm
logger	src/tools/Logger.cpp	/^tools::Logger tools::Logger::logger;$/;"	m	class:tools::Logger	typeref:typename:tools::Logger
logger	src/tools/Logger.hh	/^    static Logger logger;$/;"	m	class:tools::Logger	typeref:typename:Logger
longOption	src/tools/args.hh	/^		std::string longOption;		\/\/ We need a copy here to get the const char* correct$/;"	m	struct:tools::Args::optionInfo	typeref:typename:std::string
loop	src/opengl/simulation.h	/^    bool loop;$/;"	m	class:Simulation	typeref:typename:bool
m_addHelp	src/tools/args.hh	/^	const bool m_addHelp;$/;"	m	class:tools::Args	typeref:typename:const bool
m_arguments	src/tools/args.hh	/^	std::map<std::string, std::string> m_arguments;$/;"	m	class:tools::Args	typeref:typename:std::map<std::string,std::string>
m_description	src/tools/args.hh	/^	const std::string m_description;$/;"	m	class:tools::Args	typeref:typename:const std::string
m_optionInfo	src/tools/args.hh	/^	std::vector<optionInfo> m_optionInfo;$/;"	m	class:tools::Args	typeref:typename:std::vector<optionInfo>
m_rank	src/tools/ProgressBar.hh	/^	int m_rank;$/;"	m	class:tools::ProgressBar	typeref:typename:int
m_rotatingBar	src/tools/ProgressBar.hh	/^	unsigned char m_rotatingBar;$/;"	m	class:tools::ProgressBar	typeref:typename:unsigned char
m_short2option	src/tools/args.hh	/^	std::map<char, size_t> m_short2option;$/;"	m	class:tools::Args	typeref:typename:std::map<char,size_t>
m_startTime	src/tools/ProgressBar.hh	/^	time_t m_startTime;$/;"	m	class:tools::ProgressBar	typeref:typename:time_t
m_terminalSize	src/tools/ProgressBar.hh	/^	unsigned int m_terminalSize;$/;"	m	class:tools::ProgressBar	typeref:typename:unsigned int
m_totalWork	src/tools/ProgressBar.hh	/^	float m_totalWork;$/;"	m	class:tools::ProgressBar	typeref:typename:float
main	src/examples/netCdf_mpi.cpp	/^int main( int argc, char** argv ) {$/;"	f	typeref:typename:int
main	src/examples/netCdf_simple.cpp	/^int main(int argc, char** argv) {$/;"	f	typeref:typename:int
main	src/examples/swe_mpi.cpp	/^int main(int argc, char** argv) {$/;"	f	typeref:typename:int
main	src/examples/swe_mpi_legacy.cpp	/^int main( int argc, char** argv ) {$/;"	f	typeref:typename:int
main	src/examples/swe_opengl.cpp	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	src/examples/swe_simple.cpp	/^int main(int argc, char** argv) {$/;"	f	typeref:typename:int
main	src/examples/swe_upcxx.cpp	/^int main(int argc, char** argv) {$/;"	f	typeref:typename:int
main	submodules/swe_solvers/src/unit_tests/UnitTests.cpp	/^int main(){$/;"	f	typeref:typename:int
main	submodules/swe_solvers/unit_tests/scripts/main.m	/^function[] = main()$/;"	f
mainProxy	src/examples/swe_charm.cpp	/^\/* readonly *\/ CProxy_swe_charm mainProxy;$/;"	v	typeref:typename:CProxy_swe_charm
maxHeightVariation	submodules/swe_solvers/unit_tests/scripts/create_nc_testphi.m	/^maxHeightVariation = 500;$/;"	v
maxNumberOfNewtonIterations	src/solvers/AugRie.hpp	/^    const int maxNumberOfNewtonIterations;$/;"	m	class:solver::AugRie	typeref:typename:const int
maxNumberOfNewtonIterations	src/solvers/AugRieFun.hpp	/^	const unsigned int maxNumberOfNewtonIterations; \/\/ maximum number of performed Newton iterati/;"	m	class:solver::AugRieFun	typeref:typename:const unsigned int
maxNumberOfNewtonIterations	src/solvers/AugRie_SIMD.hpp	/^	const int maxNumberOfNewtonIterations;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const int
maxNumberOfNewtonIterations	submodules/swe_solvers/src/solver/AugRie.hpp	/^    const int maxNumberOfNewtonIterations;$/;"	m	class:solver::AugRie	typeref:typename:const int
maxNumberOfNewtonIterations	submodules/swe_solvers/src/solver/AugRieFun.hpp	/^	const unsigned int maxNumberOfNewtonIterations; \/\/ maximum number of performed Newton iterati/;"	m	class:solver::AugRieFun	typeref:typename:const unsigned int
maxNumberOfNewtonIterations	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	const int maxNumberOfNewtonIterations;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const int
maxNumberOfNewtonIterationsDefault	submodules/swe_solvers/src/unit_tests/ComponentsTest.h	/^  const int maxNumberOfNewtonIterationsDefault;$/;"	m	class:ComponentsTest	typeref:typename:const int
maxNumberOfNewtonIterationsExpensive	submodules/swe_solvers/src/unit_tests/ComponentsTest.h	/^  const int maxNumberOfNewtonIterationsExpensive;$/;"	m	class:ComponentsTest	typeref:typename:const int
maxParticleSpeed	submodules/swe_solvers/unit_tests/scripts/create_nc_testphi.m	/^maxParticleSpeed = 0.1;$/;"	v
maxSpeedVariation	submodules/swe_solvers/unit_tests/scripts/create_nc_testphi.m	/^maxSpeedVariation = 0.05;$/;"	v
maxTimestep	src/blocks/SWE_Block.hh	/^		float maxTimestep;$/;"	m	class:SWE_Block	typeref:typename:float
maxTimestep	src/blocks/SWE_Block_common.hh	/^		float maxTimestep;$/;"	m	class:SWE_Block	typeref:typename:float
maxTimestepGlobal	src/blocks/SWE_DimensionalSplittingMpi.hh	/^		float maxTimestepGlobal;$/;"	m	class:SWE_DimensionalSplittingMpi	typeref:typename:float
maxTimestepGlobal	src/blocks/SWE_DimensionalSplittingUpcxx.hh	/^		float maxTimestepGlobal;$/;"	m	class:SWE_DimensionalSplittingUpcxx	typeref:typename:float
maxWaterHeight	submodules/swe_solvers/src/unit_tests/ComponentsTest.h	/^  const double maxWaterHeight;$/;"	m	class:ComponentsTest	typeref:typename:const double
maxWaterHeight	submodules/swe_solvers/unit_tests/scripts/calculate_hstar.m	/^maxWaterHeight = 10000^3;$/;"	v
maxWaterHeight	submodules/swe_solvers/unit_tests/scripts/create_nc_testphi.m	/^maxWaterHeight = 10923;$/;"	v
maxWaveSpeed	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^            float maxWaveSpeed;$/;"	m	struct:Closure_SWE_DimensionalSplittingCharm::reduceWaveSpeed_8_closure	typeref:typename:float
maxWaveSpeed	submodules/swe_solvers/src/unit_tests/ComponentsTest.h	/^  const double maxWaveSpeed;$/;"	m	class:ComponentsTest	typeref:typename:const double
maxWaveSpeedVariation	submodules/swe_solvers/src/unit_tests/ComponentsTest.h	/^  const double maxWaveSpeedVariation;$/;"	m	class:ComponentsTest	typeref:typename:const double
maxhd	src/blocks/cuda/SWE_BlockCUDA.hh	/^    float* maxhd;$/;"	m	class:SWE_BlockCUDA	typeref:typename:float *
maxhd	src/blocks/rusanov/SWE_RusanovBlockCUDA.hh	/^    float* maxhd;$/;"	m	class:SWE_RusanovBlockCUDA	typeref:typename:float *
maxvd	src/blocks/cuda/SWE_BlockCUDA.hh	/^    float* maxvd;$/;"	m	class:SWE_BlockCUDA	typeref:typename:float *
maxvd	src/blocks/rusanov/SWE_RusanovBlockCUDA.hh	/^    float* maxvd;$/;"	m	class:SWE_RusanovBlockCUDA	typeref:typename:float *
midDelimiter	src/tools/Logger.hh	/^  const std::string midDelimiter;$/;"	m	class:tools::Logger	typeref:typename:const std::string
middleStateSpeeds	src/solvers/AugRie.hpp	/^    T middleStateSpeeds[2];$/;"	m	class:solver::AugRie	typeref:typename:T[2]
middleStateSpeeds	src/solvers/AugRie_SIMD.hpp	/^	real middleStateSpeeds[2];$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real[2]
middleStateSpeeds	submodules/swe_solvers/src/solver/AugRie.hpp	/^    T middleStateSpeeds[2];$/;"	m	class:solver::AugRie	typeref:typename:T[2]
middleStateSpeeds	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	real middleStateSpeeds[2];$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real[2]
middleStateSpeeds_v	src/solvers/AugRie_SIMD.hpp	/^	real_vector middleStateSpeeds_v[2];$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real_vector[2]
middleStateSpeeds_v	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	real_vector middleStateSpeeds_v[2];$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real_vector[2]
mix	src/opengl/visualization.h	/^	static GLfloat mix(GLfloat a, GLfloat b, float factor)$/;"	f	class:Visualization	typeref:typename:GLfloat
modifyWaterScaling	src/opengl/visualization.cpp	/^void Visualization::modifyWaterScaling(float factor)$/;"	f	class:Visualization	typeref:typename:void
mpi	Makefile	/^mpi:$/;"	t
mpi_hybrid	Makefile	/^mpi_hybrid:$/;"	t
mySolver	submodules/swe_solvers/src/unit_tests/ComponentsTest.h	/^  solver::AugRie<double> mySolver;$/;"	m	class:ComponentsTest	typeref:typename:solver::AugRie<double>
nX	src/writer/Writer.hh	/^		const unsigned int nX, nY;$/;"	m	class:Writer	typeref:typename:const unsigned int
nY	src/writer/Writer.hh	/^		const unsigned int nX, nY;$/;"	m	class:Writer	typeref:typename:const unsigned int
name	src/opengl/vbo.h	/^	GLuint name;$/;"	m	class:VBO	typeref:typename:GLuint
ncPutAttText	src/writer/NetCdfWriter.hh	/^		void ncPutAttText(int varid, const char* name, const char *value) {$/;"	f	class:NetCdfWriter	typeref:typename:void
ncgen_test	Makefile	/^ncgen_test:$/;"	t
ncid	submodules/swe_solvers/unit_tests/scripts/create_nc_testphi.m	/^ncid = netcdf.open(path, 'NC_WRITE');$/;"	v
ncid	submodules/swe_solvers/unit_tests/scripts/main.m	/^ncid = netcdf.open(path, 'NC_WRITE');$/;"	v
neighbour	src/blocks/SWE_Block_common.hh	/^		const SWE_Block1D* neighbour[4];$/;"	m	class:SWE_Block	typeref:typename:const SWE_Block1D * [4]
neighbourCopyLayer	src/blocks/SWE_DimensionalSplittingUpcxx.hh	/^		BlockConnectInterface<upcxx::global_ptr<float>> neighbourCopyLayer[4];$/;"	m	class:SWE_DimensionalSplittingUpcxx	typeref:typename:BlockConnectInterface<upcxx::global_ptr<float>>[4]
neighbourIndex	src/blocks/SWE_DimensionalSplittingCharm.hh	/^		int neighbourIndex[4];$/;"	m	class:SWE_DimensionalSplittingCharm	typeref:typename:int[4]
neighbourRankId	src/blocks/SWE_DimensionalSplittingMpi.hh	/^		int neighbourRankId[4];$/;"	m	class:SWE_DimensionalSplittingMpi	typeref:typename:int[4]
newMouseX	src/opengl/camera.h	/^	unsigned int newMouseX, newMouseY;$/;"	m	class:Camera	typeref:typename:unsigned int
newMouseY	src/opengl/camera.h	/^	unsigned int newMouseX, newMouseY;$/;"	m	class:Camera	typeref:typename:unsigned int
newtonTol	src/solvers/AugRie.hpp	/^    const T newtonTol;$/;"	m	class:solver::AugRie	typeref:typename:const T
newtonTol	src/solvers/AugRieFun.hpp	/^	const real newtonTol;    \/\/ tolerance for the Newton iterative solver$/;"	m	class:solver::AugRieFun	typeref:typename:const real
newtonTol	src/solvers/AugRie_SIMD.hpp	/^	const real newtonTol;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const real
newtonTol	submodules/swe_solvers/src/solver/AugRie.hpp	/^    const T newtonTol;$/;"	m	class:solver::AugRie	typeref:typename:const T
newtonTol	submodules/swe_solvers/src/solver/AugRieFun.hpp	/^	const real newtonTol;    \/\/ tolerance for the Newton iterative solver$/;"	m	class:solver::AugRieFun	typeref:typename:const real
newtonTol	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	const real newtonTol;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const real
newtonTol	submodules/swe_solvers/src/unit_tests/ComponentsTest.h	/^  const double newtonTol;$/;"	m	class:ComponentsTest	typeref:typename:const double
nextText	src/opengl/text.h	/^	unsigned int nextText;$/;"	m	class:Text	typeref:typename:unsigned int
not_ps	src/solvers/SIMD_DEFINITIONS.hpp	/^	inline __m128 not_ps(const __m128 x) {$/;"	f	typeref:typename:__m128
not_ps	src/solvers/SIMD_DEFINITIONS.hpp	/^	inline __m256 not_ps(const __m256 x) {$/;"	f	typeref:typename:__m256
not_ps	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	inline __m128 not_ps(const __m128 x) {$/;"	f	typeref:typename:__m128
not_ps	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	inline __m256 not_ps(const __m256 x) {$/;"	f	typeref:typename:__m256
not_si128	src/solvers/SIMD_DEFINITIONS.hpp	/^	inline __m128i not_si128(const __m128i x) {$/;"	f	typeref:typename:__m128i
not_si128	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	inline __m128i not_si128(const __m128i x) {$/;"	f	typeref:typename:__m128i
not_si256	src/solvers/SIMD_DEFINITIONS.hpp	/^	inline __m256i not_si256(const __m256i x) {$/;"	f	typeref:typename:__m256i
not_si256	submodules/swe_solvers/src/solver/SIMD_DEFINITIONS.hpp	/^	inline __m256i not_si256(const __m256i x) {$/;"	f	typeref:typename:__m256i
nullMessageOutput	paraview/netcdf_swe.py	/^def nullMessageOutput(type, msg):$/;"	f
numberOfRandomTests	submodules/swe_solvers/src/unit_tests/ComponentsTest.h	/^  const int numberOfRandomTests;$/;"	m	class:ComponentsTest	typeref:typename:const int
nx	src/blocks/SWE_Block.hh	/^		int nx;$/;"	m	class:SWE_Block	typeref:typename:int
nx	src/blocks/SWE_Block_common.hh	/^		int nx;$/;"	m	class:SWE_Block	typeref:typename:int
nx	src/opengl/simulation.h	/^    int nx;$/;"	m	class:Simulation	typeref:typename:int
nx	src/scenarios/SWE_TsunamiScenario.hh	/^		size_t nx;$/;"	m	class:SWE_TsunamiScenario	typeref:typename:size_t
ny	src/blocks/SWE_Block.hh	/^		int ny;$/;"	m	class:SWE_Block	typeref:typename:int
ny	src/blocks/SWE_Block_common.hh	/^		int ny;$/;"	m	class:SWE_Block	typeref:typename:int
ny	src/opengl/simulation.h	/^    int ny;$/;"	m	class:Simulation	typeref:typename:int
ny	src/scenarios/SWE_TsunamiScenario.hh	/^		size_t ny;$/;"	m	class:SWE_TsunamiScenario	typeref:typename:size_t
objectX	src/opengl/camera.h	/^	GLdouble objectX;$/;"	m	class:Camera	typeref:typename:GLdouble
objectY	src/opengl/camera.h	/^	GLdouble objectY;$/;"	m	class:Camera	typeref:typename:GLdouble
objectZ	src/opengl/camera.h	/^	GLdouble objectZ;$/;"	m	class:Camera	typeref:typename:GLdouble
offsetX	src/blocks/SWE_Block_common.hh	/^		float offsetX;	\/\/\/< x-coordinate of the origin (left-bottom corner) of the Cartesian grid$/;"	m	class:SWE_Block	typeref:typename:float
offsetX	src/writer/VtkWriter.hh	/^	float offsetX, offsetY;$/;"	m	class:VtkWriter	typeref:typename:float
offsetY	src/blocks/SWE_Block_common.hh	/^		float offsetY;	\/\/\/< y-coordinate of the origin (left-bottom corner) of the Cartesian grid$/;"	m	class:SWE_Block	typeref:typename:float
offsetY	src/writer/VtkWriter.hh	/^	float offsetX, offsetY;$/;"	m	class:VtkWriter	typeref:typename:float
oldMouseX	src/opengl/camera.h	/^	unsigned int oldMouseX, oldMouseY;$/;"	m	class:Camera	typeref:typename:unsigned int
oldMouseY	src/opengl/camera.h	/^	unsigned int oldMouseX, oldMouseY;$/;"	m	class:Camera	typeref:typename:unsigned int
openFont	src/opengl/text.h	/^	static void openFont()$/;"	f	class:Text	typeref:typename:void
openGL	build/options/SWE_gnu_cuda_asagi_openGL.py	/^openGL='yes'$/;"	v
openGL	build/options/SWE_gnu_cuda_openGL.py	/^openGL='yes'$/;"	v
openGL	build/options/SWE_gnu_mpi_asagi.py	/^openGL='yes'$/;"	v
openGL_instr	build/options/SWE_gnu_cuda_asagi_openGL.py	/^openGL_instr='yes'$/;"	v
openGL_instr	build/options/SWE_gnu_mpi_asagi.py	/^openGL_instr='yes'$/;"	v
operator ()	src/tools/args.hh	/^		void operator()(char& c)$/;"	f	struct:tools::Args::valueConvert	typeref:typename:void
operator () 	submodules/swe_solvers/src/unit_tests/ComponentsTest.cpp	/^void ComponentsTest::operator() (){$/;"	f	class:ComponentsTest	typeref:typename:void
operator <<	src/blocks/rusanov/SWE_RusanovBlock.cpp	/^ostream& operator<<(ostream& os, const SWE_RusanovBlock& swe) {$/;"	f	typeref:typename:ostream &
operator []	src/tools/Float1D.hh	/^inline float& Float1D::operator[](int index) { $/;"	f	class:Float1D	typeref:typename:float &
operator []	src/tools/Float2D.hh	/^		inline float* operator[](int index) {$/;"	f	class:Float2D	typeref:typename:float *
operator []	src/writer/Writer.hh	/^	int& operator[](unsigned int i) {$/;"	f	struct:BoundarySize	typeref:typename:int &
operator [] 	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    CProxyElement_SWE_DimensionalSplittingCharm operator [] (const CkArrayIndex1D &idx) const$/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:CProxyElement_SWE_DimensionalSplittingCharm
operator [] 	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    CProxyElement_SWE_DimensionalSplittingCharm operator [] (const CkArrayIndex1D &idx) const$/;"	f	class:CProxy_SWE_DimensionalSplittingCharm	typeref:typename:CProxyElement_SWE_DimensionalSplittingCharm
operator delete	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    void operator delete(void *p, int, int, int, int){dealloc(p);}$/;"	f	class:CMessage_copyLayer	typeref:typename:void
operator delete	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    void operator delete(void *p, int, int, int, int, const int){dealloc(p);}$/;"	f	class:CMessage_copyLayer	typeref:typename:void
operator delete	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    void operator delete(void*p){dealloc(p);}$/;"	f	class:CMessage_copyLayer	typeref:typename:void
operator delete	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    void operator delete(void*p, int*){dealloc(p);}$/;"	f	class:CMessage_copyLayer	typeref:typename:void
operator delete	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    void operator delete(void*p, int*, const int){dealloc(p);}$/;"	f	class:CMessage_copyLayer	typeref:typename:void
operator delete	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    void operator delete(void*p, size_t){dealloc(p);}$/;"	f	class:CMessage_copyLayer	typeref:typename:void
operator delete	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    void operator delete(void*p, void*){dealloc(p);}$/;"	f	class:CMessage_copyLayer	typeref:typename:void
operator new	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    void* operator new(size_t, void*p) { return p; }$/;"	f	class:CMessage_copyLayer	typeref:typename:void *
operator new	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void *CMessage_copyLayer::operator new(size_t s){$/;"	f	class:CMessage_copyLayer	typeref:typename:void *
operator new	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void *CMessage_copyLayer::operator new(size_t s, int sz0, int sz1, int sz2, int sz3) {$/;"	f	class:CMessage_copyLayer	typeref:typename:void *
operator new	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void *CMessage_copyLayer::operator new(size_t s, int sz0, int sz1, int sz2, int sz3, const int p/;"	f	class:CMessage_copyLayer	typeref:typename:void *
operator new	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void *CMessage_copyLayer::operator new(size_t s, int* sz){$/;"	f	class:CMessage_copyLayer	typeref:typename:void *
operator new	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void *CMessage_copyLayer::operator new(size_t s, int* sz,const int pb){$/;"	f	class:CMessage_copyLayer	typeref:typename:void *
operator |	src/types/Boundary.hh	/^inline void operator|(PUP::er &p, Boundary &s) {$/;"	f	typeref:typename:void
operator |	src/types/Boundary.hh	/^inline void operator|(PUP::er &p, BoundaryType &s) {$/;"	f	typeref:typename:void
optionInfo	src/tools/args.hh	/^	struct optionInfo {$/;"	s	class:tools::Args
orient	src/opengl/camera.cpp	/^void Camera::orient( float angle_dX, float angle_dY ) $/;"	f	class:Camera	typeref:typename:void
originX	src/blocks/SWE_Block.hh	/^		float originX;	\/\/\/< x-coordinate of the origin (left-bottom corner) of the Cartesian grid$/;"	m	class:SWE_Block	typeref:typename:float
originX	src/scenarios/SWE_TsunamiScenario.hh	/^		float originX;$/;"	m	class:SWE_TsunamiScenario	typeref:typename:float
originY	src/blocks/SWE_Block.hh	/^		float originY;	\/\/\/< y-coordinate of the origin (left-bottom corner) of the Cartesian grid$/;"	m	class:SWE_Block	typeref:typename:float
originY	src/scenarios/SWE_TsunamiScenario.hh	/^		float originY;$/;"	m	class:SWE_TsunamiScenario	typeref:typename:float
p	buildAll.py	/^    p = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)$/;"	v
pack	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void* CMessage_copyLayer::pack(copyLayer *msg) {$/;"	f	class:CMessage_copyLayer	typeref:typename:void *
panning	src/opengl/camera.cpp	/^void Camera::panning(int newX, int newY) {$/;"	f	class:Camera	typeref:typename:void
parallelization	build/options/SWE_gnu_cuda.py	/^parallelization='cuda'$/;"	v
parallelization	build/options/SWE_gnu_cuda_asagi_openGL.py	/^parallelization='cuda'$/;"	v
parallelization	build/options/SWE_gnu_cuda_openGL.py	/^parallelization='cuda'$/;"	v
parallelization	build/options/SWE_gnu_mpi.py	/^parallelization='mpi'$/;"	v
parallelization	build/options/SWE_gnu_mpi_asagi.py	/^parallelization='cuda'$/;"	v
parallelization	build/options/SWE_gnu_mpi_with_cuda.py	/^parallelization='mpi_with_cuda'$/;"	v
parallelization	build/options/SWE_intel_mpi.py	/^parallelization='mpi'$/;"	v
parallelization	build/options/SWE_intel_mpi_vectorized.py	/^parallelization='mpi'$/;"	v
parse	src/tools/args.hh	/^	Result parse(int argc, char* const* argv, bool printHelp = true)$/;"	f	class:tools::Args	typeref:typename:Result
path	submodules/swe_solvers/unit_tests/scripts/main.m	/^path = input('Please enter the path (including the filename),\\nwhere the file should be written/;"	v
paused	src/opengl/controller.h	/^	bool paused;$/;"	m	class:Controller	typeref:typename:bool
phi	submodules/swe_solvers/unit_tests/scripts/calculate_hstar.m	/^phi = @(h) (h <= hLow) .* 2 .* ( sqrt(g.*h) - sqrt(g.*hLow) ) ...$/;"	v
pointerB	src/types/BlockConnectInterface.hh	/^	T pointerB;$/;"	m	struct:BlockConnectInterface	typeref:typename:T
pointerH	src/types/BlockConnectInterface.hh	/^	T pointerH;$/;"	m	struct:BlockConnectInterface	typeref:typename:T
pointerHu	src/types/BlockConnectInterface.hh	/^	T pointerHu;$/;"	m	struct:BlockConnectInterface	typeref:typename:T
pointerHv	src/types/BlockConnectInterface.hh	/^	T pointerHv;$/;"	m	struct:BlockConnectInterface	typeref:typename:T
printCellSize	src/tools/Logger.hh	/^    void printCellSize( const float i_dX, const float i_dY, const std::string i_unit="m" ) {$/;"	f	class:tools::Logger	typeref:typename:void
printDeviceInformation	src/blocks/cuda/SWE_BlockCUDA.cu	/^void SWE_BlockCUDA::printDeviceInformation()$/;"	f	typeref:typename:void SWE_BlockCUDA::
printElementUpdatesDone	src/tools/Logger.hh	/^    void printElementUpdatesDone(unsigned int i_iterations, const int i_nX, const int i_nY, $/;"	f	class:tools::Logger	typeref:typename:void
printFinishMessage	src/tools/Logger.hh	/^    void printFinishMessage() {$/;"	f	class:tools::Logger	typeref:typename:void
printIterationsDone	src/tools/Logger.hh	/^    void printIterationsDone(unsigned int i_iterations, std::string i_iterationMessage = "iterat/;"	f	class:tools::Logger	typeref:typename:void
printNumber1d	src/tools/Logger.hh	/^  void printNumber1d( const int i_nX,$/;"	f	class:tools::Logger	typeref:typename:void
printNumber2d	src/tools/Logger.hh	/^  void printNumber2d( const int i_nX,$/;"	f	class:tools::Logger	typeref:typename:void
printNumberOfBlocks	src/tools/Logger.hh	/^    void printNumberOfBlocks( const int i_nX, const int i_nY ) {$/;"	f	class:tools::Logger	typeref:typename:void
printNumberOfCells	src/tools/Logger.hh	/^    void printNumberOfCells( const int i_nX,$/;"	f	class:tools::Logger	typeref:typename:void
printNumberOfCellsPerProcess	src/tools/Logger.hh	/^    void printNumberOfCellsPerProcess( const int i_nX, const int i_nY ) {$/;"	f	class:tools::Logger	typeref:typename:void
printNumberOfProcesses	src/tools/Logger.hh	/^    void printNumberOfProcesses( const int i_numberOfProcesses,$/;"	f	class:tools::Logger	typeref:typename:void
printOutputFileCreation	src/tools/Logger.hh	/^    void printOutputFileCreation( const std::string i_fileName,$/;"	f	class:tools::Logger	typeref:typename:void
printOutputTime	src/tools/Logger.hh	/^    void printOutputTime( const float i_time,$/;"	f	class:tools::Logger	typeref:typename:void
printPercentage	src/tools/ProgressBar.hh	/^	unsigned int printPercentage(float done)$/;"	f	class:tools::ProgressBar	typeref:typename:unsigned int
printProgressBar	src/tools/ProgressBar.hh	/^	void printProgressBar(float done, unsigned int size)$/;"	f	class:tools::ProgressBar	typeref:typename:void
printRotatingBar	src/tools/ProgressBar.hh	/^	void printRotatingBar()$/;"	f	class:tools::ProgressBar	typeref:typename:void
printSimulationTime	src/tools/Logger.hh	/^    void printSimulationTime( const float i_time,$/;"	f	class:tools::Logger	typeref:typename:void
printSolverStatistics	src/tools/Logger.hh	/^    void printSolverStatistics( const long i_firstSolverCounter,$/;"	f	class:tools::Logger	typeref:typename:void
printSolverVariables	submodules/swe_solvers/src/unit_tests/ComponentsTest.cpp	/^std::string ComponentsTest::printSolverVariables() {$/;"	f	class:ComponentsTest	typeref:typename:std::string
printSolverVariablesWithResults	submodules/swe_solvers/src/unit_tests/ComponentsTest.cpp	/^std::string ComponentsTest::printSolverVariablesWithResults( const double i_hUpdateLeft,$/;"	f	class:ComponentsTest	typeref:typename:std::string
printStartMessage	src/tools/Logger.hh	/^    void printStartMessage( const std::string i_startMessage = "Everything is set up, starting t/;"	f	class:tools::Logger	typeref:typename:void
printStatisticsMessage	src/tools/Logger.hh	/^    void printStatisticsMessage( const std::string i_statisticsMessage="Simulation finished. Pri/;"	f	class:tools::Logger	typeref:typename:void
printStats	src/solvers/Hybrid.hpp	/^    void printStats() {$/;"	f	class:solver::Hybrid	typeref:typename:void
printStats	submodules/swe_solvers/src/solver/Hybrid.hpp	/^    void printStats() {$/;"	f	class:solver::Hybrid	typeref:typename:void
printString	src/tools/Logger.hh	/^    void printString(const std::string i_string) {$/;"	f	class:tools::Logger	typeref:typename:void
printTime	src/tools/Logger.hh	/^    void printTime(const std::string &i_name, const std::string &i_message ) {$/;"	f	class:tools::Logger	typeref:typename:void
printTimeLeft	src/tools/ProgressBar.hh	/^	unsigned int printTimeLeft(float done)$/;"	f	class:tools::ProgressBar	typeref:typename:unsigned int
printWallClockTime	src/tools/Logger.hh	/^    void printWallClockTime( const double i_wallClockTime,$/;"	f	class:tools::Logger	typeref:typename:void
printWelcomeMessage	src/tools/Logger.hh	/^    void printWelcomeMessage() {$/;"	f	class:tools::Logger	typeref:typename:void
private	submodules/swe_solvers/src/unit_tests/ComponentsTest.cpp	/^#define private /;"	d	file:
private	submodules/swe_solvers/src/unit_tests/ComponentsTest.h	/^#define private /;"	d
processCopyLayer	src/blocks/SWE_DimensionalSplittingCharm.cpp	/^void SWE_DimensionalSplittingCharm::processCopyLayer(copyLayer *msg) {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
processRank	src/tools/Logger.hh	/^  int processRank;$/;"	m	class:tools::Logger	typeref:typename:int
program	src/opengl/shader.h	/^	GLuint program;$/;"	m	class:Shader	typeref:typename:GLuint
programName	src/tools/Logger.hh	/^  const std::string programName;$/;"	m	class:tools::Logger	typeref:typename:const std::string
protected	submodules/swe_solvers/src/unit_tests/ComponentsTest.h	/^#define protected /;"	d
proxy_t	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    typedef CProxy_SWE_DimensionalSplittingCharm proxy_t;$/;"	t	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:CProxy_SWE_DimensionalSplittingCharm
proxy_t	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    typedef CProxy_SWE_DimensionalSplittingCharm proxy_t;$/;"	t	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:CProxy_SWE_DimensionalSplittingCharm
proxy_t	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    typedef CProxy_SWE_DimensionalSplittingCharm proxy_t;$/;"	t	class:CProxy_SWE_DimensionalSplittingCharm	typeref:typename:CProxy_SWE_DimensionalSplittingCharm
proxy_t	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    typedef CProxy_SWE_DimensionalSplittingCharm proxy_t;$/;"	t	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:CProxy_SWE_DimensionalSplittingCharm
proxy_t	src/examples/swe_charm.decl.h	/^    typedef CProxy_swe_charm proxy_t;$/;"	t	class:CProxy_swe_charm	typeref:typename:CProxy_swe_charm
proxy_t	src/examples/swe_charm.decl.h	/^    typedef CProxy_swe_charm proxy_t;$/;"	t	class:CkIndex_swe_charm	typeref:typename:CProxy_swe_charm
pup	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    void pup(PUP::er &p)$/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:void
pup	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    void pup(PUP::er &p)$/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:void
pup	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    void pup(PUP::er &p)$/;"	f	class:CProxy_SWE_DimensionalSplittingCharm	typeref:typename:void
pup	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^            void pup(PUP::er& __p) {$/;"	f	struct:Closure_SWE_DimensionalSplittingCharm::compute_2_closure	typeref:typename:void
pup	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^            void pup(PUP::er& __p) {$/;"	f	struct:Closure_SWE_DimensionalSplittingCharm::reductionTrigger_7_closure	typeref:typename:void
pup	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^      void pup(PUP::er& __p) {$/;"	f	struct:Closure_SWE_DimensionalSplittingCharm::reduceWaveSpeed_8_closure	typeref:typename:void
pup	src/examples/swe_charm.decl.h	/^    void pup(PUP::er &p)$/;"	f	class:CProxy_swe_charm	typeref:typename:void
pup	src/examples/swe_charm.def.h	/^            void pup(PUP::er& __p) {$/;"	f	struct:Closure_swe_charm::exit_3_closure	typeref:typename:void
pup	src/examples/swe_charm.def.h	/^      void pup(PUP::er& __p) {$/;"	f	struct:Closure_swe_charm::done_2_closure	typeref:typename:void
randHeights	submodules/swe_solvers/unit_tests/scripts/create_nc_testphi.m	/^  randHeights = max(randHeights, dryTol+zeroTol);$/;"	v
randHeights	submodules/swe_solvers/unit_tests/scripts/create_nc_testphi.m	/^  randHeights = rand(1, size)*maxWaterHeight+dryTol;$/;"	v
randHeights	submodules/swe_solvers/unit_tests/scripts/create_nc_testphi.m	/^  randHeights = randHeights(wallSize+1:size) + ...$/;"	v
randSpeeds	submodules/swe_solvers/unit_tests/scripts/create_nc_testphi.m	/^  randSpeeds = randSpeeds(wallSize+1:size) + ...$/;"	v
randSpeeds	submodules/swe_solvers/unit_tests/scripts/create_nc_testphi.m	/^  randSpeeds = transpose((2*(rand(1, size)-0.5))*maxParticleSpeed);$/;"	v
randomSize	submodules/swe_solvers/unit_tests/scripts/create_nc_testphi.m	/^randomSize = input('Please enter the random sample size: ');$/;"	v
rawData	src/tools/Float1D.hh	/^		float* rawData;$/;"	m	class:Float1D	typeref:typename:float *
rawData	src/tools/Float2D.hh	/^		float *rawData;$/;"	m	class:Float2D	typeref:typename:float *
readShaderFile	src/opengl/shader.cpp	/^bool Shader::readShaderFile(char const * filename, GLchar * & shaderSource, GLint & length)$/;"	f	class:Shader	typeref:typename:bool
readTestPhi	submodules/swe_solvers/src/unit_tests/ComponentsTest.cpp	/^void ComponentsTest::readTestPhi() {$/;"	f	class:ComponentsTest	typeref:typename:void
read_nc_testphi	submodules/swe_solvers/unit_tests/scripts/read_nc_testphi.m	/^function[hLowVec, hHighVec, huLowVec, huHighVec] = read_nc_testphi(path)$/;"	f
reader	paraview/netcdf_swe.py	/^	reader = NetCDFReader( FileName=[str(file)] )$/;"	v
real	src/solvers/SIMD_TYPES.hpp	/^	typedef double real;$/;"	t	typeref:typename:double
real	src/solvers/SIMD_TYPES.hpp	/^	typedef float real;$/;"	t	typeref:typename:float
real	submodules/swe_solvers/src/solver/SIMD_TYPES.hpp	/^	typedef double real;$/;"	t	typeref:typename:double
real	submodules/swe_solvers/src/solver/SIMD_TYPES.hpp	/^	typedef float real;$/;"	t	typeref:typename:float
real_vector	src/solvers/SIMD_TYPES.hpp	/^		typedef __m128 real_vector;$/;"	t	typeref:typename:__m128
real_vector	src/solvers/SIMD_TYPES.hpp	/^		typedef __m128d real_vector;$/;"	t	typeref:typename:__m128d
real_vector	src/solvers/SIMD_TYPES.hpp	/^		typedef __m256 real_vector;$/;"	t	typeref:typename:__m256
real_vector	src/solvers/SIMD_TYPES.hpp	/^		typedef __m256d real_vector;$/;"	t	typeref:typename:__m256d
real_vector	submodules/swe_solvers/src/solver/SIMD_TYPES.hpp	/^		typedef __m128 real_vector;$/;"	t	typeref:typename:__m128
real_vector	submodules/swe_solvers/src/solver/SIMD_TYPES.hpp	/^		typedef __m128d real_vector;$/;"	t	typeref:typename:__m128d
real_vector	submodules/swe_solvers/src/solver/SIMD_TYPES.hpp	/^		typedef __m256 real_vector;$/;"	t	typeref:typename:__m256
real_vector	submodules/swe_solvers/src/solver/SIMD_TYPES.hpp	/^		typedef __m256d real_vector;$/;"	t	typeref:typename:__m256d
receiveGhostBottom	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    static int receiveGhostBottom(copyLayer* impl_msg) { return idx_receiveGhostBottom_copyLayer/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
receiveGhostBottom	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CProxyElement_SWE_DimensionalSplittingCharm::receiveGhostBottom(copyLayer* impl_msg) $/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:void
receiveGhostBottom	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CProxySection_SWE_DimensionalSplittingCharm::receiveGhostBottom(copyLayer* impl_msg) $/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:void
receiveGhostBottom	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CProxy_SWE_DimensionalSplittingCharm::receiveGhostBottom(copyLayer* impl_msg) $/;"	f	class:CProxy_SWE_DimensionalSplittingCharm	typeref:typename:void
receiveGhostBottom	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::receiveGhostBottom(copyLayer* msg_msg){$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
receiveGhostLeft	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    static int receiveGhostLeft(copyLayer* impl_msg) { return idx_receiveGhostLeft_copyLayer(); /;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
receiveGhostLeft	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CProxyElement_SWE_DimensionalSplittingCharm::receiveGhostLeft(copyLayer* impl_msg) $/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:void
receiveGhostLeft	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CProxySection_SWE_DimensionalSplittingCharm::receiveGhostLeft(copyLayer* impl_msg) $/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:void
receiveGhostLeft	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::receiveGhostLeft(copyLayer* msg_msg){$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
receiveGhostRight	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    static int receiveGhostRight(copyLayer* impl_msg) { return idx_receiveGhostRight_copyLayer()/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
receiveGhostRight	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CProxyElement_SWE_DimensionalSplittingCharm::receiveGhostRight(copyLayer* impl_msg) $/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:void
receiveGhostRight	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CProxySection_SWE_DimensionalSplittingCharm::receiveGhostRight(copyLayer* impl_msg) $/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:void
receiveGhostRight	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CProxy_SWE_DimensionalSplittingCharm::receiveGhostRight(copyLayer* impl_msg) $/;"	f	class:CProxy_SWE_DimensionalSplittingCharm	typeref:typename:void
receiveGhostRight	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::receiveGhostRight(copyLayer* msg_msg){$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
receiveGhostTop	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    static int receiveGhostTop(copyLayer* impl_msg) { return idx_receiveGhostTop_copyLayer(); }$/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
receiveGhostTop	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CProxyElement_SWE_DimensionalSplittingCharm::receiveGhostTop(copyLayer* impl_msg) $/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:void
receiveGhostTop	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CProxySection_SWE_DimensionalSplittingCharm::receiveGhostTop(copyLayer* impl_msg) $/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:void
receiveGhostTop	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CProxy_SWE_DimensionalSplittingCharm::receiveGhostTop(copyLayer* impl_msg) $/;"	f	class:CProxy_SWE_DimensionalSplittingCharm	typeref:typename:void
receiveGhostTop	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::receiveGhostTop(copyLayer* msg_msg){$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
redn_wrapper_reduceWaveSpeed	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    static int redn_wrapper_reduceWaveSpeed(CkReductionMsg* impl_msg) { return idx_redn_wrapper_/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
reduceWaveSpeed	src/blocks/SWE_DimensionalSplittingCharm.cpp	/^void SWE_DimensionalSplittingCharm::reduceWaveSpeed(float maxWaveSpeed) {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
reduceWaveSpeed	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    static int reduceWaveSpeed(float maxWaveSpeed) { return idx_reduceWaveSpeed_marshall8(); }$/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
reduceWaveSpeed	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CProxyElement_SWE_DimensionalSplittingCharm::reduceWaveSpeed(float maxWaveSpeed, const CkEn/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:void
reduceWaveSpeed	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CProxySection_SWE_DimensionalSplittingCharm::reduceWaveSpeed(float maxWaveSpeed, const CkEn/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:void
reduceWaveSpeed_8_closure	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^      reduceWaveSpeed_8_closure() {$/;"	f	struct:Closure_SWE_DimensionalSplittingCharm::reduceWaveSpeed_8_closure
reduceWaveSpeed_8_closure	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^      reduceWaveSpeed_8_closure(CkMigrateMessage*) {$/;"	f	struct:Closure_SWE_DimensionalSplittingCharm::reduceWaveSpeed_8_closure
reduceWaveSpeed_8_closure	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^    struct Closure_SWE_DimensionalSplittingCharm::reduceWaveSpeed_8_closure : public SDAG::Closu/;"	s	class:Closure_SWE_DimensionalSplittingCharm
reductionTrigger	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    static int reductionTrigger() { return idx_reductionTrigger_void(); }$/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
reductionTrigger	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CProxyElement_SWE_DimensionalSplittingCharm::reductionTrigger(const CkEntryOptions *impl_e_/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:void
reductionTrigger	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CProxySection_SWE_DimensionalSplittingCharm::reductionTrigger(const CkEntryOptions *impl_e_/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:void
reductionTrigger	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CProxy_SWE_DimensionalSplittingCharm::reductionTrigger(const CkEntryOptions *impl_e_opts) $/;"	f	class:CProxy_SWE_DimensionalSplittingCharm	typeref:typename:void
reductionTrigger	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::reductionTrigger(){$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
reductionTrigger	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void SWE_DimensionalSplittingCharm::reductionTrigger(Closure_SWE_DimensionalSplittingCharm::redu/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
reductionTrigger_7_closure	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^      reductionTrigger_7_closure() {$/;"	f	struct:Closure_SWE_DimensionalSplittingCharm::reductionTrigger_7_closure
reductionTrigger_7_closure	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^      reductionTrigger_7_closure(CkMigrateMessage*) {$/;"	f	struct:Closure_SWE_DimensionalSplittingCharm::reductionTrigger_7_closure
reductionTrigger_7_closure	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^    struct Closure_SWE_DimensionalSplittingCharm::reductionTrigger_7_closure : public SDAG::Clos/;"	s	class:Closure_SWE_DimensionalSplittingCharm
reg_SWE_DimensionalSplittingCharm_marshall1	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^int CkIndex_SWE_DimensionalSplittingCharm::reg_SWE_DimensionalSplittingCharm_marshall1() {$/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
reg_compute_void	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^int CkIndex_SWE_DimensionalSplittingCharm::reg_compute_void() {$/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
reg_done_marshall2	src/examples/swe_charm.def.h	/^int CkIndex_swe_charm::reg_done_marshall2() {$/;"	f	class:CkIndex_swe_charm	typeref:typename:int
reg_exit_void	src/examples/swe_charm.def.h	/^int CkIndex_swe_charm::reg_exit_void() {$/;"	f	class:CkIndex_swe_charm	typeref:typename:int
reg_receiveGhostBottom_copyLayer	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^int CkIndex_SWE_DimensionalSplittingCharm::reg_receiveGhostBottom_copyLayer() {$/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
reg_receiveGhostLeft_copyLayer	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^int CkIndex_SWE_DimensionalSplittingCharm::reg_receiveGhostLeft_copyLayer() {$/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
reg_receiveGhostRight_copyLayer	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^int CkIndex_SWE_DimensionalSplittingCharm::reg_receiveGhostRight_copyLayer() {$/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
reg_receiveGhostTop_copyLayer	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^int CkIndex_SWE_DimensionalSplittingCharm::reg_receiveGhostTop_copyLayer() {$/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
reg_redn_wrapper_reduceWaveSpeed_marshall8	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^int CkIndex_SWE_DimensionalSplittingCharm::reg_redn_wrapper_reduceWaveSpeed_marshall8() {$/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
reg_reduceWaveSpeed_marshall8	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^int CkIndex_SWE_DimensionalSplittingCharm::reg_reduceWaveSpeed_marshall8() {$/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
reg_reductionTrigger_void	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^int CkIndex_SWE_DimensionalSplittingCharm::reg_reductionTrigger_void() {$/;"	f	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:int
reg_swe_charm_CkArgMsg	src/examples/swe_charm.def.h	/^int CkIndex_swe_charm::reg_swe_charm_CkArgMsg() {$/;"	f	class:CkIndex_swe_charm	typeref:typename:int
registerCopyLayer	src/blocks/SWE_Block_common.cpp	/^SWE_Block1D* SWE_Block::registerCopyLayer(BoundaryEdge edge){$/;"	f	class:SWE_Block	typeref:typename:SWE_Block1D *
registerCopyLayer	src/blocks/cuda/SWE_BlockCUDA.cu	/^SWE_Block1D* SWE_BlockCUDA::registerCopyLayer(BoundaryEdge edge){$/;"	f	typeref:typename:SWE_Block1D * SWE_BlockCUDA::
renderDisplay	src/opengl/visualization.cpp	/^void Visualization::renderDisplay() {$/;"	f	class:Visualization	typeref:typename:void
renderMode	src/opengl/visualization.h	/^	RenderMode renderMode;$/;"	m	class:Visualization	typeref:typename:RenderMode
representation	paraview/netcdf_swe.py	/^representation = Show()$/;"	v
required	src/tools/args.hh	/^		bool required;$/;"	m	struct:tools::Args::optionInfo	typeref:typename:bool
reset	src/opengl/camera.cpp	/^void Camera::reset()$/;"	f	class:Camera	typeref:typename:void
resetClockToCurrentTime	src/tools/Logger.hh	/^    void resetClockToCurrentTime(const std::string &i_name) {$/;"	f	class:tools::Logger	typeref:typename:void
resetSection	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    void resetSection() {$/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:void
resize	src/opengl/simulation.cu	/^void Simulation::resize(float factor)$/;"	f	typeref:typename:void Simulation::
resizeWindow	src/opengl/visualization.cpp	/^int Visualization::resizeWindow(int newWidth, int newHeight)$/;"	f	class:Visualization	typeref:typename:int
restart	src/opengl/simulation.cu	/^void Simulation::restart()$/;"	f	typeref:typename:void Simulation::
riemannStructure	src/solvers/AugRie.hpp	/^    RiemannStructure riemannStructure;$/;"	m	class:solver::AugRie	typeref:typename:RiemannStructure
riemannStructure	src/solvers/AugRie_SIMD.hpp	/^	integer riemannStructure;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:integer
riemannStructure	submodules/swe_solvers/src/solver/AugRie.hpp	/^    RiemannStructure riemannStructure;$/;"	m	class:solver::AugRie	typeref:typename:RiemannStructure
riemannStructure	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	integer riemannStructure;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:integer
riemannStructure_v	src/solvers/AugRie_SIMD.hpp	/^	integer_vector riemannStructure_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:integer_vector
riemannStructure_v	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	integer_vector riemannStructure_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:integer_vector
rotateObject	src/opengl/camera.cpp	/^void Camera::rotateObject() {$/;"	f	class:Camera	typeref:typename:void
rows	src/tools/Float2D.hh	/^		int rows;$/;"	m	class:Float2D	typeref:typename:int
runCuda	src/opengl/simulation.cu	/^void Simulation::runCuda(struct cudaGraphicsResource **vbo_resource, struct cudaGraphicsResource/;"	f	typeref:typename:void Simulation::
runSuite	submodules/swe_solvers/src/unit_tests/UnitTests.cpp	/^void runSuite(){$/;"	f	typeref:typename:void
scaleFunction	src/opengl/simulation.cu	/^float scaleFunction(float val, float scale) {$/;"	f	typeref:typename:float
scenario	src/opengl/simulation.h	/^    SWE_Scenario* scenario;$/;"	m	class:Simulation	typeref:typename:SWE_Scenario *
scenarios	src/opengl/controller.h	/^	SWE_Scenario *scenarios[SCENARIO_COUNT];$/;"	m	class:Controller	typeref:typename:SWE_Scenario * []
section_t	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    typedef CProxySection_SWE_DimensionalSplittingCharm section_t;$/;"	t	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:CProxySection_SWE_DimensionalSplittingCharm
section_t	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    typedef CProxySection_SWE_DimensionalSplittingCharm section_t;$/;"	t	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:CProxySection_SWE_DimensionalSplittingCharm
section_t	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    typedef CProxySection_SWE_DimensionalSplittingCharm section_t;$/;"	t	class:CProxy_SWE_DimensionalSplittingCharm	typeref:typename:CProxySection_SWE_DimensionalSplittingCharm
section_t	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    typedef CProxySection_SWE_DimensionalSplittingCharm section_t;$/;"	t	class:CkIndex_SWE_DimensionalSplittingCharm	typeref:typename:CProxySection_SWE_DimensionalSplittingCharm
sendCopyLayers	src/blocks/SWE_DimensionalSplittingCharm.cpp	/^void SWE_DimensionalSplittingCharm::sendCopyLayers(bool sendBathymetry) {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
setBathBuffer	src/opengl/simulation.cu	/^void Simulation::setBathBuffer(float* bath) {$/;"	f	typeref:typename:void Simulation::
setBathymetry	src/blocks/SWE_Block_common.cpp	/^void SWE_Block::setBathymetry(float (*_b)(float, float)) {$/;"	f	class:SWE_Block	typeref:typename:void
setBathymetry	src/blocks/SWE_Block_common.cpp	/^void SWE_Block::setBathymetry(float _b) {$/;"	f	class:SWE_Block	typeref:typename:void
setBoundaryBathymetry	src/blocks/SWE_Block_common.cpp	/^void SWE_Block::setBoundaryBathymetry()$/;"	f	class:SWE_Block	typeref:typename:void
setBoundaryConditions	src/blocks/cuda/SWE_BlockCUDA.cu	/^void SWE_BlockCUDA::setBoundaryConditions() {$/;"	f	typeref:typename:void SWE_BlockCUDA::
setBoundaryType	src/blocks/SWE_Block.hh	/^void SWE_Block<T>::setBoundaryType(Boundary boundary, BoundaryType type) {$/;"	f	class:SWE_Block	typeref:typename:void
setBoundaryType	src/blocks/SWE_Block_common.cpp	/^void SWE_Block::setBoundaryType($/;"	f	class:SWE_Block	typeref:typename:void
setBufferData	src/opengl/vbo.h	/^	void setBufferData(GLsizei size, const void* data,$/;"	f	class:VBO	typeref:typename:void
setCamera	src/opengl/camera.cpp	/^void Camera::setCamera() {$/;"	f	class:Camera	typeref:typename:void
setDischarge	src/blocks/SWE_Block_common.cpp	/^void SWE_Block::setDischarge(float (*_u)(float, float), float (*_v)(float, float)) {$/;"	f	class:SWE_Block	typeref:typename:void
setDryTolerance	src/solvers/WavePropagation.hpp	/^    void setDryTolerance( const T i_dryTolerance ) {$/;"	f	class:solver::WavePropagation	typeref:typename:void
setDryTolerance	submodules/swe_solvers/src/solver/WavePropagation.hpp	/^    void setDryTolerance( const T i_dryTolerance ) {$/;"	f	class:solver::WavePropagation	typeref:typename:void
setGhostLayer	src/blocks/SWE_Block_common.cpp	/^void SWE_Block::setGhostLayer() {$/;"	f	class:SWE_Block	typeref:typename:void
setGhostLayer	src/blocks/SWE_DimensionalSplitting.cpp	/^void SWE_DimensionalSplitting::setGhostLayer() {$/;"	f	class:SWE_DimensionalSplitting	typeref:typename:void
setGhostLayer	src/blocks/SWE_DimensionalSplittingCharm.cpp	/^void SWE_DimensionalSplittingCharm::setGhostLayer() {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
setGhostLayer	src/blocks/SWE_DimensionalSplittingMpi.cpp	/^void SWE_DimensionalSplittingMpi::setGhostLayer() {$/;"	f	class:SWE_DimensionalSplittingMpi	typeref:typename:void
setGhostLayer	src/blocks/SWE_DimensionalSplittingUpcxx.cpp	/^void SWE_DimensionalSplittingUpcxx::setGhostLayer() {$/;"	f	class:SWE_DimensionalSplittingUpcxx	typeref:typename:void
setProcessRank	src/tools/Logger.hh	/^    void setProcessRank( const int i_processRank ) {$/;"	f	class:tools::Logger	typeref:typename:void
setProjection	src/opengl/visualization.cpp	/^void Visualization::setProjection()$/;"	f	class:Visualization	typeref:typename:void
setReductionClient	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline void setReductionClient(CkReductionClientFn fn,void *param=NULL) const$/;"	f	class:CProxyElement_SWE_DimensionalSplittingCharm	typeref:typename:void
setReductionClient	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline void setReductionClient(CkReductionClientFn fn,void *param=NULL) const$/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:void
setReductionClient	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    inline void setReductionClient(CkReductionClientFn fn,void *param=NULL) const$/;"	f	class:CProxy_SWE_DimensionalSplittingCharm	typeref:typename:void
setReductionClient	src/blocks/SWE_DimensionalSplittingCharm.decl.h	/^    void setReductionClient(CkCallback *cb) {$/;"	f	class:CProxySection_SWE_DimensionalSplittingCharm	typeref:typename:void
setRenderingMode	src/opengl/visualization.cpp	/^void Visualization::setRenderingMode(RenderMode mode) {$/;"	f	class:Visualization	typeref:typename:void
setUniform	src/opengl/shader.h	/^	void setUniform(GLint location, GLfloat value)$/;"	f	class:Shader	typeref:typename:void
setWaterHeight	src/blocks/SWE_Block_common.cpp	/^void SWE_Block::setWaterHeight(float (*_h)(float, float)) {$/;"	f	class:SWE_Block	typeref:typename:void
shadersLoaded	src/opengl/shader.cpp	/^bool Shader::shadersLoaded() {$/;"	f	class:Shader	typeref:typename:bool
shdrLoaded	src/opengl/shader.h	/^	bool shdrLoaded;$/;"	m	class:Shader	typeref:typename:bool
shdrSupport	src/opengl/shader.cpp	/^bool Shader::shdrSupport = false;$/;"	m	class:Shader	typeref:typename:bool
shdrSupport	src/opengl/shader.h	/^	static bool shdrSupport;$/;"	m	class:Shader	typeref:typename:bool
showNextText	src/opengl/text.h	/^	bool showNextText(SDL_Rect &location)$/;"	f	class:Text	typeref:typename:bool
simulate	src/blocks/SWE_WavePropagationBlockSIMD.cpp	/^SWE_WavePropagationBlockSIMD::simulate (float i_tStart, float i_tEnd)$/;"	f	class:SWE_WavePropagationBlockSIMD	typeref:typename:float
simulate	src/blocks/cuda/SWE_WavePropagationBlockCuda.cu	/^float SWE_WavePropagationBlockCuda::simulate(float tStart, float tEnd) {$/;"	f	typeref:typename:float SWE_WavePropagationBlockCuda::
simulate	src/blocks/rusanov/SWE_RusanovBlock.cpp	/^float SWE_RusanovBlock::simulate(float tStart, float tEnd) {$/;"	f	class:SWE_RusanovBlock	typeref:typename:float
simulate	src/blocks/rusanov/SWE_RusanovBlockCUDA.cu	/^float SWE_RusanovBlockCUDA::simulate(float tStart, float tEnd) {$/;"	f	typeref:typename:float SWE_RusanovBlockCUDA::
simulateTimestep	src/blocks/SWE_WavePropagationBlockSIMD.cpp	/^SWE_WavePropagationBlockSIMD::simulateTimestep (float dt)$/;"	f	class:SWE_WavePropagationBlockSIMD	typeref:typename:void
simulateTimestep	src/blocks/cuda/SWE_WavePropagationBlockCuda.cu	/^void SWE_WavePropagationBlockCuda::simulateTimestep(float i_dT) {$/;"	f	typeref:typename:void SWE_WavePropagationBlockCuda::
simulateTimestep	src/blocks/rusanov/SWE_RusanovBlock.cpp	/^void SWE_RusanovBlock::simulateTimestep(float dt) {$/;"	f	class:SWE_RusanovBlock	typeref:typename:void
simulateTimestep	src/blocks/rusanov/SWE_RusanovBlockCUDA.cu	/^void SWE_RusanovBlockCUDA::simulateTimestep(float dt) {$/;"	f	typeref:typename:void SWE_RusanovBlockCUDA::
simulate_ampi	Makefile	/^simulate_ampi:$/;"	t
simulate_charm	Makefile	/^simulate_charm:$/;"	t
simulate_charm_test	Makefile	/^simulate_charm_test:$/;"	t
simulate_mpi	Makefile	/^simulate_mpi:$/;"	t
simulate_smp	Makefile	/^simulate_smp:$/;"	t
simulate_upcxx	Makefile	/^simulate_upcxx:$/;"	t
simulate_upcxx_test	Makefile	/^simulate_upcxx_test:$/;"	t
simulatedTimesteps	src/scenarios/SWE_TsunamiScenario.hh	/^		int simulatedTimesteps;$/;"	m	class:SWE_TsunamiScenario	typeref:typename:int
simulation	src/opengl/controller.h	/^	Simulation* simulation;$/;"	m	class:Controller	typeref:typename:Simulation *
simulationDuration	src/examples/swe_charm.cpp	/^\/* readonly *\/ float simulationDuration;$/;"	v	typeref:typename:float
size	src/tools/Float1D.hh	/^		int size;$/;"	m	class:Float1D	typeref:typename:int
size	src/types/BlockConnectInterface.hh	/^	int size;$/;"	m	struct:BlockConnectInterface	typeref:typename:int
size	submodules/swe_solvers/unit_tests/scripts/create_nc_testphi.m	/^size = randomSize+wallSize;$/;"	v
size	submodules/swe_solvers/unit_tests/scripts/main.m	/^size = create_nc_testphi(path)$/;"	v
smp	Makefile	/^smp:$/;"	t
solveLinearEquation	src/solvers/AugRie.hpp	/^    static inline void solveLinearEquation( const T i_matrix[3][3],$/;"	f	class:solver::AugRie	typeref:typename:void
solveLinearEquation	src/solvers/AugRie_SIMD.hpp	/^	solveLinearEquation (const real i_matrix[3][3],$/;"	f	class:solver::AugRie_SIMD	typeref:typename:void
solveLinearEquation	submodules/swe_solvers/src/solver/AugRie.hpp	/^    static inline void solveLinearEquation( const T i_matrix[3][3],$/;"	f	class:solver::AugRie	typeref:typename:void
solveLinearEquation	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	solveLinearEquation (const real i_matrix[3][3],$/;"	f	class:solver::AugRie_SIMD	typeref:typename:void
solveLinearEquation_SIMD	src/solvers/AugRie_SIMD.hpp	/^	solveLinearEquation_SIMD ($/;"	f	class:solver::AugRie_SIMD	typeref:typename:void
solveLinearEquation_SIMD	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	solveLinearEquation_SIMD ($/;"	f	class:solver::AugRie_SIMD	typeref:typename:void
solver	build/options/SWE_gnu.py	/^solver='fwave'$/;"	v
solver	build/options/SWE_gnu_cuda.py	/^solver='fwave'$/;"	v
solver	build/options/SWE_gnu_cuda_asagi_openGL.py	/^solver='augrie'$/;"	v
solver	build/options/SWE_gnu_cuda_openGL.py	/^solver='fwave'$/;"	v
solver	build/options/SWE_gnu_mpi.py	/^solver='fwave'$/;"	v
solver	build/options/SWE_gnu_mpi_asagi.py	/^solver='fwave'$/;"	v
solver	build/options/SWE_gnu_mpi_with_cuda.py	/^solver='fwave'$/;"	v
solver	build/options/SWE_intel_mpi.py	/^solver='fwave'$/;"	v
solver	build/options/SWE_intel_mpi_vectorized.py	/^solver='fwavevec'$/;"	v
solver	src/blocks/SWE_DimensionalSplitting.hh	/^		solver::Hybrid<float> solver;$/;"	m	class:SWE_DimensionalSplitting	typeref:typename:solver::Hybrid<float>
solver	src/blocks/SWE_DimensionalSplittingCharm.hh	/^		solver::Hybrid<float> solver;$/;"	m	class:SWE_DimensionalSplittingCharm	typeref:typename:solver::Hybrid<float>
solver	src/blocks/SWE_DimensionalSplittingMpi.hh	/^		solver::Hybrid<float> solver;$/;"	m	class:SWE_DimensionalSplittingMpi	typeref:typename:solver::Hybrid<float>
solver	src/blocks/SWE_DimensionalSplittingUpcxx.hh	/^		solver::Hybrid<float> solver;$/;"	m	class:SWE_DimensionalSplittingUpcxx	typeref:typename:solver::Hybrid<float>
solver	src/solvers/AugRie.hpp	/^namespace solver {$/;"	n
solver	src/solvers/AugRieFun.hpp	/^namespace solver$/;"	n
solver	src/solvers/AugRie_SIMD.hpp	/^namespace solver {$/;"	n
solver	src/solvers/FWave.hpp	/^namespace solver {$/;"	n
solver	src/solvers/FWaveVec.hpp	/^namespace solver$/;"	n
solver	src/solvers/Hybrid.hpp	/^namespace solver {$/;"	n
solver	src/solvers/WavePropagation.hpp	/^namespace solver {$/;"	n
solver	submodules/swe_solvers/src/solver/AugRie.hpp	/^namespace solver {$/;"	n
solver	submodules/swe_solvers/src/solver/AugRieFun.hpp	/^namespace solver$/;"	n
solver	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^namespace solver {$/;"	n
solver	submodules/swe_solvers/src/solver/FWave.hpp	/^namespace solver {$/;"	n
solver	submodules/swe_solvers/src/solver/FWaveVec.hpp	/^namespace solver$/;"	n
solver	submodules/swe_solvers/src/solver/Hybrid.hpp	/^namespace solver {$/;"	n
solver	submodules/swe_solvers/src/solver/WavePropagation.hpp	/^namespace solver {$/;"	n
sources	paraview/netcdf_swe.py	/^sources = []$/;"	v
sqrt_g	src/solvers/AugRie.hpp	/^    T sqrt_g;$/;"	m	class:solver::AugRie	typeref:typename:T
sqrt_g	src/solvers/AugRieFun.hpp	/^	const real sqrt_g;       \/\/ square root of the gravity constant $/;"	m	class:solver::AugRieFun	typeref:typename:const real
sqrt_g	src/solvers/AugRie_SIMD.hpp	/^	const real sqrt_g;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const real
sqrt_g	submodules/swe_solvers/src/solver/AugRie.hpp	/^    T sqrt_g;$/;"	m	class:solver::AugRie	typeref:typename:T
sqrt_g	submodules/swe_solvers/src/solver/AugRieFun.hpp	/^	const real sqrt_g;       \/\/ square root of the gravity constant $/;"	m	class:solver::AugRieFun	typeref:typename:const real
sqrt_g	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	const real sqrt_g;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const real
sqrt_g_hLeft	src/solvers/AugRie.hpp	/^    T sqrt_g_hLeft;$/;"	m	class:solver::AugRie	typeref:typename:T
sqrt_g_hLeft	src/solvers/AugRie_SIMD.hpp	/^	real sqrt_g_hLeft;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real
sqrt_g_hLeft	submodules/swe_solvers/src/solver/AugRie.hpp	/^    T sqrt_g_hLeft;$/;"	m	class:solver::AugRie	typeref:typename:T
sqrt_g_hLeft	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	real sqrt_g_hLeft;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real
sqrt_g_hLeft_v	src/solvers/AugRie_SIMD.hpp	/^	real_vector sqrt_g_hLeft_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real_vector
sqrt_g_hLeft_v	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	real_vector sqrt_g_hLeft_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real_vector
sqrt_g_hRight	src/solvers/AugRie.hpp	/^    T sqrt_g_hRight;$/;"	m	class:solver::AugRie	typeref:typename:T
sqrt_g_hRight	src/solvers/AugRie_SIMD.hpp	/^	real sqrt_g_hRight;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real
sqrt_g_hRight	submodules/swe_solvers/src/solver/AugRie.hpp	/^    T sqrt_g_hRight;$/;"	m	class:solver::AugRie	typeref:typename:T
sqrt_g_hRight	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	real sqrt_g_hRight;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real
sqrt_g_hRight_v	src/solvers/AugRie_SIMD.hpp	/^	real_vector sqrt_g_hRight_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real_vector
sqrt_g_hRight_v	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	real_vector sqrt_g_hRight_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real_vector
sqrt_g_v	src/solvers/AugRie_SIMD.hpp	/^	const real_vector sqrt_g_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const real_vector
sqrt_g_v	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	const real_vector sqrt_g_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const real_vector
sqrt_gravity	src/solvers/FWaveVec.hpp	/^	const T sqrt_gravity; \/\/ square root of the gravity constant $/;"	m	class:solver::FWaveVec	typeref:typename:const T
sqrt_gravity	submodules/swe_solvers/src/solver/FWaveVec.hpp	/^	const T sqrt_gravity; \/\/ square root of the gravity constant $/;"	m	class:solver::FWaveVec	typeref:typename:const T
sqrt_hLeft	src/solvers/AugRie.hpp	/^    T sqrt_hLeft;$/;"	m	class:solver::AugRie	typeref:typename:T
sqrt_hLeft	src/solvers/AugRie_SIMD.hpp	/^	real sqrt_hLeft;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real
sqrt_hLeft	submodules/swe_solvers/src/solver/AugRie.hpp	/^    T sqrt_hLeft;$/;"	m	class:solver::AugRie	typeref:typename:T
sqrt_hLeft	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	real sqrt_hLeft;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real
sqrt_hLeft_v	src/solvers/AugRie_SIMD.hpp	/^	real_vector sqrt_hLeft_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real_vector
sqrt_hLeft_v	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	real_vector sqrt_hLeft_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real_vector
sqrt_hRight	src/solvers/AugRie.hpp	/^    T sqrt_hRight;$/;"	m	class:solver::AugRie	typeref:typename:T
sqrt_hRight	src/solvers/AugRie_SIMD.hpp	/^	real sqrt_hRight;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real
sqrt_hRight	submodules/swe_solvers/src/solver/AugRie.hpp	/^    T sqrt_hRight;$/;"	m	class:solver::AugRie	typeref:typename:T
sqrt_hRight	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	real sqrt_hRight;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real
sqrt_hRight_v	src/solvers/AugRie_SIMD.hpp	/^	real_vector sqrt_hRight_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real_vector
sqrt_hRight_v	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	real_vector sqrt_hRight_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real_vector
startIndex	src/types/BlockConnectInterface.hh	/^	int startIndex;$/;"	m	struct:BlockConnectInterface	typeref:typename:int
startPanning	src/opengl/camera.cpp	/^void Camera::startPanning(int xPos, int yPos) {$/;"	f	class:Camera	typeref:typename:void
startTextMode	src/opengl/text.h	/^	void startTextMode()$/;"	f	class:Text	typeref:typename:void
startTime	src/blocks/SWE_DimensionalSplitting.hh	/^		struct timespec startTime;$/;"	m	class:SWE_DimensionalSplitting	typeref:struct:timespec
startTime	src/blocks/SWE_DimensionalSplittingCharm.hh	/^		struct timespec startTime;$/;"	m	class:SWE_DimensionalSplittingCharm	typeref:struct:timespec
startTime	src/blocks/SWE_DimensionalSplittingMpi.hh	/^		struct timespec startTime;$/;"	m	class:SWE_DimensionalSplittingMpi	typeref:struct:timespec
startTime	src/blocks/SWE_DimensionalSplittingUpcxx.hh	/^		struct timespec startTime;$/;"	m	class:SWE_DimensionalSplittingUpcxx	typeref:struct:timespec
startTimeCompute	src/blocks/SWE_DimensionalSplittingCharm.hh	/^		struct timespec startTimeCompute;$/;"	m	class:SWE_DimensionalSplittingCharm	typeref:struct:timespec
storeParameters	src/solvers/WavePropagation.hpp	/^    inline void storeParameters( const T &i_hLeft,  const T &i_hRight,$/;"	f	class:solver::WavePropagation	typeref:typename:void
storeParameters	submodules/swe_solvers/src/solver/WavePropagation.hpp	/^    inline void storeParameters( const T &i_hLeft,  const T &i_hRight,$/;"	f	class:solver::WavePropagation	typeref:typename:void
stride	src/tools/Float1D.hh	/^		int stride;$/;"	m	class:Float1D	typeref:typename:int
stride	src/types/BlockConnectInterface.hh	/^	int stride;$/;"	m	struct:BlockConnectInterface	typeref:typename:int
swe_charm	src/examples/swe_charm.cpp	/^swe_charm::swe_charm(CkArgMsg *msg) {$/;"	f	class:swe_charm
swe_charm	src/examples/swe_charm.cpp	/^swe_charm::swe_charm(CkMigrateMessage *msg) {}$/;"	f	class:swe_charm
swe_charm	src/examples/swe_charm.hh	/^class swe_charm : public CBase_swe_charm {$/;"	c
swe_charm_SDAG_CODE	src/examples/swe_charm.decl.h	/^#define swe_charm_SDAG_CODE /;"	d
swe_solvers	submodules/swe_solvers/README.md	/^swe_solvers$/;"	c
synchAfterWrite	src/blocks/SWE_Block_common.cpp	/^void SWE_Block::synchAfterWrite() {$/;"	f	class:SWE_Block	typeref:typename:void
synchAfterWrite	src/blocks/cuda/SWE_BlockCUDA.cu	/^void SWE_BlockCUDA::synchAfterWrite() {$/;"	f	typeref:typename:void SWE_BlockCUDA::
synchBathymetryAfterWrite	src/blocks/SWE_Block_common.cpp	/^void SWE_Block::synchBathymetryAfterWrite() {}$/;"	f	class:SWE_Block	typeref:typename:void
synchBathymetryAfterWrite	src/blocks/cuda/SWE_BlockCUDA.cu	/^void SWE_BlockCUDA::synchBathymetryAfterWrite() {$/;"	f	typeref:typename:void SWE_BlockCUDA::
synchBathymetryBeforeRead	src/blocks/SWE_Block_common.cpp	/^void SWE_Block::synchBathymetryBeforeRead() {}$/;"	f	class:SWE_Block	typeref:typename:void
synchBathymetryBeforeRead	src/blocks/cuda/SWE_BlockCUDA.cu	/^void SWE_BlockCUDA::synchBathymetryBeforeRead() {$/;"	f	typeref:typename:void SWE_BlockCUDA::
synchBeforeRead	src/blocks/SWE_Block_common.cpp	/^void SWE_Block::synchBeforeRead() {$/;"	f	class:SWE_Block	typeref:typename:void
synchBeforeRead	src/blocks/cuda/SWE_BlockCUDA.cu	/^void SWE_BlockCUDA::synchBeforeRead() {$/;"	f	typeref:typename:void SWE_BlockCUDA::
synchCopyLayerBeforeRead	src/blocks/SWE_Block_common.cpp	/^void SWE_Block::synchCopyLayerBeforeRead() {}$/;"	f	class:SWE_Block	typeref:typename:void
synchCopyLayerBeforeRead	src/blocks/cuda/SWE_BlockCUDA.cu	/^void SWE_BlockCUDA::synchCopyLayerBeforeRead() {$/;"	f	typeref:typename:void SWE_BlockCUDA::
synchDischargeAfterWrite	src/blocks/SWE_Block_common.cpp	/^void SWE_Block::synchDischargeAfterWrite() {}$/;"	f	class:SWE_Block	typeref:typename:void
synchDischargeAfterWrite	src/blocks/cuda/SWE_BlockCUDA.cu	/^void SWE_BlockCUDA::synchDischargeAfterWrite() {$/;"	f	typeref:typename:void SWE_BlockCUDA::
synchDischargeBeforeRead	src/blocks/SWE_Block_common.cpp	/^void SWE_Block::synchDischargeBeforeRead() {}$/;"	f	class:SWE_Block	typeref:typename:void
synchDischargeBeforeRead	src/blocks/cuda/SWE_BlockCUDA.cu	/^void SWE_BlockCUDA::synchDischargeBeforeRead() {$/;"	f	typeref:typename:void SWE_BlockCUDA::
synchGhostLayerAfterWrite	src/blocks/SWE_Block_common.cpp	/^void SWE_Block::synchGhostLayerAfterWrite() {}$/;"	f	class:SWE_Block	typeref:typename:void
synchGhostLayerAfterWrite	src/blocks/cuda/SWE_BlockCUDA.cu	/^void SWE_BlockCUDA::synchGhostLayerAfterWrite() {$/;"	f	typeref:typename:void SWE_BlockCUDA::
synchWaterHeightAfterWrite	src/blocks/SWE_Block_common.cpp	/^void SWE_Block::synchWaterHeightAfterWrite() {}$/;"	f	class:SWE_Block	typeref:typename:void
synchWaterHeightAfterWrite	src/blocks/cuda/SWE_BlockCUDA.cu	/^void SWE_BlockCUDA::synchWaterHeightAfterWrite() {$/;"	f	typeref:typename:void SWE_BlockCUDA::
synchWaterHeightBeforeRead	src/blocks/SWE_Block_common.cpp	/^void SWE_Block::synchWaterHeightBeforeRead() {}$/;"	f	class:SWE_Block	typeref:typename:void
synchWaterHeightBeforeRead	src/blocks/cuda/SWE_BlockCUDA.cu	/^void SWE_BlockCUDA::synchWaterHeightBeforeRead() {$/;"	f	typeref:typename:void SWE_BlockCUDA::
table	paraview/netcdf_swe.py	/^table = GetLookupTableForArray( "Result", 1, RGBPoints=[-1.0, 0.23, 0.299, 0.754, 2.0, 0.706, 0./;"	v
test	Makefile	/^test: test\/runner ncgen_test$/;"	t
test/runner	Makefile	/^test\/runner: test\/runner.cpp$/;"	t
test/runner.cpp	Makefile	/^test\/runner.cpp: test\/*.h$/;"	t
testFileName	submodules/swe_solvers/src/unit_tests/ComponentsTest.h	/^  const std::string testFileName;$/;"	m	class:ComponentsTest	typeref:typename:const std::string
testPhi	submodules/swe_solvers/src/unit_tests/ComponentsTest.h	/^  double** testPhi;$/;"	m	class:ComponentsTest	typeref:typename:double **
testPhiRandomSamples	submodules/swe_solvers/src/unit_tests/ComponentsTest.h	/^  const int testPhiRandomSamples;$/;"	m	class:ComponentsTest	typeref:typename:const int
testPhiSize	submodules/swe_solvers/src/unit_tests/ComponentsTest.h	/^  const int testPhiSize;$/;"	m	class:ComponentsTest	typeref:typename:const int
testPhiWallSamples	submodules/swe_solvers/src/unit_tests/ComponentsTest.h	/^  const int testPhiWallSamples;$/;"	m	class:ComponentsTest	typeref:typename:const int
text	src/opengl/visualization.h	/^	Text* text;$/;"	m	class:Visualization	typeref:typename:Text *
textures	src/opengl/text.h	/^	std::vector<GLuint> textures;$/;"	m	class:Text	typeref:typename:std::vector<GLuint>
timeCout	src/tools/Logger.hh	/^  std::ostream& timeCout() {$/;"	f	class:tools::Logger	typeref:typename:std::ostream &
timeStep	src/writer/Writer.hh	/^		size_t timeStep;$/;"	m	class:Writer	typeref:typename:size_t
timeVar	src/writer/NetCdfWriter.hh	/^		int timeVar, hVar, huVar, hvVar, bVar;$/;"	m	class:NetCdfWriter	typeref:typename:int
time_needed	src/blocks/SWE_WavePropagationBlockSIMD.hh	/^	double time_needed;$/;"	m	class:SWE_WavePropagationBlockSIMD	typeref:typename:double
timer	src/tools/Logger.hh	/^  std::map<std::string, double> timer;$/;"	m	class:tools::Logger	typeref:typename:std::map<std::string,double>
toggleRenderingMode	src/opengl/visualization.cpp	/^void Visualization::toggleRenderingMode() {$/;"	f	class:Visualization	typeref:typename:void
toogleLoop	src/opengl/simulation.h	/^    void toogleLoop() { loop = !loop; }$/;"	f	class:Simulation	typeref:typename:void
tools	src/tools/Logger.hh	/^namespace tools {$/;"	n
tools	src/tools/ProgressBar.hh	/^namespace tools$/;"	n
tools	src/tools/args.hh	/^namespace tools$/;"	n
topCopyLayer	src/blocks/cuda/SWE_BlockCUDA.hh	/^    SWE_Block1D* topCopyLayer;$/;"	m	class:SWE_BlockCUDA	typeref:typename:SWE_Block1D *
topGhostLayer	src/blocks/cuda/SWE_BlockCUDA.hh	/^    SWE_Block1D* topGhostLayer;$/;"	m	class:SWE_BlockCUDA	typeref:typename:SWE_Block1D *
topLayer	src/blocks/cuda/SWE_BlockCUDA.hh	/^    float* topLayer;$/;"	m	class:SWE_BlockCUDA	typeref:typename:float *
topLayerDevice	src/blocks/cuda/SWE_BlockCUDA.hh	/^    float* topLayerDevice;$/;"	m	class:SWE_BlockCUDA	typeref:typename:float *
tryCUDA	src/blocks/cuda/SWE_BlockCUDA.cu	/^void tryCUDA(cudaError_t err, const char *msg)$/;"	f	typeref:typename:void
uLeft	src/solvers/WavePropagation.hpp	/^    T uLeft;$/;"	m	class:solver::WavePropagation	typeref:typename:T
uLeft	submodules/swe_solvers/src/solver/WavePropagation.hpp	/^    T uLeft;$/;"	m	class:solver::WavePropagation	typeref:typename:T
uLeft	submodules/swe_solvers/src/unit_tests/ComponentsTest.h	/^  double hLeft, hRight, uLeft, uRight;$/;"	m	class:ComponentsTest	typeref:typename:double
uLeft_v	src/solvers/AugRie_SIMD.hpp	/^	real_vector uLeft_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real_vector
uLeft_v	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	real_vector uLeft_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real_vector
uRight	src/solvers/WavePropagation.hpp	/^    T uRight;$/;"	m	class:solver::WavePropagation	typeref:typename:T
uRight	submodules/swe_solvers/src/solver/WavePropagation.hpp	/^    T uRight;$/;"	m	class:solver::WavePropagation	typeref:typename:T
uRight	submodules/swe_solvers/src/unit_tests/ComponentsTest.h	/^  double hLeft, hRight, uLeft, uRight;$/;"	m	class:ComponentsTest	typeref:typename:double
uRight_v	src/solvers/AugRie_SIMD.hpp	/^	real_vector uRight_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real_vector
uRight_v	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	real_vector uRight_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:real_vector
unpack	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^copyLayer* CMessage_copyLayer::unpack(void* buf) {$/;"	f	class:CMessage_copyLayer	typeref:typename:copyLayer *
upcxx	Makefile	/^upcxx:$/;"	t
upcxx_hybrid	Makefile	/^upcxx_hybrid:$/;"	t
update	src/tools/ProgressBar.hh	/^	void update(float done)$/;"	f	class:tools::ProgressBar	typeref:typename:void
updateBathymetryVBO	src/opengl/visualization.cpp	/^void Visualization::updateBathymetryVBO(Simulation &sim) {$/;"	f	class:Visualization	typeref:typename:void
updateBathymetryWithDynamicDisplacement	src/blocks/SWE_WaveAccumulationBlock.cpp	/^bool SWE_WaveAccumulationBlock::updateBathymetryWithDynamicDisplacement(scenarios::Asagi &i_asag/;"	f	class:SWE_WaveAccumulationBlock	typeref:typename:bool
updateBathymetryWithDynamicDisplacement	src/blocks/SWE_WavePropagationBlockSIMD.cpp	/^SWE_WavePropagationBlockSIMD::updateBathymetryWithDynamicDisplacement (scenarios::Asagi &i_asagi/;"	f	class:SWE_WavePropagationBlockSIMD	typeref:typename:bool
updateTime	src/tools/Logger.hh	/^    void updateTime(const std::string &i_name) {$/;"	f	class:tools::Logger	typeref:typename:void
updateUnknowns	src/blocks/SWE_DimensionalSplitting.cpp	/^void SWE_DimensionalSplitting::updateUnknowns (float dt) {$/;"	f	class:SWE_DimensionalSplitting	typeref:typename:void
updateUnknowns	src/blocks/SWE_DimensionalSplittingCharm.cpp	/^void SWE_DimensionalSplittingCharm::updateUnknowns(float dt) {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
updateUnknowns	src/blocks/SWE_DimensionalSplittingMpi.cpp	/^void SWE_DimensionalSplittingMpi::updateUnknowns (float dt) {$/;"	f	class:SWE_DimensionalSplittingMpi	typeref:typename:void
updateUnknowns	src/blocks/SWE_DimensionalSplittingUpcxx.cpp	/^void SWE_DimensionalSplittingUpcxx::updateUnknowns (float dt) {$/;"	f	class:SWE_DimensionalSplittingUpcxx	typeref:typename:void
updateUnknowns	src/blocks/SWE_WaveAccumulationBlock.cpp	/^void SWE_WaveAccumulationBlock::updateUnknowns(float dt) {$/;"	f	class:SWE_WaveAccumulationBlock	typeref:typename:void
updateUnknowns	src/blocks/SWE_WavePropagationBlock.cpp	/^SWE_WavePropagationBlock::updateUnknowns (float dt)$/;"	f	class:SWE_WavePropagationBlock	typeref:typename:void
updateUnknowns	src/blocks/SWE_WavePropagationBlockSIMD.cpp	/^SWE_WavePropagationBlockSIMD::updateUnknowns (float dt)$/;"	f	class:SWE_WavePropagationBlockSIMD	typeref:typename:void
updateUnknowns	src/blocks/cuda/SWE_WavePropagationBlockCuda.cu	/^void SWE_WavePropagationBlockCuda::updateUnknowns(const float i_deltaT) {$/;"	f	typeref:typename:void SWE_WavePropagationBlockCuda::
updateUnknowns	src/blocks/rusanov/SWE_RusanovBlock.cpp	/^void SWE_RusanovBlock::updateUnknowns(float dt) {$/;"	f	class:SWE_RusanovBlock	typeref:typename:void
updateUnknowns	src/blocks/rusanov/SWE_RusanovBlockCUDA.cu	/^void SWE_RusanovBlockCUDA::updateUnknowns(float dt) {$/;"	f	typeref:typename:void SWE_RusanovBlockCUDA::
updateUnknownsKernel	src/blocks/cuda/SWE_WavePropagationBlockCuda_kernels.cu	/^void updateUnknownsKernel($/;"	f	typeref:typename:void
updateVisBuffer	src/opengl/simulation.cu	/^void Simulation::updateVisBuffer(float3* _visBuffer) {$/;"	f	typeref:typename:void Simulation::
useAugmentedRiemannSolver	src/solvers/Hybrid.hpp	/^    bool useAugmentedRiemannSolver( const T &i_hLeft,  const T &i_hRight,$/;"	f	class:solver::Hybrid	typeref:typename:bool
useAugmentedRiemannSolver	submodules/swe_solvers/src/solver/Hybrid.hpp	/^    bool useAugmentedRiemannSolver( const T &i_hLeft,  const T &i_hRight,$/;"	f	class:solver::Hybrid	typeref:typename:bool
valgrind	Makefile	/^valgrind: test\/runner.cpp$/;"	t
value	src/tools/args.hh	/^		std::string value;$/;"	m	struct:tools::Args::optionInfo	typeref:typename:std::string
valueConvert	src/tools/args.hh	/^	struct valueConvert {$/;"	s	class:tools::Args
varid	submodules/swe_solvers/unit_tests/scripts/create_nc_testphi.m	/^  varid = netcdf.inqVarID(ncid,'hHigh');$/;"	v
varid	submodules/swe_solvers/unit_tests/scripts/create_nc_testphi.m	/^  varid = netcdf.inqVarID(ncid,'hLow');$/;"	v
varid	submodules/swe_solvers/unit_tests/scripts/create_nc_testphi.m	/^  varid = netcdf.inqVarID(ncid,'huHigh');$/;"	v
varid	submodules/swe_solvers/unit_tests/scripts/create_nc_testphi.m	/^  varid = netcdf.inqVarID(ncid,'huLow');$/;"	v
varid	submodules/swe_solvers/unit_tests/scripts/main.m	/^varid = netcdf.inqVarID(ncid,'hStar');$/;"	v
vars	buildAll.py	/^vars = collections.OrderedDict({$/;"	v
vboBathColor	src/opengl/visualization.h	/^	VBO vboBathColor;$/;"	m	class:Visualization	typeref:typename:VBO
vboBathymetry	src/opengl/visualization.h	/^	VBO vboBathymetry;$/;"	m	class:Visualization	typeref:typename:VBO
vboNormals	src/opengl/visualization.h	/^	VBO vboNormals;$/;"	m	class:Visualization	typeref:typename:VBO
vboVerticesIndex	src/opengl/visualization.h	/^	VBO vboVerticesIndex;$/;"	m	class:Visualization	typeref:typename:VBO
vboWaterSurface	src/opengl/visualization.h	/^	VBO vboWaterSurface;$/;"	m	class:Visualization	typeref:typename:VBO
vectorize	build/options/SWE_intel_mpi_vectorized.py	/^vectorize='on'$/;"	v
vertexShader	src/opengl/shader.h	/^	GLuint   vertexShader;$/;"	m	class:Shader	typeref:typename:GLuint
vertexShaderLength	src/opengl/shader.h	/^	GLint    vertexShaderLength;$/;"	m	class:Shader	typeref:typename:GLint
vertexShaderSource	src/opengl/shader.h	/^	GLchar * vertexShaderSource;$/;"	m	class:Shader	typeref:typename:GLchar *
viewDistance	src/opengl/camera.cpp	/^void Camera::viewDistance( float viewDistance )$/;"	f	class:Camera	typeref:typename:void
view_distance	src/opengl/camera.h	/^	float view_distance;$/;"	m	class:Camera	typeref:typename:float
virtual_pup	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^void CBase_SWE_DimensionalSplittingCharm::virtual_pup(PUP::er &p) {$/;"	f	class:CBase_SWE_DimensionalSplittingCharm	typeref:typename:void
virtual_pup	src/examples/swe_charm.def.h	/^void CBase_swe_charm::virtual_pup(PUP::er &p) {$/;"	f	class:CBase_swe_charm	typeref:typename:void
visInfos	src/opengl/controller.h	/^	SWE_VisInfo *visInfos[SCENARIO_COUNT];$/;"	m	class:Controller	typeref:typename:SWE_VisInfo * []
visualization	src/opengl/controller.h	/^	Visualization* visualization;$/;"	m	class:Controller	typeref:typename:Visualization *
wScale	src/opengl/visualization.h	/^	float wScale, bScale, bOffset;$/;"	m	class:Visualization	typeref:typename:float
wScaleLocation	src/opengl/visualization.h	/^	GLint wScaleLocation;$/;"	m	class:Visualization	typeref:typename:GLint
wallClockTime	src/tools/Logger.hh	/^  double wallClockTime;$/;"	m	class:tools::Logger	typeref:typename:double
wallSize	submodules/swe_solvers/unit_tests/scripts/create_nc_testphi.m	/^wallSize = input('Please enter the wall sample size: ');$/;"	v
wallTime	src/blocks/SWE_DimensionalSplittingCharm.hh	/^		float wallTime;$/;"	m	class:SWE_DimensionalSplittingCharm	typeref:typename:float
waterHeightAtRest	src/scenarios/SWE_Scenario.hh	/^		virtual float waterHeightAtRest() { return 0; };$/;"	f	class:SWE_Scenario	typeref:typename:float
waterHeightAtRest	src/scenarios/SWE_simple_scenarios.hh	/^    float waterHeightAtRest() { return 4.0f; };$/;"	f	class:SWE_SplashingConeScenario	typeref:typename:float
waterShader	src/opengl/visualization.h	/^	Shader* waterShader;$/;"	m	class:Visualization	typeref:typename:Shader *
waterVerticalScaling	src/scenarios/SWE_AsagiScenario_vis.hh	/^    virtual float waterVerticalScaling() { return 4.0f; };$/;"	f	class:SWE_AsagiJapanSmallVisInfo	typeref:typename:float
waterVerticalScaling	src/scenarios/SWE_VisInfo.hh	/^    virtual float waterVerticalScaling() { return 10.0f; };$/;"	f	class:SWE_VisInfo	typeref:typename:float
wavePropagationSolver	src/blocks/SWE_WaveAccumulationBlock.hh	/^    solver::AugRieFun<float> wavePropagationSolver;$/;"	m	class:SWE_WaveAccumulationBlock	typeref:typename:solver::AugRieFun<float>
wavePropagationSolver	src/blocks/SWE_WavePropagationBlock.hh	/^    solver::Hybrid<float> wavePropagationSolver;$/;"	m	class:SWE_WavePropagationBlock	typeref:typename:solver::Hybrid<float>
wavePropagationSolver	src/blocks/SWE_WavePropagationBlockSIMD.hh	/^	solver::FWave<float> wavePropagationSolver;$/;"	m	class:SWE_WavePropagationBlockSIMD	typeref:typename:solver::FWave<float>
welcomeMessage	src/tools/Logger.hh	/^  const std::string welcomeMessage;$/;"	m	class:tools::Logger	typeref:typename:const std::string
wetDryState	src/solvers/AugRie_SIMD.hpp	/^	integer wetDryState;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:integer
wetDryState	src/solvers/WavePropagation.hpp	/^    WetDryState wetDryState;$/;"	m	class:solver::WavePropagation	typeref:typename:WetDryState
wetDryState	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	integer wetDryState;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:integer
wetDryState	submodules/swe_solvers/src/solver/WavePropagation.hpp	/^    WetDryState wetDryState;$/;"	m	class:solver::WavePropagation	typeref:typename:WetDryState
wetDryState_v	src/solvers/AugRie_SIMD.hpp	/^	integer_vector wetDryState_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:integer_vector
wetDryState_v	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	integer_vector wetDryState_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:integer_vector
width	src/opengl/text.h	/^	std::vector<int> width;$/;"	m	class:Text	typeref:typename:std::vector<int>
win_title	src/opengl/camera.h	/^	const char* win_title;$/;"	m	class:Camera	typeref:typename:const char *
windowHeight	src/opengl/visualization.h	/^	int windowHeight;$/;"	m	class:Visualization	typeref:typename:int
windowWidth	src/opengl/visualization.h	/^	int windowWidth;$/;"	m	class:Visualization	typeref:typename:int
writeNetCDF	build/options/SWE_gnu_cuda_asagi_openGL.py	/^writeNetCDF='yes'$/;"	v
writeNetCDF	build/options/SWE_gnu_mpi.py	/^writeNetCDF='yes'$/;"	v
writeNetCDF	build/options/SWE_gnu_mpi_with_cuda.py	/^writeNetCDF='yes'$/;"	v
writeNetCDF	build/options/SWE_intel_mpi.py	/^writeNetCDF='yes'$/;"	v
writeNetCDF	build/options/SWE_intel_mpi_vectorized.py	/^writeNetCDF='yes'$/;"	v
writeTimeStep	src/writer/NetCdfWriter.cpp	/^void NetCdfWriter::writeTimeStep(const Float2D &i_h,$/;"	f	class:NetCdfWriter	typeref:typename:void
writeTimeStep	src/writer/VtkWriter.cpp	/^void VtkWriter::writeTimeStep($/;"	f	class:VtkWriter	typeref:typename:void
writeTimestep	src/blocks/SWE_DimensionalSplittingCharm.cpp	/^void SWE_DimensionalSplittingCharm::writeTimestep() {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
writeVarTimeDependent	src/writer/NetCdfWriter.cpp	/^void NetCdfWriter::writeVarTimeDependent( const Float2D &i_matrix,$/;"	f	class:NetCdfWriter	typeref:typename:void
writeVarTimeIndependent	src/writer/NetCdfWriter.cpp	/^void NetCdfWriter::writeVarTimeIndependent( const Float2D &i_matrix,$/;"	f	class:NetCdfWriter	typeref:typename:void
writer	src/blocks/SWE_DimensionalSplittingCharm.hh	/^		NetCdfWriter *writer;$/;"	m	class:SWE_DimensionalSplittingCharm	typeref:typename:NetCdfWriter *
xSweep	src/blocks/SWE_DimensionalSplittingCharm.cpp	/^void SWE_DimensionalSplittingCharm::xSweep() {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
ySweep	src/blocks/SWE_DimensionalSplittingCharm.cpp	/^void SWE_DimensionalSplittingCharm::ySweep() {$/;"	f	class:SWE_DimensionalSplittingCharm	typeref:typename:void
zeroTol	src/solvers/AugRieFun.hpp	/^	const real zeroTol;$/;"	m	class:solver::AugRieFun	typeref:typename:const real
zeroTol	src/solvers/FWaveCuda.h	/^const T zeroTol = (T) 0.0000001;$/;"	v	typeref:typename:const T
zeroTol	src/solvers/FWaveVec.hpp	/^	const T zeroTol;$/;"	m	class:solver::FWaveVec	typeref:typename:const T
zeroTol	src/solvers/WavePropagation.hpp	/^    const T zeroTol;$/;"	m	class:solver::WavePropagation	typeref:typename:const T
zeroTol	submodules/swe_solvers/src/solver/AugRieFun.hpp	/^	const real zeroTol;$/;"	m	class:solver::AugRieFun	typeref:typename:const real
zeroTol	submodules/swe_solvers/src/solver/FWaveCuda.h	/^const T zeroTol = (T) 0.0000001;$/;"	v	typeref:typename:const T
zeroTol	submodules/swe_solvers/src/solver/FWaveVec.hpp	/^	const T zeroTol;$/;"	m	class:solver::FWaveVec	typeref:typename:const T
zeroTol	submodules/swe_solvers/src/solver/WavePropagation.hpp	/^    const T zeroTol;$/;"	m	class:solver::WavePropagation	typeref:typename:const T
zeroTol	submodules/swe_solvers/src/unit_tests/ComponentsTest.h	/^  const double zeroTol;$/;"	m	class:ComponentsTest	typeref:typename:const double
zeroTol	submodules/swe_solvers/unit_tests/scripts/calculate_hstar.m	/^zeroTol = 0.00000001;$/;"	v
zeroTol	submodules/swe_solvers/unit_tests/scripts/create_nc_testphi.m	/^zeroTol = 0.00001;$/;"	v
zeroTol_v	src/solvers/AugRie_SIMD.hpp	/^	const real_vector zeroTol_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const real_vector
zeroTol_v	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	const real_vector zeroTol_v;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const real_vector
zeroTol_v_neg	src/solvers/AugRie_SIMD.hpp	/^	const real_vector zeroTol_v_neg;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const real_vector
zeroTol_v_neg	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	const real_vector zeroTol_v_neg;$/;"	m	class:solver::AugRie_SIMD	typeref:typename:const real_vector
zoomIn	src/opengl/camera.cpp	/^void Camera::zoomIn( float scaleFactor ) $/;"	f	class:Camera	typeref:typename:void
zoomOut	src/opengl/camera.cpp	/^void Camera::zoomOut( float scaleFactor ) $/;"	f	class:Camera	typeref:typename:void
zoomfactor	src/opengl/camera.h	/^	float zoomfactor;$/;"	m	class:Camera	typeref:typename:float
~AugRie_SIMD	src/solvers/AugRie_SIMD.hpp	/^	~AugRie_SIMD ()$/;"	f	class:solver::AugRie_SIMD
~AugRie_SIMD	submodules/swe_solvers/src/solver/AugRie_SIMD.hpp	/^	~AugRie_SIMD ()$/;"	f	class:solver::AugRie_SIMD
~ComponentsTest	submodules/swe_solvers/src/unit_tests/ComponentsTest.cpp	/^ComponentsTest::~ComponentsTest() {$/;"	f	class:ComponentsTest
~Controller	src/opengl/controller.cpp	/^Controller::~Controller()$/;"	f	class:Controller
~Float1D	src/tools/Float1D.hh	/^Float1D::~Float1D() {}$/;"	f	class:Float1D
~Float2D	src/tools/Float2D.hh	/^		~Float2D() {}$/;"	f	class:Float2D
~Float2DNative	src/tools/Float2DNative.hh	/^		~Float2DNative() {}$/;"	f	class:Float2DNative
~Float2DUpcxx	src/tools/Float2DUpcxx.hh	/^		~Float2DUpcxx() {}$/;"	f	class:Float2DUpcxx
~Logger	src/tools/Logger.hh	/^    virtual ~Logger() {$/;"	f	class:tools::Logger
~NetCdfWriter	src/writer/NetCdfWriter.cpp	/^NetCdfWriter::~NetCdfWriter() {$/;"	f	class:NetCdfWriter
~SWE_AsagiScenario	src/scenarios/SWE_AsagiScenario.hh	/^		virtual ~SWE_AsagiScenario() {$/;"	f	class:SWE_AsagiScenario
~SWE_Block	src/blocks/SWE_Block.hh	/^SWE_Block<T>::~SWE_Block() {$/;"	f	class:SWE_Block
~SWE_Block	src/blocks/SWE_Block_common.cpp	/^SWE_Block::~SWE_Block() {$/;"	f	class:SWE_Block
~SWE_BlockCUDA	src/blocks/cuda/SWE_BlockCUDA.cu	/^SWE_BlockCUDA::~SWE_BlockCUDA() {$/;"	f	typeref:typename:SWE_BlockCUDA::
~SWE_DimensionalSplitting	src/blocks/SWE_DimensionalSplitting.hh	/^		~SWE_DimensionalSplitting() {};$/;"	f	class:SWE_DimensionalSplitting
~SWE_DimensionalSplittingCharm	src/blocks/SWE_DimensionalSplittingCharm.cpp	/^SWE_DimensionalSplittingCharm::~SWE_DimensionalSplittingCharm() {}$/;"	f	class:SWE_DimensionalSplittingCharm
~SWE_DimensionalSplittingMpi	src/blocks/SWE_DimensionalSplittingMpi.hh	/^		~SWE_DimensionalSplittingMpi() {};$/;"	f	class:SWE_DimensionalSplittingMpi
~SWE_DimensionalSplittingUpcxx	src/blocks/SWE_DimensionalSplittingUpcxx.hh	/^		~SWE_DimensionalSplittingUpcxx() {};$/;"	f	class:SWE_DimensionalSplittingUpcxx
~SWE_RusanovBlock	src/blocks/rusanov/SWE_RusanovBlock.cpp	/^SWE_RusanovBlock::~SWE_RusanovBlock() {$/;"	f	class:SWE_RusanovBlock
~SWE_RusanovBlockCUDA	src/blocks/rusanov/SWE_RusanovBlockCUDA.cu	/^SWE_RusanovBlockCUDA::~SWE_RusanovBlockCUDA() {$/;"	f	typeref:typename:SWE_RusanovBlockCUDA::
~SWE_Scenario	src/scenarios/SWE_Scenario.hh	/^		virtual ~SWE_Scenario() {}$/;"	f	class:SWE_Scenario
~SWE_TsunamiScenario	src/scenarios/SWE_TsunamiScenario.hh	/^		~SWE_TsunamiScenario() {$/;"	f	class:SWE_TsunamiScenario
~SWE_VisInfo	src/scenarios/SWE_VisInfo.hh	/^	virtual ~SWE_VisInfo() {};$/;"	f	class:SWE_VisInfo
~SWE_WaveAccumulationBlock	src/blocks/SWE_WaveAccumulationBlock.hh	/^    virtual ~SWE_WaveAccumulationBlock() {}$/;"	f	class:SWE_WaveAccumulationBlock
~SWE_WavePropagationBlock	src/blocks/SWE_WavePropagationBlock.hh	/^    virtual ~SWE_WavePropagationBlock() {}$/;"	f	class:SWE_WavePropagationBlock
~SWE_WavePropagationBlockCuda	src/blocks/cuda/SWE_WavePropagationBlockCuda.cu	/^SWE_WavePropagationBlockCuda::~SWE_WavePropagationBlockCuda() {$/;"	f	typeref:typename:SWE_WavePropagationBlockCuda::
~SWE_WavePropagationBlockSIMD	src/blocks/SWE_WavePropagationBlockSIMD.hh	/^	~SWE_WavePropagationBlockSIMD ()$/;"	f	class:SWE_WavePropagationBlockSIMD
~Shader	src/opengl/shader.cpp	/^Shader::~Shader() {$/;"	f	class:Shader
~Simulation	src/opengl/simulation.cu	/^Simulation::~Simulation () {$/;"	f	typeref:typename:Simulation::
~Text	src/opengl/text.h	/^	~Text()$/;"	f	class:Text
~Visualization	src/opengl/visualization.cpp	/^Visualization::~Visualization() {$/;"	f	class:Visualization
~WavePropagation	src/solvers/WavePropagation.hpp	/^    virtual ~WavePropagation() {};$/;"	f	class:solver::WavePropagation
~WavePropagation	submodules/swe_solvers/src/solver/WavePropagation.hpp	/^    virtual ~WavePropagation() {};$/;"	f	class:solver::WavePropagation
~Writer	src/writer/Writer.hh	/^		virtual ~Writer() {}$/;"	f	class:Writer
~compute_2_closure	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^      virtual ~compute_2_closure() {$/;"	f	struct:Closure_SWE_DimensionalSplittingCharm::compute_2_closure
~done_2_closure	src/examples/swe_charm.def.h	/^      virtual ~done_2_closure() {$/;"	f	struct:Closure_swe_charm::done_2_closure
~exit_3_closure	src/examples/swe_charm.def.h	/^      virtual ~exit_3_closure() {$/;"	f	struct:Closure_swe_charm::exit_3_closure
~reduceWaveSpeed_8_closure	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^      virtual ~reduceWaveSpeed_8_closure() {$/;"	f	struct:Closure_SWE_DimensionalSplittingCharm::reduceWaveSpeed_8_closure
~reductionTrigger_7_closure	src/blocks/SWE_DimensionalSplittingCharm.def.h	/^      virtual ~reductionTrigger_7_closure() {$/;"	f	struct:Closure_SWE_DimensionalSplittingCharm::reductionTrigger_7_closure
